

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec  8 12:15:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    87                           	dabs	1,0x7E,2
    88  0000                     
    89                           ; Version 2.20
    90                           ; Generated 12/02/2020 GMT
    91                           ; 
    92                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F1829 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  0111                     	;# 
   175  0112                     	;# 
   176  0113                     	;# 
   177  0114                     	;# 
   178  0115                     	;# 
   179  0116                     	;# 
   180  0117                     	;# 
   181  0118                     	;# 
   182  0119                     	;# 
   183  011A                     	;# 
   184  011B                     	;# 
   185  011D                     	;# 
   186  011E                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  018E                     	;# 
   190  0191                     	;# 
   191  0191                     	;# 
   192  0192                     	;# 
   193  0193                     	;# 
   194  0193                     	;# 
   195  0193                     	;# 
   196  0194                     	;# 
   197  0195                     	;# 
   198  0196                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019C                     	;# 
   204  019D                     	;# 
   205  019E                     	;# 
   206  019F                     	;# 
   207  020C                     	;# 
   208  020D                     	;# 
   209  020E                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0214                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0217                     	;# 
   225  0219                     	;# 
   226  021A                     	;# 
   227  021B                     	;# 
   228  021C                     	;# 
   229  021D                     	;# 
   230  021E                     	;# 
   231  021F                     	;# 
   232  0291                     	;# 
   233  0291                     	;# 
   234  0292                     	;# 
   235  0293                     	;# 
   236  0294                     	;# 
   237  0295                     	;# 
   238  0295                     	;# 
   239  0296                     	;# 
   240  0298                     	;# 
   241  0298                     	;# 
   242  0299                     	;# 
   243  029A                     	;# 
   244  029B                     	;# 
   245  029C                     	;# 
   246  029D                     	;# 
   247  029E                     	;# 
   248  0311                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0318                     	;# 
   253  0318                     	;# 
   254  0319                     	;# 
   255  031A                     	;# 
   256  038C                     	;# 
   257  038D                     	;# 
   258  038E                     	;# 
   259  0391                     	;# 
   260  0392                     	;# 
   261  0393                     	;# 
   262  0394                     	;# 
   263  0395                     	;# 
   264  0396                     	;# 
   265  039A                     	;# 
   266  039C                     	;# 
   267  039D                     	;# 
   268  039E                     	;# 
   269  039F                     	;# 
   270  0415                     	;# 
   271  0416                     	;# 
   272  0417                     	;# 
   273  041C                     	;# 
   274  041D                     	;# 
   275  041E                     	;# 
   276  0FE4                     	;# 
   277  0FE5                     	;# 
   278  0FE6                     	;# 
   279  0FE7                     	;# 
   280  0FE8                     	;# 
   281  0FE9                     	;# 
   282  0FEA                     	;# 
   283  0FEB                     	;# 
   284  0FED                     	;# 
   285  0FEE                     	;# 
   286  0FEF                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0093                     	;# 
   323  0094                     	;# 
   324  0095                     	;# 
   325  0096                     	;# 
   326  0097                     	;# 
   327  0098                     	;# 
   328  0099                     	;# 
   329  009A                     	;# 
   330  009B                     	;# 
   331  009B                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  0111                     	;# 
   339  0112                     	;# 
   340  0113                     	;# 
   341  0114                     	;# 
   342  0115                     	;# 
   343  0116                     	;# 
   344  0117                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011A                     	;# 
   348  011B                     	;# 
   349  011D                     	;# 
   350  011E                     	;# 
   351  018C                     	;# 
   352  018D                     	;# 
   353  018E                     	;# 
   354  0191                     	;# 
   355  0191                     	;# 
   356  0192                     	;# 
   357  0193                     	;# 
   358  0193                     	;# 
   359  0193                     	;# 
   360  0194                     	;# 
   361  0195                     	;# 
   362  0196                     	;# 
   363  0199                     	;# 
   364  019A                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019D                     	;# 
   369  019E                     	;# 
   370  019F                     	;# 
   371  020C                     	;# 
   372  020D                     	;# 
   373  020E                     	;# 
   374  0211                     	;# 
   375  0211                     	;# 
   376  0212                     	;# 
   377  0212                     	;# 
   378  0213                     	;# 
   379  0213                     	;# 
   380  0214                     	;# 
   381  0214                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0215                     	;# 
   385  0216                     	;# 
   386  0216                     	;# 
   387  0217                     	;# 
   388  0217                     	;# 
   389  0219                     	;# 
   390  021A                     	;# 
   391  021B                     	;# 
   392  021C                     	;# 
   393  021D                     	;# 
   394  021E                     	;# 
   395  021F                     	;# 
   396  0291                     	;# 
   397  0291                     	;# 
   398  0292                     	;# 
   399  0293                     	;# 
   400  0294                     	;# 
   401  0295                     	;# 
   402  0295                     	;# 
   403  0296                     	;# 
   404  0298                     	;# 
   405  0298                     	;# 
   406  0299                     	;# 
   407  029A                     	;# 
   408  029B                     	;# 
   409  029C                     	;# 
   410  029D                     	;# 
   411  029E                     	;# 
   412  0311                     	;# 
   413  0311                     	;# 
   414  0312                     	;# 
   415  0313                     	;# 
   416  0318                     	;# 
   417  0318                     	;# 
   418  0319                     	;# 
   419  031A                     	;# 
   420  038C                     	;# 
   421  038D                     	;# 
   422  038E                     	;# 
   423  0391                     	;# 
   424  0392                     	;# 
   425  0393                     	;# 
   426  0394                     	;# 
   427  0395                     	;# 
   428  0396                     	;# 
   429  039A                     	;# 
   430  039C                     	;# 
   431  039D                     	;# 
   432  039E                     	;# 
   433  039F                     	;# 
   434  0415                     	;# 
   435  0416                     	;# 
   436  0417                     	;# 
   437  041C                     	;# 
   438  041D                     	;# 
   439  041E                     	;# 
   440  0FE4                     	;# 
   441  0FE5                     	;# 
   442  0FE6                     	;# 
   443  0FE7                     	;# 
   444  0FE8                     	;# 
   445  0FE9                     	;# 
   446  0FEA                     	;# 
   447  0FEB                     	;# 
   448  0FED                     	;# 
   449  0FEE                     	;# 
   450  0FEF                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0015                     	;# 
   471  0016                     	;# 
   472  0016                     	;# 
   473  0017                     	;# 
   474  0018                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001C                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  008C                     	;# 
   482  008D                     	;# 
   483  008E                     	;# 
   484  0091                     	;# 
   485  0092                     	;# 
   486  0093                     	;# 
   487  0094                     	;# 
   488  0095                     	;# 
   489  0096                     	;# 
   490  0097                     	;# 
   491  0098                     	;# 
   492  0099                     	;# 
   493  009A                     	;# 
   494  009B                     	;# 
   495  009B                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  010C                     	;# 
   500  010D                     	;# 
   501  010E                     	;# 
   502  0111                     	;# 
   503  0112                     	;# 
   504  0113                     	;# 
   505  0114                     	;# 
   506  0115                     	;# 
   507  0116                     	;# 
   508  0117                     	;# 
   509  0118                     	;# 
   510  0119                     	;# 
   511  011A                     	;# 
   512  011B                     	;# 
   513  011D                     	;# 
   514  011E                     	;# 
   515  018C                     	;# 
   516  018D                     	;# 
   517  018E                     	;# 
   518  0191                     	;# 
   519  0191                     	;# 
   520  0192                     	;# 
   521  0193                     	;# 
   522  0193                     	;# 
   523  0193                     	;# 
   524  0194                     	;# 
   525  0195                     	;# 
   526  0196                     	;# 
   527  0199                     	;# 
   528  019A                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019C                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019F                     	;# 
   535  020C                     	;# 
   536  020D                     	;# 
   537  020E                     	;# 
   538  0211                     	;# 
   539  0211                     	;# 
   540  0212                     	;# 
   541  0212                     	;# 
   542  0213                     	;# 
   543  0213                     	;# 
   544  0214                     	;# 
   545  0214                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0216                     	;# 
   550  0216                     	;# 
   551  0217                     	;# 
   552  0217                     	;# 
   553  0219                     	;# 
   554  021A                     	;# 
   555  021B                     	;# 
   556  021C                     	;# 
   557  021D                     	;# 
   558  021E                     	;# 
   559  021F                     	;# 
   560  0291                     	;# 
   561  0291                     	;# 
   562  0292                     	;# 
   563  0293                     	;# 
   564  0294                     	;# 
   565  0295                     	;# 
   566  0295                     	;# 
   567  0296                     	;# 
   568  0298                     	;# 
   569  0298                     	;# 
   570  0299                     	;# 
   571  029A                     	;# 
   572  029B                     	;# 
   573  029C                     	;# 
   574  029D                     	;# 
   575  029E                     	;# 
   576  0311                     	;# 
   577  0311                     	;# 
   578  0312                     	;# 
   579  0313                     	;# 
   580  0318                     	;# 
   581  0318                     	;# 
   582  0319                     	;# 
   583  031A                     	;# 
   584  038C                     	;# 
   585  038D                     	;# 
   586  038E                     	;# 
   587  0391                     	;# 
   588  0392                     	;# 
   589  0393                     	;# 
   590  0394                     	;# 
   591  0395                     	;# 
   592  0396                     	;# 
   593  039A                     	;# 
   594  039C                     	;# 
   595  039D                     	;# 
   596  039E                     	;# 
   597  039F                     	;# 
   598  0415                     	;# 
   599  0416                     	;# 
   600  0417                     	;# 
   601  041C                     	;# 
   602  041D                     	;# 
   603  041E                     	;# 
   604  0FE4                     	;# 
   605  0FE5                     	;# 
   606  0FE6                     	;# 
   607  0FE7                     	;# 
   608  0FE8                     	;# 
   609  0FE9                     	;# 
   610  0FEA                     	;# 
   611  0FEB                     	;# 
   612  0FED                     	;# 
   613  0FEE                     	;# 
   614  0FEF                     	;# 
   615  0000                     	;# 
   616  0001                     	;# 
   617  0002                     	;# 
   618  0003                     	;# 
   619  0004                     	;# 
   620  0005                     	;# 
   621  0006                     	;# 
   622  0007                     	;# 
   623  0008                     	;# 
   624  0009                     	;# 
   625  000A                     	;# 
   626  000B                     	;# 
   627  000C                     	;# 
   628  000D                     	;# 
   629  000E                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0014                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  001E                     	;# 
   644  001F                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  0091                     	;# 
   649  0092                     	;# 
   650  0093                     	;# 
   651  0094                     	;# 
   652  0095                     	;# 
   653  0096                     	;# 
   654  0097                     	;# 
   655  0098                     	;# 
   656  0099                     	;# 
   657  009A                     	;# 
   658  009B                     	;# 
   659  009B                     	;# 
   660  009C                     	;# 
   661  009D                     	;# 
   662  009E                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  0111                     	;# 
   667  0112                     	;# 
   668  0113                     	;# 
   669  0114                     	;# 
   670  0115                     	;# 
   671  0116                     	;# 
   672  0117                     	;# 
   673  0118                     	;# 
   674  0119                     	;# 
   675  011A                     	;# 
   676  011B                     	;# 
   677  011D                     	;# 
   678  011E                     	;# 
   679  018C                     	;# 
   680  018D                     	;# 
   681  018E                     	;# 
   682  0191                     	;# 
   683  0191                     	;# 
   684  0192                     	;# 
   685  0193                     	;# 
   686  0193                     	;# 
   687  0193                     	;# 
   688  0194                     	;# 
   689  0195                     	;# 
   690  0196                     	;# 
   691  0199                     	;# 
   692  019A                     	;# 
   693  019B                     	;# 
   694  019B                     	;# 
   695  019C                     	;# 
   696  019D                     	;# 
   697  019E                     	;# 
   698  019F                     	;# 
   699  020C                     	;# 
   700  020D                     	;# 
   701  020E                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0212                     	;# 
   706  0213                     	;# 
   707  0213                     	;# 
   708  0214                     	;# 
   709  0214                     	;# 
   710  0215                     	;# 
   711  0215                     	;# 
   712  0215                     	;# 
   713  0216                     	;# 
   714  0216                     	;# 
   715  0217                     	;# 
   716  0217                     	;# 
   717  0219                     	;# 
   718  021A                     	;# 
   719  021B                     	;# 
   720  021C                     	;# 
   721  021D                     	;# 
   722  021E                     	;# 
   723  021F                     	;# 
   724  0291                     	;# 
   725  0291                     	;# 
   726  0292                     	;# 
   727  0293                     	;# 
   728  0294                     	;# 
   729  0295                     	;# 
   730  0295                     	;# 
   731  0296                     	;# 
   732  0298                     	;# 
   733  0298                     	;# 
   734  0299                     	;# 
   735  029A                     	;# 
   736  029B                     	;# 
   737  029C                     	;# 
   738  029D                     	;# 
   739  029E                     	;# 
   740  0311                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0318                     	;# 
   745  0318                     	;# 
   746  0319                     	;# 
   747  031A                     	;# 
   748  038C                     	;# 
   749  038D                     	;# 
   750  038E                     	;# 
   751  0391                     	;# 
   752  0392                     	;# 
   753  0393                     	;# 
   754  0394                     	;# 
   755  0395                     	;# 
   756  0396                     	;# 
   757  039A                     	;# 
   758  039C                     	;# 
   759  039D                     	;# 
   760  039E                     	;# 
   761  039F                     	;# 
   762  0415                     	;# 
   763  0416                     	;# 
   764  0417                     	;# 
   765  041C                     	;# 
   766  041D                     	;# 
   767  041E                     	;# 
   768  0FE4                     	;# 
   769  0FE5                     	;# 
   770  0FE6                     	;# 
   771  0FE7                     	;# 
   772  0FE8                     	;# 
   773  0FE9                     	;# 
   774  0FEA                     	;# 
   775  0FEB                     	;# 
   776  0FED                     	;# 
   777  0FEE                     	;# 
   778  0FEF                     	;# 
   779  0000                     	;# 
   780  0001                     	;# 
   781  0002                     	;# 
   782  0003                     	;# 
   783  0004                     	;# 
   784  0005                     	;# 
   785  0006                     	;# 
   786  0007                     	;# 
   787  0008                     	;# 
   788  0009                     	;# 
   789  000A                     	;# 
   790  000B                     	;# 
   791  000C                     	;# 
   792  000D                     	;# 
   793  000E                     	;# 
   794  0011                     	;# 
   795  0012                     	;# 
   796  0013                     	;# 
   797  0014                     	;# 
   798  0015                     	;# 
   799  0016                     	;# 
   800  0016                     	;# 
   801  0017                     	;# 
   802  0018                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001C                     	;# 
   807  001E                     	;# 
   808  001F                     	;# 
   809  008C                     	;# 
   810  008D                     	;# 
   811  008E                     	;# 
   812  0091                     	;# 
   813  0092                     	;# 
   814  0093                     	;# 
   815  0094                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0097                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009A                     	;# 
   822  009B                     	;# 
   823  009B                     	;# 
   824  009C                     	;# 
   825  009D                     	;# 
   826  009E                     	;# 
   827  010C                     	;# 
   828  010D                     	;# 
   829  010E                     	;# 
   830  0111                     	;# 
   831  0112                     	;# 
   832  0113                     	;# 
   833  0114                     	;# 
   834  0115                     	;# 
   835  0116                     	;# 
   836  0117                     	;# 
   837  0118                     	;# 
   838  0119                     	;# 
   839  011A                     	;# 
   840  011B                     	;# 
   841  011D                     	;# 
   842  011E                     	;# 
   843  018C                     	;# 
   844  018D                     	;# 
   845  018E                     	;# 
   846  0191                     	;# 
   847  0191                     	;# 
   848  0192                     	;# 
   849  0193                     	;# 
   850  0193                     	;# 
   851  0193                     	;# 
   852  0194                     	;# 
   853  0195                     	;# 
   854  0196                     	;# 
   855  0199                     	;# 
   856  019A                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019D                     	;# 
   861  019E                     	;# 
   862  019F                     	;# 
   863  020C                     	;# 
   864  020D                     	;# 
   865  020E                     	;# 
   866  0211                     	;# 
   867  0211                     	;# 
   868  0212                     	;# 
   869  0212                     	;# 
   870  0213                     	;# 
   871  0213                     	;# 
   872  0214                     	;# 
   873  0214                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0215                     	;# 
   877  0216                     	;# 
   878  0216                     	;# 
   879  0217                     	;# 
   880  0217                     	;# 
   881  0219                     	;# 
   882  021A                     	;# 
   883  021B                     	;# 
   884  021C                     	;# 
   885  021D                     	;# 
   886  021E                     	;# 
   887  021F                     	;# 
   888  0291                     	;# 
   889  0291                     	;# 
   890  0292                     	;# 
   891  0293                     	;# 
   892  0294                     	;# 
   893  0295                     	;# 
   894  0295                     	;# 
   895  0296                     	;# 
   896  0298                     	;# 
   897  0298                     	;# 
   898  0299                     	;# 
   899  029A                     	;# 
   900  029B                     	;# 
   901  029C                     	;# 
   902  029D                     	;# 
   903  029E                     	;# 
   904  0311                     	;# 
   905  0311                     	;# 
   906  0312                     	;# 
   907  0313                     	;# 
   908  0318                     	;# 
   909  0318                     	;# 
   910  0319                     	;# 
   911  031A                     	;# 
   912  038C                     	;# 
   913  038D                     	;# 
   914  038E                     	;# 
   915  0391                     	;# 
   916  0392                     	;# 
   917  0393                     	;# 
   918  0394                     	;# 
   919  0395                     	;# 
   920  0396                     	;# 
   921  039A                     	;# 
   922  039C                     	;# 
   923  039D                     	;# 
   924  039E                     	;# 
   925  039F                     	;# 
   926  0415                     	;# 
   927  0416                     	;# 
   928  0417                     	;# 
   929  041C                     	;# 
   930  041D                     	;# 
   931  041E                     	;# 
   932  0FE4                     	;# 
   933  0FE5                     	;# 
   934  0FE6                     	;# 
   935  0FE7                     	;# 
   936  0FE8                     	;# 
   937  0FE9                     	;# 
   938  0FEA                     	;# 
   939  0FEB                     	;# 
   940  0FED                     	;# 
   941  0FEE                     	;# 
   942  0FEF                     	;# 
   943  0000                     	;# 
   944  0001                     	;# 
   945  0002                     	;# 
   946  0003                     	;# 
   947  0004                     	;# 
   948  0005                     	;# 
   949  0006                     	;# 
   950  0007                     	;# 
   951  0008                     	;# 
   952  0009                     	;# 
   953  000A                     	;# 
   954  000B                     	;# 
   955  000C                     	;# 
   956  000D                     	;# 
   957  000E                     	;# 
   958  0011                     	;# 
   959  0012                     	;# 
   960  0013                     	;# 
   961  0014                     	;# 
   962  0015                     	;# 
   963  0016                     	;# 
   964  0016                     	;# 
   965  0017                     	;# 
   966  0018                     	;# 
   967  0019                     	;# 
   968  001A                     	;# 
   969  001B                     	;# 
   970  001C                     	;# 
   971  001E                     	;# 
   972  001F                     	;# 
   973  008C                     	;# 
   974  008D                     	;# 
   975  008E                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0093                     	;# 
   979  0094                     	;# 
   980  0095                     	;# 
   981  0096                     	;# 
   982  0097                     	;# 
   983  0098                     	;# 
   984  0099                     	;# 
   985  009A                     	;# 
   986  009B                     	;# 
   987  009B                     	;# 
   988  009C                     	;# 
   989  009D                     	;# 
   990  009E                     	;# 
   991  010C                     	;# 
   992  010D                     	;# 
   993  010E                     	;# 
   994  0111                     	;# 
   995  0112                     	;# 
   996  0113                     	;# 
   997  0114                     	;# 
   998  0115                     	;# 
   999  0116                     	;# 
  1000  0117                     	;# 
  1001  0118                     	;# 
  1002  0119                     	;# 
  1003  011A                     	;# 
  1004  011B                     	;# 
  1005  011D                     	;# 
  1006  011E                     	;# 
  1007  018C                     	;# 
  1008  018D                     	;# 
  1009  018E                     	;# 
  1010  0191                     	;# 
  1011  0191                     	;# 
  1012  0192                     	;# 
  1013  0193                     	;# 
  1014  0193                     	;# 
  1015  0193                     	;# 
  1016  0194                     	;# 
  1017  0195                     	;# 
  1018  0196                     	;# 
  1019  0199                     	;# 
  1020  019A                     	;# 
  1021  019B                     	;# 
  1022  019B                     	;# 
  1023  019C                     	;# 
  1024  019D                     	;# 
  1025  019E                     	;# 
  1026  019F                     	;# 
  1027  020C                     	;# 
  1028  020D                     	;# 
  1029  020E                     	;# 
  1030  0211                     	;# 
  1031  0211                     	;# 
  1032  0212                     	;# 
  1033  0212                     	;# 
  1034  0213                     	;# 
  1035  0213                     	;# 
  1036  0214                     	;# 
  1037  0214                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0215                     	;# 
  1041  0216                     	;# 
  1042  0216                     	;# 
  1043  0217                     	;# 
  1044  0217                     	;# 
  1045  0219                     	;# 
  1046  021A                     	;# 
  1047  021B                     	;# 
  1048  021C                     	;# 
  1049  021D                     	;# 
  1050  021E                     	;# 
  1051  021F                     	;# 
  1052  0291                     	;# 
  1053  0291                     	;# 
  1054  0292                     	;# 
  1055  0293                     	;# 
  1056  0294                     	;# 
  1057  0295                     	;# 
  1058  0295                     	;# 
  1059  0296                     	;# 
  1060  0298                     	;# 
  1061  0298                     	;# 
  1062  0299                     	;# 
  1063  029A                     	;# 
  1064  029B                     	;# 
  1065  029C                     	;# 
  1066  029D                     	;# 
  1067  029E                     	;# 
  1068  0311                     	;# 
  1069  0311                     	;# 
  1070  0312                     	;# 
  1071  0313                     	;# 
  1072  0318                     	;# 
  1073  0318                     	;# 
  1074  0319                     	;# 
  1075  031A                     	;# 
  1076  038C                     	;# 
  1077  038D                     	;# 
  1078  038E                     	;# 
  1079  0391                     	;# 
  1080  0392                     	;# 
  1081  0393                     	;# 
  1082  0394                     	;# 
  1083  0395                     	;# 
  1084  0396                     	;# 
  1085  039A                     	;# 
  1086  039C                     	;# 
  1087  039D                     	;# 
  1088  039E                     	;# 
  1089  039F                     	;# 
  1090  0415                     	;# 
  1091  0416                     	;# 
  1092  0417                     	;# 
  1093  041C                     	;# 
  1094  041D                     	;# 
  1095  041E                     	;# 
  1096  0FE4                     	;# 
  1097  0FE5                     	;# 
  1098  0FE6                     	;# 
  1099  0FE7                     	;# 
  1100  0FE8                     	;# 
  1101  0FE9                     	;# 
  1102  0FEA                     	;# 
  1103  0FEB                     	;# 
  1104  0FED                     	;# 
  1105  0FEE                     	;# 
  1106  0FEF                     	;# 
  1107  0000                     	;# 
  1108  0001                     	;# 
  1109  0002                     	;# 
  1110  0003                     	;# 
  1111  0004                     	;# 
  1112  0005                     	;# 
  1113  0006                     	;# 
  1114  0007                     	;# 
  1115  0008                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000D                     	;# 
  1121  000E                     	;# 
  1122  0011                     	;# 
  1123  0012                     	;# 
  1124  0013                     	;# 
  1125  0014                     	;# 
  1126  0015                     	;# 
  1127  0016                     	;# 
  1128  0016                     	;# 
  1129  0017                     	;# 
  1130  0018                     	;# 
  1131  0019                     	;# 
  1132  001A                     	;# 
  1133  001B                     	;# 
  1134  001C                     	;# 
  1135  001E                     	;# 
  1136  001F                     	;# 
  1137  008C                     	;# 
  1138  008D                     	;# 
  1139  008E                     	;# 
  1140  0091                     	;# 
  1141  0092                     	;# 
  1142  0093                     	;# 
  1143  0094                     	;# 
  1144  0095                     	;# 
  1145  0096                     	;# 
  1146  0097                     	;# 
  1147  0098                     	;# 
  1148  0099                     	;# 
  1149  009A                     	;# 
  1150  009B                     	;# 
  1151  009B                     	;# 
  1152  009C                     	;# 
  1153  009D                     	;# 
  1154  009E                     	;# 
  1155  010C                     	;# 
  1156  010D                     	;# 
  1157  010E                     	;# 
  1158  0111                     	;# 
  1159  0112                     	;# 
  1160  0113                     	;# 
  1161  0114                     	;# 
  1162  0115                     	;# 
  1163  0116                     	;# 
  1164  0117                     	;# 
  1165  0118                     	;# 
  1166  0119                     	;# 
  1167  011A                     	;# 
  1168  011B                     	;# 
  1169  011D                     	;# 
  1170  011E                     	;# 
  1171  018C                     	;# 
  1172  018D                     	;# 
  1173  018E                     	;# 
  1174  0191                     	;# 
  1175  0191                     	;# 
  1176  0192                     	;# 
  1177  0193                     	;# 
  1178  0193                     	;# 
  1179  0193                     	;# 
  1180  0194                     	;# 
  1181  0195                     	;# 
  1182  0196                     	;# 
  1183  0199                     	;# 
  1184  019A                     	;# 
  1185  019B                     	;# 
  1186  019B                     	;# 
  1187  019C                     	;# 
  1188  019D                     	;# 
  1189  019E                     	;# 
  1190  019F                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  0211                     	;# 
  1195  0211                     	;# 
  1196  0212                     	;# 
  1197  0212                     	;# 
  1198  0213                     	;# 
  1199  0213                     	;# 
  1200  0214                     	;# 
  1201  0214                     	;# 
  1202  0215                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0219                     	;# 
  1210  021A                     	;# 
  1211  021B                     	;# 
  1212  021C                     	;# 
  1213  021D                     	;# 
  1214  021E                     	;# 
  1215  021F                     	;# 
  1216  0291                     	;# 
  1217  0291                     	;# 
  1218  0292                     	;# 
  1219  0293                     	;# 
  1220  0294                     	;# 
  1221  0295                     	;# 
  1222  0295                     	;# 
  1223  0296                     	;# 
  1224  0298                     	;# 
  1225  0298                     	;# 
  1226  0299                     	;# 
  1227  029A                     	;# 
  1228  029B                     	;# 
  1229  029C                     	;# 
  1230  029D                     	;# 
  1231  029E                     	;# 
  1232  0311                     	;# 
  1233  0311                     	;# 
  1234  0312                     	;# 
  1235  0313                     	;# 
  1236  0318                     	;# 
  1237  0318                     	;# 
  1238  0319                     	;# 
  1239  031A                     	;# 
  1240  038C                     	;# 
  1241  038D                     	;# 
  1242  038E                     	;# 
  1243  0391                     	;# 
  1244  0392                     	;# 
  1245  0393                     	;# 
  1246  0394                     	;# 
  1247  0395                     	;# 
  1248  0396                     	;# 
  1249  039A                     	;# 
  1250  039C                     	;# 
  1251  039D                     	;# 
  1252  039E                     	;# 
  1253  039F                     	;# 
  1254  0415                     	;# 
  1255  0416                     	;# 
  1256  0417                     	;# 
  1257  041C                     	;# 
  1258  041D                     	;# 
  1259  041E                     	;# 
  1260  0FE4                     	;# 
  1261  0FE5                     	;# 
  1262  0FE6                     	;# 
  1263  0FE7                     	;# 
  1264  0FE8                     	;# 
  1265  0FE9                     	;# 
  1266  0FEA                     	;# 
  1267  0FEB                     	;# 
  1268  0FED                     	;# 
  1269  0FEE                     	;# 
  1270  0FEF                     	;# 
  1271  0000                     	;# 
  1272  0001                     	;# 
  1273  0002                     	;# 
  1274  0003                     	;# 
  1275  0004                     	;# 
  1276  0005                     	;# 
  1277  0006                     	;# 
  1278  0007                     	;# 
  1279  0008                     	;# 
  1280  0009                     	;# 
  1281  000A                     	;# 
  1282  000B                     	;# 
  1283  000C                     	;# 
  1284  000D                     	;# 
  1285  000E                     	;# 
  1286  0011                     	;# 
  1287  0012                     	;# 
  1288  0013                     	;# 
  1289  0014                     	;# 
  1290  0015                     	;# 
  1291  0016                     	;# 
  1292  0016                     	;# 
  1293  0017                     	;# 
  1294  0018                     	;# 
  1295  0019                     	;# 
  1296  001A                     	;# 
  1297  001B                     	;# 
  1298  001C                     	;# 
  1299  001E                     	;# 
  1300  001F                     	;# 
  1301  008C                     	;# 
  1302  008D                     	;# 
  1303  008E                     	;# 
  1304  0091                     	;# 
  1305  0092                     	;# 
  1306  0093                     	;# 
  1307  0094                     	;# 
  1308  0095                     	;# 
  1309  0096                     	;# 
  1310  0097                     	;# 
  1311  0098                     	;# 
  1312  0099                     	;# 
  1313  009A                     	;# 
  1314  009B                     	;# 
  1315  009B                     	;# 
  1316  009C                     	;# 
  1317  009D                     	;# 
  1318  009E                     	;# 
  1319  010C                     	;# 
  1320  010D                     	;# 
  1321  010E                     	;# 
  1322  0111                     	;# 
  1323  0112                     	;# 
  1324  0113                     	;# 
  1325  0114                     	;# 
  1326  0115                     	;# 
  1327  0116                     	;# 
  1328  0117                     	;# 
  1329  0118                     	;# 
  1330  0119                     	;# 
  1331  011A                     	;# 
  1332  011B                     	;# 
  1333  011D                     	;# 
  1334  011E                     	;# 
  1335  018C                     	;# 
  1336  018D                     	;# 
  1337  018E                     	;# 
  1338  0191                     	;# 
  1339  0191                     	;# 
  1340  0192                     	;# 
  1341  0193                     	;# 
  1342  0193                     	;# 
  1343  0193                     	;# 
  1344  0194                     	;# 
  1345  0195                     	;# 
  1346  0196                     	;# 
  1347  0199                     	;# 
  1348  019A                     	;# 
  1349  019B                     	;# 
  1350  019B                     	;# 
  1351  019C                     	;# 
  1352  019D                     	;# 
  1353  019E                     	;# 
  1354  019F                     	;# 
  1355  020C                     	;# 
  1356  020D                     	;# 
  1357  020E                     	;# 
  1358  0211                     	;# 
  1359  0211                     	;# 
  1360  0212                     	;# 
  1361  0212                     	;# 
  1362  0213                     	;# 
  1363  0213                     	;# 
  1364  0214                     	;# 
  1365  0214                     	;# 
  1366  0215                     	;# 
  1367  0215                     	;# 
  1368  0215                     	;# 
  1369  0216                     	;# 
  1370  0216                     	;# 
  1371  0217                     	;# 
  1372  0217                     	;# 
  1373  0219                     	;# 
  1374  021A                     	;# 
  1375  021B                     	;# 
  1376  021C                     	;# 
  1377  021D                     	;# 
  1378  021E                     	;# 
  1379  021F                     	;# 
  1380  0291                     	;# 
  1381  0291                     	;# 
  1382  0292                     	;# 
  1383  0293                     	;# 
  1384  0294                     	;# 
  1385  0295                     	;# 
  1386  0295                     	;# 
  1387  0296                     	;# 
  1388  0298                     	;# 
  1389  0298                     	;# 
  1390  0299                     	;# 
  1391  029A                     	;# 
  1392  029B                     	;# 
  1393  029C                     	;# 
  1394  029D                     	;# 
  1395  029E                     	;# 
  1396  0311                     	;# 
  1397  0311                     	;# 
  1398  0312                     	;# 
  1399  0313                     	;# 
  1400  0318                     	;# 
  1401  0318                     	;# 
  1402  0319                     	;# 
  1403  031A                     	;# 
  1404  038C                     	;# 
  1405  038D                     	;# 
  1406  038E                     	;# 
  1407  0391                     	;# 
  1408  0392                     	;# 
  1409  0393                     	;# 
  1410  0394                     	;# 
  1411  0395                     	;# 
  1412  0396                     	;# 
  1413  039A                     	;# 
  1414  039C                     	;# 
  1415  039D                     	;# 
  1416  039E                     	;# 
  1417  039F                     	;# 
  1418  0415                     	;# 
  1419  0416                     	;# 
  1420  0417                     	;# 
  1421  041C                     	;# 
  1422  041D                     	;# 
  1423  041E                     	;# 
  1424  0FE4                     	;# 
  1425  0FE5                     	;# 
  1426  0FE6                     	;# 
  1427  0FE7                     	;# 
  1428  0FE8                     	;# 
  1429  0FE9                     	;# 
  1430  0FEA                     	;# 
  1431  0FEB                     	;# 
  1432  0FED                     	;# 
  1433  0FEE                     	;# 
  1434  0FEF                     	;# 
  1435  0000                     	;# 
  1436  0001                     	;# 
  1437  0002                     	;# 
  1438  0003                     	;# 
  1439  0004                     	;# 
  1440  0005                     	;# 
  1441  0006                     	;# 
  1442  0007                     	;# 
  1443  0008                     	;# 
  1444  0009                     	;# 
  1445  000A                     	;# 
  1446  000B                     	;# 
  1447  000C                     	;# 
  1448  000D                     	;# 
  1449  000E                     	;# 
  1450  0011                     	;# 
  1451  0012                     	;# 
  1452  0013                     	;# 
  1453  0014                     	;# 
  1454  0015                     	;# 
  1455  0016                     	;# 
  1456  0016                     	;# 
  1457  0017                     	;# 
  1458  0018                     	;# 
  1459  0019                     	;# 
  1460  001A                     	;# 
  1461  001B                     	;# 
  1462  001C                     	;# 
  1463  001E                     	;# 
  1464  001F                     	;# 
  1465  008C                     	;# 
  1466  008D                     	;# 
  1467  008E                     	;# 
  1468  0091                     	;# 
  1469  0092                     	;# 
  1470  0093                     	;# 
  1471  0094                     	;# 
  1472  0095                     	;# 
  1473  0096                     	;# 
  1474  0097                     	;# 
  1475  0098                     	;# 
  1476  0099                     	;# 
  1477  009A                     	;# 
  1478  009B                     	;# 
  1479  009B                     	;# 
  1480  009C                     	;# 
  1481  009D                     	;# 
  1482  009E                     	;# 
  1483  010C                     	;# 
  1484  010D                     	;# 
  1485  010E                     	;# 
  1486  0111                     	;# 
  1487  0112                     	;# 
  1488  0113                     	;# 
  1489  0114                     	;# 
  1490  0115                     	;# 
  1491  0116                     	;# 
  1492  0117                     	;# 
  1493  0118                     	;# 
  1494  0119                     	;# 
  1495  011A                     	;# 
  1496  011B                     	;# 
  1497  011D                     	;# 
  1498  011E                     	;# 
  1499  018C                     	;# 
  1500  018D                     	;# 
  1501  018E                     	;# 
  1502  0191                     	;# 
  1503  0191                     	;# 
  1504  0192                     	;# 
  1505  0193                     	;# 
  1506  0193                     	;# 
  1507  0193                     	;# 
  1508  0194                     	;# 
  1509  0195                     	;# 
  1510  0196                     	;# 
  1511  0199                     	;# 
  1512  019A                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019C                     	;# 
  1516  019D                     	;# 
  1517  019E                     	;# 
  1518  019F                     	;# 
  1519  020C                     	;# 
  1520  020D                     	;# 
  1521  020E                     	;# 
  1522  0211                     	;# 
  1523  0211                     	;# 
  1524  0212                     	;# 
  1525  0212                     	;# 
  1526  0213                     	;# 
  1527  0213                     	;# 
  1528  0214                     	;# 
  1529  0214                     	;# 
  1530  0215                     	;# 
  1531  0215                     	;# 
  1532  0215                     	;# 
  1533  0216                     	;# 
  1534  0216                     	;# 
  1535  0217                     	;# 
  1536  0217                     	;# 
  1537  0219                     	;# 
  1538  021A                     	;# 
  1539  021B                     	;# 
  1540  021C                     	;# 
  1541  021D                     	;# 
  1542  021E                     	;# 
  1543  021F                     	;# 
  1544  0291                     	;# 
  1545  0291                     	;# 
  1546  0292                     	;# 
  1547  0293                     	;# 
  1548  0294                     	;# 
  1549  0295                     	;# 
  1550  0295                     	;# 
  1551  0296                     	;# 
  1552  0298                     	;# 
  1553  0298                     	;# 
  1554  0299                     	;# 
  1555  029A                     	;# 
  1556  029B                     	;# 
  1557  029C                     	;# 
  1558  029D                     	;# 
  1559  029E                     	;# 
  1560  0311                     	;# 
  1561  0311                     	;# 
  1562  0312                     	;# 
  1563  0313                     	;# 
  1564  0318                     	;# 
  1565  0318                     	;# 
  1566  0319                     	;# 
  1567  031A                     	;# 
  1568  038C                     	;# 
  1569  038D                     	;# 
  1570  038E                     	;# 
  1571  0391                     	;# 
  1572  0392                     	;# 
  1573  0393                     	;# 
  1574  0394                     	;# 
  1575  0395                     	;# 
  1576  0396                     	;# 
  1577  039A                     	;# 
  1578  039C                     	;# 
  1579  039D                     	;# 
  1580  039E                     	;# 
  1581  039F                     	;# 
  1582  0415                     	;# 
  1583  0416                     	;# 
  1584  0417                     	;# 
  1585  041C                     	;# 
  1586  041D                     	;# 
  1587  041E                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0011                     	;# 
  1615  0012                     	;# 
  1616  0013                     	;# 
  1617  0014                     	;# 
  1618  0015                     	;# 
  1619  0016                     	;# 
  1620  0016                     	;# 
  1621  0017                     	;# 
  1622  0018                     	;# 
  1623  0019                     	;# 
  1624  001A                     	;# 
  1625  001B                     	;# 
  1626  001C                     	;# 
  1627  001E                     	;# 
  1628  001F                     	;# 
  1629  008C                     	;# 
  1630  008D                     	;# 
  1631  008E                     	;# 
  1632  0091                     	;# 
  1633  0092                     	;# 
  1634  0093                     	;# 
  1635  0094                     	;# 
  1636  0095                     	;# 
  1637  0096                     	;# 
  1638  0097                     	;# 
  1639  0098                     	;# 
  1640  0099                     	;# 
  1641  009A                     	;# 
  1642  009B                     	;# 
  1643  009B                     	;# 
  1644  009C                     	;# 
  1645  009D                     	;# 
  1646  009E                     	;# 
  1647  010C                     	;# 
  1648  010D                     	;# 
  1649  010E                     	;# 
  1650  0111                     	;# 
  1651  0112                     	;# 
  1652  0113                     	;# 
  1653  0114                     	;# 
  1654  0115                     	;# 
  1655  0116                     	;# 
  1656  0117                     	;# 
  1657  0118                     	;# 
  1658  0119                     	;# 
  1659  011A                     	;# 
  1660  011B                     	;# 
  1661  011D                     	;# 
  1662  011E                     	;# 
  1663  018C                     	;# 
  1664  018D                     	;# 
  1665  018E                     	;# 
  1666  0191                     	;# 
  1667  0191                     	;# 
  1668  0192                     	;# 
  1669  0193                     	;# 
  1670  0193                     	;# 
  1671  0193                     	;# 
  1672  0194                     	;# 
  1673  0195                     	;# 
  1674  0196                     	;# 
  1675  0199                     	;# 
  1676  019A                     	;# 
  1677  019B                     	;# 
  1678  019B                     	;# 
  1679  019C                     	;# 
  1680  019D                     	;# 
  1681  019E                     	;# 
  1682  019F                     	;# 
  1683  020C                     	;# 
  1684  020D                     	;# 
  1685  020E                     	;# 
  1686  0211                     	;# 
  1687  0211                     	;# 
  1688  0212                     	;# 
  1689  0212                     	;# 
  1690  0213                     	;# 
  1691  0213                     	;# 
  1692  0214                     	;# 
  1693  0214                     	;# 
  1694  0215                     	;# 
  1695  0215                     	;# 
  1696  0215                     	;# 
  1697  0216                     	;# 
  1698  0216                     	;# 
  1699  0217                     	;# 
  1700  0217                     	;# 
  1701  0219                     	;# 
  1702  021A                     	;# 
  1703  021B                     	;# 
  1704  021C                     	;# 
  1705  021D                     	;# 
  1706  021E                     	;# 
  1707  021F                     	;# 
  1708  0291                     	;# 
  1709  0291                     	;# 
  1710  0292                     	;# 
  1711  0293                     	;# 
  1712  0294                     	;# 
  1713  0295                     	;# 
  1714  0295                     	;# 
  1715  0296                     	;# 
  1716  0298                     	;# 
  1717  0298                     	;# 
  1718  0299                     	;# 
  1719  029A                     	;# 
  1720  029B                     	;# 
  1721  029C                     	;# 
  1722  029D                     	;# 
  1723  029E                     	;# 
  1724  0311                     	;# 
  1725  0311                     	;# 
  1726  0312                     	;# 
  1727  0313                     	;# 
  1728  0318                     	;# 
  1729  0318                     	;# 
  1730  0319                     	;# 
  1731  031A                     	;# 
  1732  038C                     	;# 
  1733  038D                     	;# 
  1734  038E                     	;# 
  1735  0391                     	;# 
  1736  0392                     	;# 
  1737  0393                     	;# 
  1738  0394                     	;# 
  1739  0395                     	;# 
  1740  0396                     	;# 
  1741  039A                     	;# 
  1742  039C                     	;# 
  1743  039D                     	;# 
  1744  039E                     	;# 
  1745  039F                     	;# 
  1746  0415                     	;# 
  1747  0416                     	;# 
  1748  0417                     	;# 
  1749  041C                     	;# 
  1750  041D                     	;# 
  1751  041E                     	;# 
  1752  0FE4                     	;# 
  1753  0FE5                     	;# 
  1754  0FE6                     	;# 
  1755  0FE7                     	;# 
  1756  0FE8                     	;# 
  1757  0FE9                     	;# 
  1758  0FEA                     	;# 
  1759  0FEB                     	;# 
  1760  0FED                     	;# 
  1761  0FEE                     	;# 
  1762  0FEF                     	;# 
  1763                           
  1764 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1765  0000                     
  1766 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1767  0000                     
  1768 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1769  0000                     
  1770                           	psect	idataCOMMON
  1771  07FF                     __pidataCOMMON:
  1772                           
  1773                           ;initializer for _middle_line_7seg
  1774  07FF  3440               	retlw	64
  1775                           
  1776                           	psect	idataBANK0
  1777  0753                     __pidataBANK0:
  1778                           
  1779                           ;initializer for _g_7seg_table
  1780  0753  343F               	retlw	63
  1781  0754  3406               	retlw	6
  1782  0755  345B               	retlw	91
  1783  0756  344F               	retlw	79
  1784  0757  3466               	retlw	102
  1785  0758  346D               	retlw	109
  1786  0759  347D               	retlw	125
  1787  075A  3407               	retlw	7
  1788  075B  347F               	retlw	127
  1789  075C  346F               	retlw	111
  1790                           
  1791                           ;initializer for _g_time_ms
  1792  075D  3464               	retlw	100
  1793  075E  3400               	retlw	0
  1794                           
  1795                           ;initializer for _g_increase_delay
  1796  075F  340A               	retlw	10
  1797  0760  3400               	retlw	0
  1798                           
  1799                           ;initializer for _g_decrease_delay
  1800  0761  340A               	retlw	10
  1801  0762  3400               	retlw	0
  1802                           
  1803                           ;initializer for display_refresh@pos
  1804  0763  3401               	retlw	1
  1805                           
  1806                           ;initializer for _g_sadegan
  1807  0764  3464               	retlw	100
  1808  0765  3400               	retlw	0
  1809  0766  3400               	retlw	0
  1810  0767  3400               	retlw	0
  1811                           
  1812                           ;initializer for _g_dahegan
  1813  0768  340A               	retlw	10
  1814  0769  3400               	retlw	0
  1815  076A  3400               	retlw	0
  1816  076B  3400               	retlw	0
  1817                           
  1818                           ;initializer for _g_yekan
  1819  076C  3401               	retlw	1
  1820  076D  3400               	retlw	0
  1821  076E  3400               	retlw	0
  1822  076F  3400               	retlw	0
  1823                           
  1824                           	psect	nvBANK0
  1825  006A                     __pnvBANK0:
  1826  006A                     _timer1ReloadVal:
  1827  006A                     	ds	2
  1828                           
  1829                           	psect	nvBANK1
  1830  00A0                     __pnvBANK1:
  1831  00A0                     _TMR6_InterruptHandler:
  1832  00A0                     	ds	2
  1833  00A2                     _TMR4_InterruptHandler:
  1834  00A2                     	ds	2
  1835  00A4                     _TMR2_InterruptHandler:
  1836  00A4                     	ds	2
  1837  00A6                     _TMR1_InterruptHandler:
  1838  00A6                     	ds	2
  1839  00A8                     _EUSART_ErrorHandler:
  1840  00A8                     	ds	2
  1841  00AA                     _EUSART_OverrunErrorHandler:
  1842  00AA                     	ds	2
  1843  00AC                     _EUSART_FramingErrorHandler:
  1844  00AC                     	ds	2
  1845  0003                     _STATUSbits	set	3
  1846  001C                     _T2CONbits	set	28
  1847  001C                     _T2CON	set	28
  1848  001A                     _TMR2	set	26
  1849  001B                     _PR2	set	27
  1850  0019                     _T1GCONbits	set	25
  1851  0018                     _T1CONbits	set	24
  1852  0018                     _T1CON	set	24
  1853  0016                     _TMR1L	set	22
  1854  0017                     _TMR1H	set	23
  1855  0019                     _T1GCON	set	25
  1856  0013                     _PIR3bits	set	19
  1857  000B                     _INTCONbits	set	11
  1858  0011                     _PIR1bits	set	17
  1859  0091                     _PIE1bits	set	145
  1860  0093                     _PIE3bits	set	147
  1861  0095                     _OPTION_REGbits	set	149
  1862  008E                     _TRISC	set	142
  1863  008D                     _TRISB	set	141
  1864  008C                     _TRISA	set	140
  1865  0097                     _WDTCON	set	151
  1866  0098                     _OSCTUNE	set	152
  1867  0099                     _OSCCON	set	153
  1868  010C                     _LATAbits	set	268
  1869  010D                     _LATBbits	set	269
  1870  011E                     _APFCON1	set	286
  1871  011D                     _APFCON0	set	285
  1872  010E                     _LATC	set	270
  1873  010D                     _LATB	set	269
  1874  010C                     _LATA	set	268
  1875  0116                     _BORCON	set	278
  1876  0191                     _EEADR	set	401
  1877  0196                     _EECON2	set	406
  1878  0193                     _EEDATA	set	403
  1879  0195                     _EECON1	set	405
  1880  0195                     _EECON1bits	set	405
  1881  019A                     _TXREG	set	410
  1882  0199                     _RCREG	set	409
  1883  019D                     _RCSTAbits	set	413
  1884  019E                     _TXSTAbits	set	414
  1885  019C                     _SPBRGH	set	412
  1886  019B                     _SPBRGL	set	411
  1887  019E                     _TXSTA	set	414
  1888  019D                     _RCSTA	set	413
  1889  019F                     _BAUDCON	set	415
  1890  018C                     _ANSELA	set	396
  1891  018D                     _ANSELB	set	397
  1892  018E                     _ANSELC	set	398
  1893  020E                     _WPUC	set	526
  1894  020C                     _WPUA	set	524
  1895  020D                     _WPUB	set	525
  1896  041E                     _T6CONbits	set	1054
  1897  041E                     _T6CON	set	1054
  1898  041C                     _TMR6	set	1052
  1899  041D                     _PR6	set	1053
  1900  0417                     _T4CONbits	set	1047
  1901  0417                     _T4CON	set	1047
  1902  0415                     _TMR4	set	1045
  1903  0416                     _PR4	set	1046
  1904                           
  1905                           	psect	cinit
  1906  0046                     start_initialization:	
  1907                           ; #config settings
  1908                           
  1909  0046                     __initialization:
  1910                           
  1911                           ; Initialize objects allocated to COMMON
  1912  0046  3187  27FF  3180   	fcall	__pidataCOMMON	;fetch initializer
  1913  0049  00FD               	movwf	__pdataCOMMON& (0+127)
  1914                           
  1915                           ; Initialize objects allocated to BANK0
  1916  004A  3053               	movlw	low __pidataBANK0
  1917  004B  0084               	movwf	4
  1918  004C  3087               	movlw	(high __pidataBANK0)| (0+128)
  1919  004D  0085               	movwf	5
  1920  004E  3020               	movlw	low __pdataBANK0
  1921  004F  0086               	movwf	6
  1922  0050  3000               	movlw	high __pdataBANK0
  1923  0051  0087               	movwf	7
  1924  0052  301D               	movlw	29
  1925  0053  318E  26CC  3180   	fcall	init_ram
  1926                           
  1927                           ; Clear objects allocated to BANK0
  1928  0056  303D               	movlw	low __pbssBANK0
  1929  0057  0084               	movwf	4
  1930  0058  3000               	movlw	high __pbssBANK0
  1931  0059  0085               	movwf	5
  1932  005A  3018               	movlw	24
  1933  005B  318E  26C6  3180   	fcall	clear_ram0
  1934  005E                     end_of_initialization:	
  1935                           ;End of C runtime variable initialization code
  1936                           
  1937  005E                     __end_of__initialization:
  1938  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1939  005F  0020               	movlb	0
  1940  0060  3186  2E40         	ljmp	_main	;jump to C main() function
  1941                           
  1942                           	psect	bssEEDATA
  1943  0000                     __pbssEEDATA:
  1944  0000                     _ge_memory_mass:
  1945  0000  0000               	db	0
  1946  0001  0000               	db	0
  1947  0002  0000               	db	0
  1948  0003  0000               	db	0
  1949  0004  0000               	db	0
  1950  0005  0000               	db	0
  1951  0006  0000               	db	0
  1952  0007  0000               	db	0
  1953  0008                     _ge_time_ms:
  1954  0008  0000               	db	0
  1955  0009  0000               	db	0
  1956                           
  1957                           	psect	dataCOMMON
  1958  007D                     __pdataCOMMON:
  1959  007D                     _middle_line_7seg:
  1960  007D                     	ds	1
  1961                           
  1962                           	psect	bssBANK0
  1963  003D                     __pbssBANK0:
  1964  003D                     _g_memory_mass:
  1965  003D                     	ds	8
  1966  0045                     _g_time_ms_backup:
  1967  0045                     	ds	2
  1968  0047                     _g_mass:
  1969  0047                     	ds	2
  1970  0049                     _g_setted_value:
  1971  0049                     	ds	2
  1972  004B                     _g_current_num_on_7segs:
  1973  004B                     	ds	2
  1974  004D                     increase_num_manual@tmr6_counter:
  1975  004D                     	ds	1
  1976  004E                     increase_num_automatic@tmr6_counter:
  1977  004E                     	ds	1
  1978  004F                     decrease_num@tmr4_counter:
  1979  004F                     	ds	1
  1980  0050                     handle_received_commands@rxData:
  1981  0050                     	ds	1
  1982  0051                     blink_digit@blink_counter:
  1983  0051                     	ds	1
  1984  0052                     _gp_selected_digit:
  1985  0052                     	ds	1
  1986  0053                     _g_digit_num:
  1987  0053                     	ds	1
  1988  0054                     _eusartRxLastError:
  1989  0054                     	ds	1
  1990                           
  1991                           	psect	dataBANK0
  1992  0020                     __pdataBANK0:
  1993  0020                     _g_7seg_table:
  1994  0020                     	ds	10
  1995  002A                     _g_time_ms:
  1996  002A                     	ds	2
  1997  002C                     _g_increase_delay:
  1998  002C                     	ds	2
  1999  002E                     _g_decrease_delay:
  2000  002E                     	ds	2
  2001  0030                     display_refresh@pos:
  2002  0030                     	ds	1
  2003  0031                     _g_sadegan:
  2004  0031                     	ds	4
  2005  0035                     _g_dahegan:
  2006  0035                     	ds	4
  2007  0039                     _g_yekan:
  2008  0039                     	ds	4
  2009                           
  2010                           	psect	inittext
  2011  0ECC                     init_ram:
  2012  0ECC  00FE               	movwf	btemp
  2013  0ECD                     initloop:
  2014  0ECD  0012               	moviw fsr0++
  2015  0ECE  001E               	movwi fsr1++
  2016  0ECF  0BFE               	decfsz	btemp,f
  2017  0ED0  2ECD               	goto	initloop
  2018  0ED1  3400               	retlw	0
  2019                           
  2020                           	psect	clrtext
  2021  0EC6                     clear_ram0:	
  2022                           ;	Called with FSR0 containing the base address, and
  2023                           ;	WREG with the size to clear
  2024                           
  2025  0EC6  0064               	clrwdt	;clear the watchdog before getting into this loop
  2026  0EC7                     clrloop0:
  2027  0EC7  0180               	clrf	0	;clear RAM location pointed to by FSR
  2028  0EC8  3101               	addfsr 0,1
  2029  0EC9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2030  0ECA  2EC7               	goto	clrloop0	;have we reached the end yet?
  2031  0ECB  3400               	retlw	0	;all done for this memory range, return
  2032                           
  2033                           	psect	cstackBANK1
  2034  00AE                     __pcstackBANK1:
  2035  00AE                     ??_get_display_value:
  2036                           
  2037                           ; 1 bytes @ 0x0
  2038  00AE                     	ds	10
  2039                           
  2040                           	psect	cstackCOMMON
  2041  0070                     __pcstackCOMMON:
  2042  0070                     ?_PIN_MANAGER_Initialize:
  2043  0070                     ?_OSCILLATOR_Initialize:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ?_WDT_Initialize:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ?_TMR6_Initialize:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ?_TMR4_Initialize:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ?_TMR2_Initialize:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ?_TMR1_Initialize:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ?_EUSART_Initialize:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ?_TMR6_ISR:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ?_TMR4_ISR:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_TMR2_ISR:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ?_TMR1_ISR:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_TMR1_DefaultInterruptHandler:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ??_TMR1_DefaultInterruptHandler:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ?_TMR2_DefaultInterruptHandler:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ??_TMR2_DefaultInterruptHandler:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_TMR4_DefaultInterruptHandler:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ??_TMR4_DefaultInterruptHandler:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_TMR6_DefaultInterruptHandler:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     ??_TMR6_DefaultInterruptHandler:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ?_init_digit:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0070                     ?_blink_digit:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0070                     ??_blink_digit:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0070                     ?_display_refresh:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0070                     ??_display_refresh:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ?_decrease_num:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_increase_num_automatic:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_handle_received_commands:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_set_display_value_manual:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_SYSTEM_Initialize:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ?_EUSART_is_tx_ready:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ??_EUSART_is_tx_ready:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ?_EUSART_is_rx_ready:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ?_EUSART_Read:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ?_EUSART_Write:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ??_EUSART_Write:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0070                     ?_INTERRUPT_InterruptManager:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ?_TMR1_WriteTimer:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ?_TMR2_StartTimer:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0070                     ?_TMR2_StopTimer:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0070                     ?_TMR4_StartTimer:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     ?_TMR4_StopTimer:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0070                     ?_TMR6_StartTimer:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0070                     ?_TMR6_StopTimer:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     ?_main:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     ?_select_digit:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     ?_end_select_digit:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0070                     ?_increase_digit:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184  0070                     ?_decrease_digit:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187  0070                     ??_decrease_digit:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190  0070                     ?_TX_Command:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0070                     ?_RX_Command:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0070                     ?i1_TMR4_StopTimer:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0070                     ??i1_TMR4_StopTimer:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202  0070                     ?i1_TMR6_StopTimer:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205  0070                     ??i1_TMR6_StopTimer:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0070                     ?i1_select_digit:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211  0070                     ??i1_select_digit:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214  0070                     ?i1_end_select_digit:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217  0070                     ??i1_end_select_digit:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220  0070                     ?i1_increase_digit:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223  0070                     ??i1_increase_digit:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226  0070                     ?i1_set_display_value_manual:	
  2227                           ; 1 bytes @ 0x0
  2228                           
  2229  0070                     ??i1_set_display_value_manual:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232  0070                     ?i1___lwdiv:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235  0070                     ?i1___lwmod:	
  2236                           ; 2 bytes @ 0x0
  2237                           
  2238  0070                     _EUSART_is_tx_ready$262:	
  2239                           ; 2 bytes @ 0x0
  2240                           
  2241  0070                     EUSART_Write@txData:	
  2242                           ; 1 bytes @ 0x0
  2243                           
  2244  0070                     TMR1_WriteTimer@timerVal:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247  0070                     i1___lwdiv@divisor:	
  2248                           ; 2 bytes @ 0x0
  2249                           
  2250  0070                     i1___lwmod@divisor:	
  2251                           ; 2 bytes @ 0x0
  2252                           
  2253                           
  2254                           ; 2 bytes @ 0x0
  2255  0070                     	ds	1
  2256  0071                     ??_TX_Command:
  2257  0071                     TX_Command@txData:	
  2258                           ; 1 bytes @ 0x1
  2259                           
  2260  0071                     i1end_select_digit@buffer:	
  2261                           ; 1 bytes @ 0x1
  2262                           
  2263                           
  2264                           ; 1 bytes @ 0x1
  2265  0071                     	ds	1
  2266  0072                     ??_TMR2_ISR:
  2267  0072                     ??_TMR1_ISR:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270  0072                     ??_TMR1_WriteTimer:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273  0072                     i1select_digit@buffer:	
  2274                           ; 1 bytes @ 0x2
  2275                           
  2276  0072                     i1___lwdiv@dividend:	
  2277                           ; 1 bytes @ 0x2
  2278                           
  2279  0072                     i1___lwmod@dividend:	
  2280                           ; 2 bytes @ 0x2
  2281                           
  2282                           
  2283                           ; 2 bytes @ 0x2
  2284  0072                     	ds	2
  2285  0074                     ??i1___lwdiv:
  2286  0074                     ??i1___lwmod:	
  2287                           ; 1 bytes @ 0x4
  2288                           
  2289                           
  2290                           ; 1 bytes @ 0x4
  2291  0074                     	ds	1
  2292  0075                     i1___lwmod@counter:
  2293  0075                     i1___lwdiv@quotient:	
  2294                           ; 1 bytes @ 0x5
  2295                           
  2296                           
  2297                           ; 2 bytes @ 0x5
  2298  0075                     	ds	2
  2299  0077                     i1___lwdiv@counter:
  2300                           
  2301                           ; 1 bytes @ 0x7
  2302  0077                     	ds	1
  2303  0078                     ?i1_set_display_value:
  2304  0078                     i1set_display_value@value:	
  2305                           ; 1 bytes @ 0x8
  2306                           
  2307                           
  2308                           ; 2 bytes @ 0x8
  2309  0078                     	ds	2
  2310  007A                     ??i1_set_display_value:
  2311                           
  2312                           ; 1 bytes @ 0xA
  2313  007A                     	ds	3
  2314  007D                     ??_TMR6_ISR:
  2315  007D                     ??_TMR4_ISR:	
  2316                           ; 1 bytes @ 0xD
  2317                           
  2318  007D                     ??_INTERRUPT_InterruptManager:	
  2319                           ; 1 bytes @ 0xD
  2320                           
  2321                           
  2322                           	psect	cstackBANK0
  2323  0055                     __pcstackBANK0:	
  2324                           ; 1 bytes @ 0xD
  2325                           
  2326  0055                     i1set_display_value@buffer:
  2327                           
  2328                           ; 2 bytes @ 0x0
  2329  0055                     	ds	2
  2330  0057                     ??_decrease_num:
  2331  0057                     ??_increase_num_automatic:	
  2332                           ; 1 bytes @ 0x2
  2333                           
  2334                           
  2335                           ; 1 bytes @ 0x2
  2336  0057                     	ds	2
  2337  0059                     ??_PIN_MANAGER_Initialize:
  2338  0059                     ??_OSCILLATOR_Initialize:	
  2339                           ; 1 bytes @ 0x4
  2340                           
  2341  0059                     ??_WDT_Initialize:	
  2342                           ; 1 bytes @ 0x4
  2343                           
  2344  0059                     ?_EUSART_SetFramingErrorHandler:	
  2345                           ; 1 bytes @ 0x4
  2346                           
  2347  0059                     ?_EUSART_SetOverrunErrorHandler:	
  2348                           ; 1 bytes @ 0x4
  2349                           
  2350  0059                     ?_EUSART_SetErrorHandler:	
  2351                           ; 1 bytes @ 0x4
  2352                           
  2353  0059                     ?_TMR1_SetInterruptHandler:	
  2354                           ; 1 bytes @ 0x4
  2355                           
  2356  0059                     ?_TMR2_SetInterruptHandler:	
  2357                           ; 1 bytes @ 0x4
  2358                           
  2359  0059                     ?_TMR4_SetInterruptHandler:	
  2360                           ; 1 bytes @ 0x4
  2361                           
  2362  0059                     ?_TMR6_SetInterruptHandler:	
  2363                           ; 1 bytes @ 0x4
  2364                           
  2365  0059                     ??_set_display_value_manual:	
  2366                           ; 1 bytes @ 0x4
  2367                           
  2368  0059                     ??_EUSART_is_rx_ready:	
  2369                           ; 1 bytes @ 0x4
  2370                           
  2371  0059                     ??_EUSART_Read:	
  2372                           ; 1 bytes @ 0x4
  2373                           
  2374  0059                     ??_TMR2_StartTimer:	
  2375                           ; 1 bytes @ 0x4
  2376                           
  2377  0059                     ??_TMR2_StopTimer:	
  2378                           ; 1 bytes @ 0x4
  2379                           
  2380  0059                     ??_TMR4_StartTimer:	
  2381                           ; 1 bytes @ 0x4
  2382                           
  2383  0059                     ??_TMR4_StopTimer:	
  2384                           ; 1 bytes @ 0x4
  2385                           
  2386  0059                     ??_TMR6_StartTimer:	
  2387                           ; 1 bytes @ 0x4
  2388                           
  2389  0059                     ??_TMR6_StopTimer:	
  2390                           ; 1 bytes @ 0x4
  2391                           
  2392  0059                     ??_select_digit:	
  2393                           ; 1 bytes @ 0x4
  2394                           
  2395  0059                     ??_end_select_digit:	
  2396                           ; 1 bytes @ 0x4
  2397                           
  2398  0059                     ??_increase_digit:	
  2399                           ; 1 bytes @ 0x4
  2400                           
  2401  0059                     ??_RX_Command:	
  2402                           ; 1 bytes @ 0x4
  2403                           
  2404  0059                     ?___eecpymem:	
  2405                           ; 1 bytes @ 0x4
  2406                           
  2407  0059                     ?___memcpyee:	
  2408                           ; 1 bytes @ 0x4
  2409                           
  2410  0059                     ?___wmul:	
  2411                           ; 1 bytes @ 0x4
  2412                           
  2413  0059                     ?___lwdiv:	
  2414                           ; 2 bytes @ 0x4
  2415                           
  2416  0059                     ?___lwmod:	
  2417                           ; 2 bytes @ 0x4
  2418                           
  2419  0059                     ___eecpymem@from:	
  2420                           ; 2 bytes @ 0x4
  2421                           
  2422  0059                     ___memcpyee@from:	
  2423                           ; 1 bytes @ 0x4
  2424                           
  2425  0059                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2426                           ; 1 bytes @ 0x4
  2427                           
  2428  0059                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2429                           ; 2 bytes @ 0x4
  2430                           
  2431  0059                     EUSART_SetErrorHandler@interruptHandler:	
  2432                           ; 2 bytes @ 0x4
  2433                           
  2434  0059                     TMR1_SetInterruptHandler@InterruptHandler:	
  2435                           ; 2 bytes @ 0x4
  2436                           
  2437  0059                     TMR2_SetInterruptHandler@InterruptHandler:	
  2438                           ; 2 bytes @ 0x4
  2439                           
  2440  0059                     TMR4_SetInterruptHandler@InterruptHandler:	
  2441                           ; 2 bytes @ 0x4
  2442                           
  2443  0059                     TMR6_SetInterruptHandler@InterruptHandler:	
  2444                           ; 2 bytes @ 0x4
  2445                           
  2446  0059                     ___wmul@multiplier:	
  2447                           ; 2 bytes @ 0x4
  2448                           
  2449  0059                     ___lwdiv@divisor:	
  2450                           ; 2 bytes @ 0x4
  2451                           
  2452  0059                     ___lwmod@divisor:	
  2453                           ; 2 bytes @ 0x4
  2454                           
  2455                           
  2456                           ; 2 bytes @ 0x4
  2457  0059                     	ds	1
  2458  005A                     end_select_digit@buffer:
  2459  005A                     RX_Command@buffer:	
  2460                           ; 1 bytes @ 0x5
  2461                           
  2462  005A                     ___eecpymem@size:	
  2463                           ; 1 bytes @ 0x5
  2464                           
  2465  005A                     ___memcpyee@size:	
  2466                           ; 1 bytes @ 0x5
  2467                           
  2468                           
  2469                           ; 1 bytes @ 0x5
  2470  005A                     	ds	1
  2471  005B                     ??_TMR6_Initialize:
  2472  005B                     ??_TMR4_Initialize:	
  2473                           ; 1 bytes @ 0x6
  2474                           
  2475  005B                     ??_TMR2_Initialize:	
  2476                           ; 1 bytes @ 0x6
  2477                           
  2478  005B                     ??_TMR1_Initialize:	
  2479                           ; 1 bytes @ 0x6
  2480                           
  2481  005B                     ??_EUSART_Initialize:	
  2482                           ; 1 bytes @ 0x6
  2483                           
  2484  005B                     ??_EUSART_SetFramingErrorHandler:	
  2485                           ; 1 bytes @ 0x6
  2486                           
  2487  005B                     ??_EUSART_SetOverrunErrorHandler:	
  2488                           ; 1 bytes @ 0x6
  2489                           
  2490  005B                     ??_EUSART_SetErrorHandler:	
  2491                           ; 1 bytes @ 0x6
  2492                           
  2493  005B                     ??_TMR1_SetInterruptHandler:	
  2494                           ; 1 bytes @ 0x6
  2495                           
  2496  005B                     ??_TMR2_SetInterruptHandler:	
  2497                           ; 1 bytes @ 0x6
  2498                           
  2499  005B                     ??_TMR4_SetInterruptHandler:	
  2500                           ; 1 bytes @ 0x6
  2501                           
  2502  005B                     ??_TMR6_SetInterruptHandler:	
  2503                           ; 1 bytes @ 0x6
  2504                           
  2505  005B                     ??_SYSTEM_Initialize:	
  2506                           ; 1 bytes @ 0x6
  2507                           
  2508  005B                     ??___eecpymem:	
  2509                           ; 1 bytes @ 0x6
  2510                           
  2511  005B                     ??___memcpyee:	
  2512                           ; 1 bytes @ 0x6
  2513                           
  2514  005B                     select_digit@buffer:	
  2515                           ; 1 bytes @ 0x6
  2516                           
  2517  005B                     ___wmul@multiplicand:	
  2518                           ; 1 bytes @ 0x6
  2519                           
  2520  005B                     ___lwdiv@dividend:	
  2521                           ; 2 bytes @ 0x6
  2522                           
  2523  005B                     ___lwmod@dividend:	
  2524                           ; 2 bytes @ 0x6
  2525                           
  2526                           
  2527                           ; 2 bytes @ 0x6
  2528  005B                     	ds	2
  2529  005D                     ??___wmul:
  2530  005D                     ??___lwdiv:	
  2531                           ; 1 bytes @ 0x8
  2532                           
  2533  005D                     ??___lwmod:	
  2534                           ; 1 bytes @ 0x8
  2535                           
  2536  005D                     ___eecpymem@cp:	
  2537                           ; 1 bytes @ 0x8
  2538                           
  2539  005D                     ___memcpyee@ptr:	
  2540                           ; 1 bytes @ 0x8
  2541                           
  2542  005D                     ___wmul@product:	
  2543                           ; 1 bytes @ 0x8
  2544                           
  2545                           
  2546                           ; 2 bytes @ 0x8
  2547  005D                     	ds	1
  2548  005E                     ___eecpymem@to:
  2549  005E                     ___memcpyee@to:	
  2550                           ; 1 bytes @ 0x9
  2551                           
  2552  005E                     ___lwmod@counter:	
  2553                           ; 1 bytes @ 0x9
  2554                           
  2555  005E                     ___lwdiv@quotient:	
  2556                           ; 1 bytes @ 0x9
  2557                           
  2558                           
  2559                           ; 2 bytes @ 0x9
  2560  005E                     	ds	1
  2561  005F                     ?_get_display_value:
  2562  005F                     ?___eetoi:	
  2563                           ; 2 bytes @ 0xA
  2564                           
  2565  005F                     ?___itoee:	
  2566                           ; 2 bytes @ 0xA
  2567                           
  2568  005F                     ___itoee@data:	
  2569                           ; 2 bytes @ 0xA
  2570                           
  2571                           
  2572                           ; 2 bytes @ 0xA
  2573  005F                     	ds	1
  2574  0060                     ___lwdiv@counter:
  2575                           
  2576                           ; 1 bytes @ 0xB
  2577  0060                     	ds	1
  2578  0061                     ?_set_display_value:
  2579  0061                     ??___eetoi:	
  2580                           ; 1 bytes @ 0xC
  2581                           
  2582  0061                     ??___itoee:	
  2583                           ; 1 bytes @ 0xC
  2584                           
  2585  0061                     set_display_value@value:	
  2586                           ; 1 bytes @ 0xC
  2587                           
  2588                           
  2589                           ; 2 bytes @ 0xC
  2590  0061                     	ds	2
  2591  0063                     ??_set_display_value:
  2592  0063                     ___eetoi@addr:	
  2593                           ; 1 bytes @ 0xE
  2594                           
  2595  0063                     ___itoee@addr:	
  2596                           ; 1 bytes @ 0xE
  2597                           
  2598                           
  2599                           ; 1 bytes @ 0xE
  2600  0063                     	ds	1
  2601  0064                     ___eetoi@data:
  2602                           
  2603                           ; 2 bytes @ 0xF
  2604  0064                     	ds	2
  2605  0066                     ??_init_digit:
  2606  0066                     set_display_value@buffer:	
  2607                           ; 1 bytes @ 0x11
  2608                           
  2609                           
  2610                           ; 2 bytes @ 0x11
  2611  0066                     	ds	1
  2612  0067                     init_digit@i:
  2613                           
  2614                           ; 1 bytes @ 0x12
  2615  0067                     	ds	1
  2616  0068                     ??_handle_received_commands:
  2617                           
  2618                           ; 1 bytes @ 0x13
  2619  0068                     	ds	2
  2620  006A                     ??_main:
  2621                           
  2622                           	psect	maintext
  2623  0640                     __pmaintext:	
  2624                           ; 1 bytes @ 0x15
  2625 ;;
  2626 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2627 ;;
  2628 ;; *************** function _main *****************
  2629 ;; Defined at:
  2630 ;;		line 137 in file "main.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : B1F/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels required when called: 8
  2650 ;; This function calls:
  2651 ;;		_SYSTEM_Initialize
  2652 ;;		_TMR1_SetInterruptHandler
  2653 ;;		_TMR2_SetInterruptHandler
  2654 ;;		_TMR4_SetInterruptHandler
  2655 ;;		_TMR6_SetInterruptHandler
  2656 ;;		_handle_received_commands
  2657 ;;		_init_digit
  2658 ;; This function is called by:
  2659 ;;		Startup code after reset
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _main
  2665  0640                     _main:
  2666  0640                     l3166:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2669                           
  2670                           
  2671                           ;main.c: 139:     SYSTEM_Initialize();
  2672  0640  3187  2770  3186   	fcall	_SYSTEM_Initialize
  2673  0643                     l3168:
  2674                           
  2675                           ;main.c: 140:     init_digit();
  2676  0643  3184  2422  3186   	fcall	_init_digit
  2677  0646                     l3170:
  2678                           
  2679                           ;main.c: 142:     (INTCONbits.GIE = 1);
  2680  0646  178B               	bsf	11,7	;volatile
  2681  0647                     l3172:
  2682                           
  2683                           ;main.c: 143:     (INTCONbits.PEIE = 1);
  2684  0647  170B               	bsf	11,6	;volatile
  2685  0648                     l3174:
  2686                           
  2687                           ;main.c: 145:     TMR1_SetInterruptHandler(blink_digit);
  2688  0648  3033               	movlw	low _blink_digit
  2689  0649  0020               	movlb	0	; select bank0
  2690  064A  00D9               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2691  064B  3007               	movlw	high _blink_digit
  2692  064C  00DA               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2693  064D  318E  26ED  3186   	fcall	_TMR1_SetInterruptHandler
  2694  0650                     l3176:
  2695                           
  2696                           ;main.c: 146:     TMR2_SetInterruptHandler(display_refresh);
  2697  0650  306C               	movlw	low _display_refresh
  2698  0651  0020               	movlb	0	; select bank0
  2699  0652  00D9               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2700  0653  3004               	movlw	high _display_refresh
  2701  0654  00DA               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2702  0655  318E  26F6  3186   	fcall	_TMR2_SetInterruptHandler
  2703  0658                     l3178:
  2704                           
  2705                           ;main.c: 147:     TMR4_SetInterruptHandler(decrease_num);
  2706  0658  3014               	movlw	low _decrease_num
  2707  0659  0020               	movlb	0	; select bank0
  2708  065A  00D9               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  2709  065B  3003               	movlw	high _decrease_num
  2710  065C  00DA               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  2711  065D  318E  26FF  3186   	fcall	_TMR4_SetInterruptHandler
  2712  0660                     l3180:
  2713                           
  2714                           ;main.c: 148:     TMR6_SetInterruptHandler(increase_num_automatic);
  2715  0660  30A2               	movlw	low _increase_num_automatic
  2716  0661  0020               	movlb	0	; select bank0
  2717  0662  00D9               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  2718  0663  3002               	movlw	high _increase_num_automatic
  2719  0664  00DA               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  2720  0665  318F  2708  3186   	fcall	_TMR6_SetInterruptHandler
  2721  0668                     l3182:
  2722                           
  2723                           ;main.c: 152:         handle_received_commands();
  2724  0668  3180  2062  3186   	fcall	_handle_received_commands
  2725  066B  2E68               	goto	l3182
  2726  066C  3180  2844         	ljmp	start
  2727  066E                     __end_of_main:
  2728                           
  2729                           	psect	text1
  2730  0422                     __ptext1:	
  2731 ;; *************** function _init_digit *****************
  2732 ;; Defined at:
  2733 ;;		line 177 in file "main.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  i               1   18[BANK0 ] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;Total ram usage:        2 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 7
  2754 ;; This function calls:
  2755 ;;		_TMR2_StopTimer
  2756 ;;		___eetoi
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _init_digit
  2764  0422                     _init_digit:
  2765  0422                     l2780:	
  2766                           ;incstack = 0
  2767                           ; Regs used in _init_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2768                           
  2769                           
  2770                           ;main.c: 179:     for (register uint8_t i = 0; i < 4; i++) {
  2771  0422  0020               	movlb	0	; select bank0
  2772  0423  01E7               	clrf	init_digit@i
  2773  0424                     l2786:
  2774                           
  2775                           ;main.c: 181:         g_memory_mass[i] = ge_memory_mass[i];
  2776  0424  3567               	lslf	init_digit@i,w
  2777  0425  3E00               	addlw	low _ge_memory_mass
  2778  0426  3187  27D0  3184   	fcall	___eetoi
  2779  0429  0020               	movlb	0	; select bank0
  2780  042A  3567               	lslf	init_digit@i,w
  2781  042B  3E3D               	addlw	(low (_g_memory_mass| 0))& (0+255)
  2782  042C  0086               	movwf	6
  2783  042D  0187               	clrf	7
  2784  042E  085F               	movf	?___eetoi,w
  2785  042F  3FC0               	movwi [0]fsr1
  2786  0430  0860               	movf	?___eetoi+1,w
  2787  0431  3FC1               	movwi [1]fsr1
  2788  0432                     l2788:
  2789                           
  2790                           ;main.c: 183:     }
  2791  0432  3001               	movlw	1
  2792  0433  00E6               	movwf	??_init_digit
  2793  0434  0866               	movf	??_init_digit,w
  2794  0435  07E7               	addwf	init_digit@i,f
  2795  0436                     l2790:
  2796  0436  3004               	movlw	4
  2797  0437  0267               	subwf	init_digit@i,w
  2798  0438  1C03               	skipc
  2799  0439  2C3B               	goto	u1721
  2800  043A  2C3C               	goto	u1720
  2801  043B                     u1721:
  2802  043B  2C24               	goto	l2786
  2803  043C                     u1720:
  2804  043C                     l2792:
  2805                           
  2806                           ;main.c: 185:     g_time_ms = ge_time_ms;
  2807  043C  3008               	movlw	(low _ge_time_ms)& (0+255)
  2808  043D  3187  27D0  3184   	fcall	___eetoi
  2809  0440  0020               	movlb	0	; select bank0
  2810  0441  0860               	movf	?___eetoi+1,w
  2811  0442  00AB               	movwf	_g_time_ms+1
  2812  0443  085F               	movf	?___eetoi,w
  2813  0444  00AA               	movwf	_g_time_ms
  2814  0445                     l2794:
  2815  0445  0022               	movlb	2	; select bank2
  2816  0446  120D               	bcf	13,4	;volatile
  2817  0447                     l2796:
  2818  0447  100C               	bcf	12,0	;volatile
  2819  0448                     l2798:
  2820  0448  130D               	bcf	13,6	;volatile
  2821  0449                     l2800:
  2822                           
  2823                           ;main.c: 191:     TMR2_StopTimer();
  2824  0449  318E  26AE  3184   	fcall	_TMR2_StopTimer
  2825  044C                     l2802:
  2826                           
  2827                           ;main.c: 193:     g_yekan.value = 0;
  2828  044C  0020               	movlb	0	; select bank0
  2829  044D  01BA               	clrf	_g_yekan+1
  2830  044E                     l2804:
  2831                           
  2832                           ;main.c: 194:     g_yekan.seven_segment_maping = g_7seg_table[g_yekan.value];
  2833  044E  083A               	movf	_g_yekan+1,w
  2834  044F  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  2835  0450  0086               	movwf	6
  2836  0451  0187               	clrf	7
  2837  0452  0801               	movf	1,w
  2838  0453  00E6               	movwf	??_init_digit
  2839  0454  0866               	movf	??_init_digit,w
  2840  0455  00BB               	movwf	_g_yekan+2
  2841  0456                     l2806:
  2842                           
  2843                           ;main.c: 195:     g_yekan.show = 1;
  2844  0456  143C               	bsf	_g_yekan+3,0
  2845  0457                     l2808:
  2846                           
  2847                           ;main.c: 197:     g_dahegan.value = 0;
  2848  0457  01B6               	clrf	_g_dahegan+1
  2849  0458                     l2810:
  2850                           
  2851                           ;main.c: 198:     g_dahegan.seven_segment_maping = g_7seg_table[g_dahegan.value];
  2852  0458  0836               	movf	_g_dahegan+1,w
  2853  0459  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  2854  045A  0086               	movwf	6
  2855  045B  0187               	clrf	7
  2856  045C  0801               	movf	1,w
  2857  045D  00E6               	movwf	??_init_digit
  2858  045E  0866               	movf	??_init_digit,w
  2859  045F  00B7               	movwf	_g_dahegan+2
  2860  0460                     l2812:
  2861                           
  2862                           ;main.c: 199:     g_dahegan.show = 1;
  2863  0460  1438               	bsf	_g_dahegan+3,0
  2864  0461                     l2814:
  2865                           
  2866                           ;main.c: 201:     g_sadegan.value = 0;
  2867  0461  01B2               	clrf	_g_sadegan+1
  2868  0462                     l2816:
  2869                           
  2870                           ;main.c: 202:     g_sadegan.seven_segment_maping = g_7seg_table[g_sadegan.value];
  2871  0462  0832               	movf	_g_sadegan+1,w
  2872  0463  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  2873  0464  0086               	movwf	6
  2874  0465  0187               	clrf	7
  2875  0466  0801               	movf	1,w
  2876  0467  00E6               	movwf	??_init_digit
  2877  0468  0866               	movf	??_init_digit,w
  2878  0469  00B3               	movwf	_g_sadegan+2
  2879  046A                     l2818:
  2880                           
  2881                           ;main.c: 203:     g_sadegan.show = 1;
  2882  046A  1434               	bsf	_g_sadegan+3,0
  2883  046B                     l493:
  2884  046B  0008               	return
  2885  046C                     __end_of_init_digit:
  2886                           
  2887                           	psect	text2
  2888  07D0                     __ptext2:	
  2889 ;; *************** function ___eetoi *****************
  2890 ;; Defined at:
  2891 ;;		line 112 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  addr            1    wreg     PTR eeprom void 
  2894 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  addr            1   14[BANK0 ] PTR eeprom void 
  2897 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  2898 ;;  data            2   15[BANK0 ] unsigned int 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  2   10[BANK0 ] unsigned int 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2912 ;;Total ram usage:        7 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 6
  2915 ;; This function calls:
  2916 ;;		___eecpymem
  2917 ;; This function is called by:
  2918 ;;		_init_digit
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function ___eetoi
  2924  07D0                     ___eetoi:
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in ___eetoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2928                           ;___eetoi@addr stored from wreg
  2929  07D0  0020               	movlb	0	; select bank0
  2930  07D1  00E3               	movwf	___eetoi@addr
  2931  07D2                     l2742:
  2932                           
  2933                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 112: __eetoi(__eeprom void *ad
      +                          dr);/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 113: {;/opt/microchip/xc8/v
      +                          2.32/pic/sources/c99/pic/__eeprom.c: 114:  unsigned int data;;/opt/microchip/xc8/v2.32/p
      +                          ic/sources/c99/pic/__eeprom.c: 115:  __eecpymem((unsigned char *) &data,addr,2);
  2934  07D2  0863               	movf	___eetoi@addr,w
  2935  07D3  00E1               	movwf	??___eetoi
  2936  07D4  0861               	movf	??___eetoi,w
  2937  07D5  00D9               	movwf	___eecpymem@from
  2938  07D6  3002               	movlw	2
  2939  07D7  00E2               	movwf	??___eetoi+1
  2940  07D8  0862               	movf	??___eetoi+1,w
  2941  07D9  00DA               	movwf	___eecpymem@size
  2942  07DA  3064               	movlw	(low (___eetoi@data| 0))& (0+255)
  2943  07DB  3184  24B3  3187   	fcall	___eecpymem
  2944  07DE                     l2744:
  2945                           
  2946                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 116:  return data;
  2947  07DE  0020               	movlb	0	; select bank0
  2948  07DF  0865               	movf	___eetoi@data+1,w
  2949  07E0  00E0               	movwf	?___eetoi+1
  2950  07E1  0864               	movf	___eetoi@data,w
  2951  07E2  00DF               	movwf	?___eetoi
  2952  07E3                     l680:
  2953  07E3  0008               	return
  2954  07E4                     __end_of___eetoi:
  2955                           
  2956                           	psect	text3
  2957  04B3                     __ptext3:	
  2958 ;; *************** function ___eecpymem *****************
  2959 ;; Defined at:
  2960 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  to              1    wreg     PTR volatile unsigned ch
  2963 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  2964 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  2965 ;;  from            1    4[BANK0 ] PTR eeprom unsigned char
  2966 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  2967 ;;  size            1    5[BANK0 ] unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  to              1    9[BANK0 ] PTR volatile unsigned ch
  2970 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  2971 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  2972 ;;  cp              1    8[BANK0 ] PTR volatile unsigned ch
  2973 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  2974 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;Total ram usage:        6 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 5
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		___eetoi
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function ___eecpymem
  3000  04B3                     ___eecpymem:
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  3004                           ;___eecpymem@to stored from wreg
  3005  04B3  0020               	movlb	0	; select bank0
  3006  04B4  00DE               	movwf	___eecpymem@to
  3007  04B5                     l2292:
  3008                           
  3009                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 6: __eecpymem(volatile unsigne
      +                          d char *to, __eeprom unsigned char * from, unsigned char size);/opt/microchip/xc8/v2.32/
      +                          pic/sources/c99/pic/__eeprom.c: 6: };/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eepr
      +                          om.c: 6: ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 6: ;/opt/microchip/xc
      +                          8/v2.32/pic/sources/c99/pic/__eeprom.c: 6: };/opt/microchip/xc8/v2.32/pic/sources/c99/pi
      +                          c/__eeprom.c: 7: {;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 7: 
  3010  04B5  085E               	movf	___eecpymem@to,w
  3011  04B6  00DB               	movwf	??___eecpymem
  3012  04B7  085B               	movf	??___eecpymem,w
  3013  04B8  00DD               	movwf	___eecpymem@cp
  3014  04B9                     l651:	
  3015                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 10:  while (EECON1bits.WR) con
      +                          tinue;;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 10:  __memcpyee(addr,(un
      +                          signed char *) &data,2);;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 10: {
  3016                           
  3017  04B9  0023               	movlb	3	; select bank3
  3018  04BA  1895               	btfsc	21,1	;volsfr
  3019  04BB  2CBD               	goto	u1161
  3020  04BC  2CBE               	goto	u1160
  3021  04BD                     u1161:
  3022  04BD  2CB9               	goto	l651
  3023  04BE                     u1160:
  3024  04BE                     l2294:
  3025                           
  3026                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 11:  EEADR = (unsigned char)fr
      +                          om;;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 11:  return data;;/opt/micr
      +                          ochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 11:  double data;
  3027  04BE  0020               	movlb	0	; select bank0
  3028  04BF  0859               	movf	___eecpymem@from,w
  3029  04C0  00DB               	movwf	??___eecpymem
  3030  04C1  01DC               	clrf	??___eecpymem+1
  3031  04C2  085B               	movf	??___eecpymem,w
  3032  04C3  0023               	movlb	3	; select bank3
  3033  04C4  0091               	movwf	17	;volatile
  3034  04C5  0020               	movlb	0	; select bank0
  3035  04C6  085C               	movf	??___eecpymem+1,w
  3036  04C7  0023               	movlb	3	; select bank3
  3037  04C8  0092               	movwf	18	;volatile
  3038                           
  3039                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 12:  while(size--) {;/opt/micr
      +                          ochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 12: };/opt/microchip/xc8/v2.32/pic/sourc
      +                          es/c99/pic/__eeprom.c: 12:  __eecpymem((unsigned char *) &data,addr,4);
  3040  04C9  2CE7               	goto	l2306
  3041  04CA                     l656:
  3042  04CA  0023               	movlb	3	; select bank3
  3043  04CB  1895               	btfsc	21,1	;volsfr
  3044  04CC  2CCE               	goto	u1171
  3045  04CD  2CCF               	goto	u1170
  3046  04CE                     u1171:
  3047  04CE  2CCA               	goto	l656
  3048  04CF                     u1170:
  3049  04CF                     l2296:
  3050                           
  3051                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 15:   EECON1 &= 0x7F;;/opt/mic
      +                          rochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 15: 
  3052  04CF  307F               	movlw	127
  3053  04D0  0020               	movlb	0	; select bank0
  3054  04D1  00DB               	movwf	??___eecpymem
  3055  04D2  085B               	movf	??___eecpymem,w
  3056  04D3  0023               	movlb	3	; select bank3
  3057  04D4  0595               	andwf	21,f	;volsfr
  3058  04D5                     l2298:
  3059                           
  3060                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 17:   EECON1bits.RD = 1;;/opt/
      +                          microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 17: __fttoee(__eeprom void *addr, fl
      +                          oat data)
  3061  04D5  1415               	bsf	21,0	;volsfr
  3062  04D6                     l2300:
  3063                           
  3064                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 18:   *cp++ = EEDATA;;/opt/mic
      +                          rochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 18: {
  3065  04D6  0813               	movf	19,w	;volatile
  3066  04D7  0020               	movlb	0	; select bank0
  3067  04D8  00DB               	movwf	??___eecpymem
  3068  04D9  085D               	movf	___eecpymem@cp,w
  3069  04DA  0086               	movwf	6
  3070  04DB  0187               	clrf	7
  3071  04DC  085B               	movf	??___eecpymem,w
  3072  04DD  0081               	movwf	1
  3073  04DE                     l2302:
  3074  04DE  3001               	movlw	1
  3075  04DF  00DB               	movwf	??___eecpymem
  3076  04E0  085B               	movf	??___eecpymem,w
  3077  04E1  07DD               	addwf	___eecpymem@cp,f
  3078  04E2                     l2304:
  3079                           
  3080                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 19:   ++EEADR;;/opt/microchip/
      +                          xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 19:  __memcpyee(addr,(unsigned char *) &data,3
      +                          );
  3081  04E2  3001               	movlw	1
  3082  04E3  0023               	movlb	3	; select bank3
  3083  04E4  0791               	addwf	17,f	;volatile
  3084  04E5  3000               	movlw	0
  3085  04E6  3D92               	addwfc	18,f	;volatile
  3086  04E7                     l2306:
  3087                           
  3088                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 12:  while(size--) {;/opt/micr
      +                          ochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 12: };/opt/microchip/xc8/v2.32/pic/sourc
      +                          es/c99/pic/__eeprom.c: 12:  __eecpymem((unsigned char *) &data,addr,4);
  3089  04E7  3001               	movlw	1
  3090  04E8  0020               	movlb	0	; select bank0
  3091  04E9  02DA               	subwf	___eecpymem@size,f
  3092  04EA  0A5A               	incf	___eecpymem@size,w
  3093  04EB  1D03               	btfss	3,2
  3094  04EC  2CEE               	goto	u1181
  3095  04ED  2CEF               	goto	u1180
  3096  04EE                     u1181:
  3097  04EE  2CCA               	goto	l656
  3098  04EF                     u1180:
  3099  04EF                     l660:
  3100  04EF  0008               	return
  3101  04F0                     __end_of___eecpymem:
  3102                           
  3103                           	psect	text4
  3104  0062                     __ptext4:	
  3105 ;; *************** function _handle_received_commands *****************
  3106 ;; Defined at:
  3107 ;;		line 541 in file "main.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;Total ram usage:        2 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 7
  3128 ;; This function calls:
  3129 ;;		_EUSART_is_rx_ready
  3130 ;;		_RX_Command
  3131 ;;		_TMR2_StartTimer
  3132 ;;		_TMR2_StopTimer
  3133 ;;		_TMR4_StartTimer
  3134 ;;		_TMR4_StopTimer
  3135 ;;		_TMR6_StartTimer
  3136 ;;		_TMR6_StopTimer
  3137 ;;		___itoee
  3138 ;;		___lwdiv
  3139 ;;		_end_select_digit
  3140 ;;		_get_display_value
  3141 ;;		_increase_digit
  3142 ;;		_select_digit
  3143 ;;		_set_display_value
  3144 ;;		_set_display_value_manual
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           
  3151                           ;psect for function _handle_received_commands
  3152  0062                     _handle_received_commands:
  3153  0062                     l3076:	
  3154                           ;incstack = 0
  3155                           ; Regs used in _handle_received_commands: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3156                           
  3157                           
  3158                           ;main.c: 543:     static uint8_t rxData;;main.c: 545:     if (EUSART_is_rx_ready()) {
  3159  0062  318E  26C1  3180   	fcall	_EUSART_is_rx_ready
  3160  0065  3A00               	xorlw	0
  3161  0066  1903               	skipnz
  3162  0067  2869               	goto	u1891
  3163  0068  286A               	goto	u1890
  3164  0069                     u1891:
  3165  0069  29BB               	goto	l604
  3166  006A                     u1890:
  3167  006A                     l3078:
  3168                           
  3169                           ;main.c: 547:         rxData = RX_Command();
  3170  006A  318F  27C8  3180   	fcall	_RX_Command
  3171  006D  0020               	movlb	0	; select bank0
  3172  006E  00E8               	movwf	??_handle_received_commands
  3173  006F  0868               	movf	??_handle_received_commands,w
  3174  0070  00D0               	movwf	handle_received_commands@rxData
  3175                           
  3176                           ;main.c: 549:         switch (rxData) {
  3177  0071  2969               	goto	l3160
  3178  0072                     l3080:
  3179                           
  3180                           ;main.c: 553:                 TMR2_StartTimer();
  3181  0072  318E  26AB  3180   	fcall	_TMR2_StartTimer
  3182                           
  3183                           ;main.c: 554:                 break;
  3184  0075  29BB               	goto	l604
  3185  0076                     l3082:
  3186                           
  3187                           ;main.c: 558:                 TMR2_StopTimer();
  3188  0076  318E  26AE  3180   	fcall	_TMR2_StopTimer
  3189                           
  3190                           ;main.c: 559:                 TMR4_StopTimer();
  3191  0079  318E  26B4  3180   	fcall	_TMR4_StopTimer
  3192                           
  3193                           ;main.c: 560:                 TMR6_StopTimer();
  3194  007C  318E  26BA  3180   	fcall	_TMR6_StopTimer
  3195  007F                     l3084:
  3196  007F  0022               	movlb	2	; select bank2
  3197  0080  120D               	bcf	13,4	;volatile
  3198  0081                     l3086:
  3199  0081  100C               	bcf	12,0	;volatile
  3200  0082                     l3088:
  3201  0082  130D               	bcf	13,6	;volatile
  3202  0083  29BB               	goto	l604
  3203  0084                     l3090:
  3204                           
  3205                           ;main.c: 568:                 select_digit();
  3206  0084  3185  2569  3180   	fcall	_select_digit
  3207                           
  3208                           ;main.c: 569:                 break;
  3209  0087  29BB               	goto	l604
  3210  0088                     l3092:
  3211                           
  3212                           ;main.c: 573:                 end_select_digit();
  3213  0088  318F  2727  3180   	fcall	_end_select_digit
  3214                           
  3215                           ;main.c: 574:                 break;
  3216  008B  29BB               	goto	l604
  3217  008C                     l3094:
  3218                           
  3219                           ;main.c: 578:                 increase_digit();
  3220  008C  3186  2699  3180   	fcall	_increase_digit
  3221                           
  3222                           ;main.c: 579:                 break;
  3223  008F  29BB               	goto	l604
  3224  0090                     l3096:
  3225                           
  3226                           ;main.c: 583:                 set_display_value_manual();
  3227  0090  318F  274F  3180   	fcall	_set_display_value_manual
  3228                           
  3229                           ;main.c: 584:                 break;
  3230  0093  29BB               	goto	l604
  3231  0094                     l3098:
  3232                           
  3233                           ;main.c: 588:                 set_display_value(0);
  3234  0094  3000               	movlw	0
  3235  0095  00E1               	movwf	set_display_value@value
  3236  0096  00E2               	movwf	set_display_value@value+1
  3237  0097  3181  21BC  3180   	fcall	_set_display_value
  3238                           
  3239                           ;main.c: 589:                 break;
  3240  009A  29BB               	goto	l604
  3241  009B                     l3100:
  3242                           
  3243                           ;main.c: 593:                 g_mass = get_display_value();
  3244  009B  3183  23D7  3180   	fcall	_get_display_value
  3245  009E  0020               	movlb	0	; select bank0
  3246  009F  0860               	movf	?_get_display_value+1,w
  3247  00A0  00C8               	movwf	_g_mass+1
  3248  00A1  085F               	movf	?_get_display_value,w
  3249  00A2  00C7               	movwf	_g_mass
  3250                           
  3251                           ;main.c: 594:                 break;
  3252  00A3  29BB               	goto	l604
  3253  00A4                     l3102:
  3254                           
  3255                           ;main.c: 599:                 set_display_value(g_mass);
  3256  00A4  0848               	movf	_g_mass+1,w
  3257  00A5  00E2               	movwf	set_display_value@value+1
  3258  00A6  0847               	movf	_g_mass,w
  3259  00A7  00E1               	movwf	set_display_value@value
  3260  00A8  3181  21BC  3180   	fcall	_set_display_value
  3261                           
  3262                           ;main.c: 600:                 break;
  3263  00AB  29BB               	goto	l604
  3264  00AC                     l3104:
  3265                           
  3266                           ;main.c: 605:                 g_time_ms = get_display_value();
  3267  00AC  3183  23D7  3180   	fcall	_get_display_value
  3268  00AF  0020               	movlb	0	; select bank0
  3269  00B0  0860               	movf	?_get_display_value+1,w
  3270  00B1  00AB               	movwf	_g_time_ms+1
  3271  00B2  085F               	movf	?_get_display_value,w
  3272  00B3  00AA               	movwf	_g_time_ms
  3273  00B4                     l3106:
  3274                           
  3275                           ;main.c: 606:                 ge_time_ms = g_time_ms;
  3276  00B4  082B               	movf	_g_time_ms+1,w
  3277  00B5  00E0               	movwf	___itoee@data+1
  3278  00B6  082A               	movf	_g_time_ms,w
  3279  00B7  00DF               	movwf	___itoee@data
  3280  00B8  3008               	movlw	(low _ge_time_ms)& (0+255)
  3281  00B9  318F  27A8  3180   	fcall	___itoee
  3282                           
  3283                           ;main.c: 607:                 break;
  3284  00BC  29BB               	goto	l604
  3285  00BD                     l3108:
  3286                           
  3287                           ;main.c: 612:                 set_display_value(g_time_ms);
  3288  00BD  082B               	movf	_g_time_ms+1,w
  3289  00BE  00E2               	movwf	set_display_value@value+1
  3290  00BF  082A               	movf	_g_time_ms,w
  3291  00C0  00E1               	movwf	set_display_value@value
  3292  00C1  3181  21BC  3180   	fcall	_set_display_value
  3293                           
  3294                           ;main.c: 613:                 break;
  3295  00C4  29BB               	goto	l604
  3296  00C5                     l3110:
  3297                           
  3298                           ;main.c: 618:                 g_setted_value = get_display_value();
  3299  00C5  3183  23D7  3180   	fcall	_get_display_value
  3300  00C8  0020               	movlb	0	; select bank0
  3301  00C9  0860               	movf	?_get_display_value+1,w
  3302  00CA  00CA               	movwf	_g_setted_value+1
  3303  00CB  085F               	movf	?_get_display_value,w
  3304  00CC  00C9               	movwf	_g_setted_value
  3305                           
  3306                           ;main.c: 619:                 break;
  3307  00CD  29BB               	goto	l604
  3308  00CE                     l3112:
  3309                           
  3310                           ;main.c: 624:                 g_decrease_delay = g_time_ms / 10;
  3311  00CE  300A               	movlw	10
  3312  00CF  00D9               	movwf	___lwdiv@divisor
  3313  00D0  3000               	movlw	0
  3314  00D1  00DA               	movwf	___lwdiv@divisor+1
  3315  00D2  082B               	movf	_g_time_ms+1,w
  3316  00D3  00DC               	movwf	___lwdiv@dividend+1
  3317  00D4  082A               	movf	_g_time_ms,w
  3318  00D5  00DB               	movwf	___lwdiv@dividend
  3319  00D6  3184  24F0  3180   	fcall	___lwdiv
  3320  00D9  0020               	movlb	0	; select bank0
  3321  00DA  085A               	movf	?___lwdiv+1,w
  3322  00DB  00AF               	movwf	_g_decrease_delay+1
  3323  00DC  0859               	movf	?___lwdiv,w
  3324  00DD  00AE               	movwf	_g_decrease_delay
  3325  00DE                     l3114:
  3326                           
  3327                           ;main.c: 625:                 TMR4_StartTimer();
  3328  00DE  318E  26B1  3180   	fcall	_TMR4_StartTimer
  3329                           
  3330                           ;main.c: 626:                 break;
  3331  00E1  29BB               	goto	l604
  3332  00E2                     l3116:
  3333                           
  3334                           ;main.c: 631:                 TMR4_StopTimer();
  3335  00E2  318E  26B4  3180   	fcall	_TMR4_StopTimer
  3336                           
  3337                           ;main.c: 632:                 break;
  3338  00E5  29BB               	goto	l604
  3339  00E6                     l3118:
  3340                           
  3341                           ;main.c: 637:                 set_display_value(0);
  3342  00E6  3000               	movlw	0
  3343  00E7  00E1               	movwf	set_display_value@value
  3344  00E8  00E2               	movwf	set_display_value@value+1
  3345  00E9  3181  21BC  3180   	fcall	_set_display_value
  3346  00EC                     l3120:
  3347                           
  3348                           ;main.c: 638:                 g_increase_delay = g_time_ms / 10;
  3349  00EC  300A               	movlw	10
  3350  00ED  0020               	movlb	0	; select bank0
  3351  00EE  00D9               	movwf	___lwdiv@divisor
  3352  00EF  3000               	movlw	0
  3353  00F0  00DA               	movwf	___lwdiv@divisor+1
  3354  00F1  082B               	movf	_g_time_ms+1,w
  3355  00F2  00DC               	movwf	___lwdiv@dividend+1
  3356  00F3  082A               	movf	_g_time_ms,w
  3357  00F4  00DB               	movwf	___lwdiv@dividend
  3358  00F5  3184  24F0  3180   	fcall	___lwdiv
  3359  00F8  0020               	movlb	0	; select bank0
  3360  00F9  085A               	movf	?___lwdiv+1,w
  3361  00FA  00AD               	movwf	_g_increase_delay+1
  3362  00FB  0859               	movf	?___lwdiv,w
  3363  00FC  00AC               	movwf	_g_increase_delay
  3364  00FD                     l3122:
  3365                           
  3366                           ;main.c: 639:                 TMR6_StartTimer();
  3367  00FD  318E  26B7  3180   	fcall	_TMR6_StartTimer
  3368                           
  3369                           ;main.c: 640:                 break;
  3370  0100  29BB               	goto	l604
  3371  0101                     l3124:
  3372                           
  3373                           ;main.c: 645:                 TMR6_StopTimer();
  3374  0101  318E  26BA  3180   	fcall	_TMR6_StopTimer
  3375  0104  2890               	goto	l3096
  3376  0105                     l3128:
  3377                           
  3378                           ;main.c: 652:                 ge_memory_mass[0] = g_mass;
  3379  0105  0848               	movf	_g_mass+1,w
  3380  0106  00E0               	movwf	___itoee@data+1
  3381  0107  0847               	movf	_g_mass,w
  3382  0108  00DF               	movwf	___itoee@data
  3383  0109  3000               	movlw	(low _ge_memory_mass)& (0+255)
  3384  010A  318F  27A8  3180   	fcall	___itoee
  3385  010D                     l3130:
  3386                           
  3387                           ;main.c: 653:                 g_memory_mass[0] = g_mass;
  3388  010D  0020               	movlb	0	; select bank0
  3389  010E  0848               	movf	_g_mass+1,w
  3390  010F  00BE               	movwf	_g_memory_mass+1
  3391  0110  0847               	movf	_g_mass,w
  3392  0111  00BD               	movwf	_g_memory_mass
  3393                           
  3394                           ;main.c: 654:                 break;
  3395  0112  29BB               	goto	l604
  3396  0113                     l3132:
  3397                           
  3398                           ;main.c: 659:                 g_time_ms_backup = g_time_ms;
  3399  0113  082B               	movf	_g_time_ms+1,w
  3400  0114  00C6               	movwf	_g_time_ms_backup+1
  3401  0115  082A               	movf	_g_time_ms,w
  3402  0116  00C5               	movwf	_g_time_ms_backup
  3403  0117                     l3134:
  3404                           
  3405                           ;main.c: 660:                 set_display_value(g_memory_mass[0]);
  3406  0117  083E               	movf	_g_memory_mass+1,w
  3407  0118  00E2               	movwf	set_display_value@value+1
  3408  0119  083D               	movf	_g_memory_mass,w
  3409  011A  00E1               	movwf	set_display_value@value
  3410  011B  3181  21BC  3180   	fcall	_set_display_value
  3411                           
  3412                           ;main.c: 661:                 break;
  3413  011E  29BB               	goto	l604
  3414  011F                     l3136:
  3415                           
  3416                           ;main.c: 666:                 ge_memory_mass[1] = g_mass;
  3417  011F  0848               	movf	_g_mass+1,w
  3418  0120  00E0               	movwf	___itoee@data+1
  3419  0121  0847               	movf	_g_mass,w
  3420  0122  00DF               	movwf	___itoee@data
  3421  0123  3002               	movlw	(low (_ge_memory_mass+2))& (0+255)
  3422  0124  318F  27A8  3180   	fcall	___itoee
  3423  0127                     l3138:
  3424                           
  3425                           ;main.c: 667:                 g_memory_mass[1] = g_mass;
  3426  0127  0020               	movlb	0	; select bank0
  3427  0128  0848               	movf	_g_mass+1,w
  3428  0129  00C0               	movwf	_g_memory_mass+3
  3429  012A  0847               	movf	_g_mass,w
  3430  012B  00BF               	movwf	_g_memory_mass+2
  3431                           
  3432                           ;main.c: 668:                 break;
  3433  012C  29BB               	goto	l604
  3434  012D                     l3140:
  3435                           
  3436                           ;main.c: 673:                 g_time_ms_backup = g_time_ms;
  3437  012D  082B               	movf	_g_time_ms+1,w
  3438  012E  00C6               	movwf	_g_time_ms_backup+1
  3439  012F  082A               	movf	_g_time_ms,w
  3440  0130  00C5               	movwf	_g_time_ms_backup
  3441  0131                     l3142:
  3442                           
  3443                           ;main.c: 674:                 set_display_value(g_memory_mass[1]);
  3444  0131  0840               	movf	_g_memory_mass+3,w
  3445  0132  00E2               	movwf	set_display_value@value+1
  3446  0133  083F               	movf	_g_memory_mass+2,w
  3447  0134  00E1               	movwf	set_display_value@value
  3448  0135  3181  21BC  3180   	fcall	_set_display_value
  3449                           
  3450                           ;main.c: 675:                 break;
  3451  0138  29BB               	goto	l604
  3452  0139                     l3144:
  3453                           
  3454                           ;main.c: 680:                 ge_memory_mass[2] = g_mass;
  3455  0139  0848               	movf	_g_mass+1,w
  3456  013A  00E0               	movwf	___itoee@data+1
  3457  013B  0847               	movf	_g_mass,w
  3458  013C  00DF               	movwf	___itoee@data
  3459  013D  3004               	movlw	(low (_ge_memory_mass+4))& (0+255)
  3460  013E  318F  27A8  3180   	fcall	___itoee
  3461  0141                     l3146:
  3462                           
  3463                           ;main.c: 681:                 g_memory_mass[2] = g_mass;
  3464  0141  0020               	movlb	0	; select bank0
  3465  0142  0848               	movf	_g_mass+1,w
  3466  0143  00C2               	movwf	_g_memory_mass+5
  3467  0144  0847               	movf	_g_mass,w
  3468  0145  00C1               	movwf	_g_memory_mass+4
  3469                           
  3470                           ;main.c: 682:                 break;
  3471  0146  29BB               	goto	l604
  3472  0147                     l3148:
  3473                           
  3474                           ;main.c: 687:                 g_time_ms_backup = g_time_ms;
  3475  0147  082B               	movf	_g_time_ms+1,w
  3476  0148  00C6               	movwf	_g_time_ms_backup+1
  3477  0149  082A               	movf	_g_time_ms,w
  3478  014A  00C5               	movwf	_g_time_ms_backup
  3479  014B                     l3150:
  3480                           
  3481                           ;main.c: 688:                 set_display_value(g_memory_mass[2]);
  3482  014B  0842               	movf	_g_memory_mass+5,w
  3483  014C  00E2               	movwf	set_display_value@value+1
  3484  014D  0841               	movf	_g_memory_mass+4,w
  3485  014E  00E1               	movwf	set_display_value@value
  3486  014F  3181  21BC  3180   	fcall	_set_display_value
  3487                           
  3488                           ;main.c: 689:                 break;
  3489  0152  29BB               	goto	l604
  3490  0153                     l3152:
  3491                           
  3492                           ;main.c: 694:                 ge_memory_mass[3] = g_mass;
  3493  0153  0848               	movf	_g_mass+1,w
  3494  0154  00E0               	movwf	___itoee@data+1
  3495  0155  0847               	movf	_g_mass,w
  3496  0156  00DF               	movwf	___itoee@data
  3497  0157  3006               	movlw	(low (_ge_memory_mass+6))& (0+255)
  3498  0158  318F  27A8  3180   	fcall	___itoee
  3499  015B                     l3154:
  3500                           
  3501                           ;main.c: 695:                 g_memory_mass[3] = g_mass;
  3502  015B  0020               	movlb	0	; select bank0
  3503  015C  0848               	movf	_g_mass+1,w
  3504  015D  00C4               	movwf	_g_memory_mass+7
  3505  015E  0847               	movf	_g_mass,w
  3506  015F  00C3               	movwf	_g_memory_mass+6
  3507                           
  3508                           ;main.c: 696:                 break;
  3509  0160  29BB               	goto	l604
  3510  0161                     l3156:
  3511                           
  3512                           ;main.c: 701:                 set_display_value(g_memory_mass[3]);
  3513  0161  0844               	movf	_g_memory_mass+7,w
  3514  0162  00E2               	movwf	set_display_value@value+1
  3515  0163  0843               	movf	_g_memory_mass+6,w
  3516  0164  00E1               	movwf	set_display_value@value
  3517  0165  3181  21BC  3180   	fcall	_set_display_value
  3518                           
  3519                           ;main.c: 702:                 break;
  3520  0168  29BB               	goto	l604
  3521  0169                     l3160:
  3522  0169  0850               	movf	handle_received_commands@rxData,w
  3523  016A  00E8               	movwf	??_handle_received_commands
  3524  016B  01E9               	clrf	??_handle_received_commands+1
  3525                           
  3526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3527                           ; Switch size 1, requested type "simple"
  3528                           ; Number of cases is 1, Range of values is 0 to 0
  3529                           ; switch strategies available:
  3530                           ; Name         Instructions Cycles
  3531                           ; simple_byte            4     3 (average)
  3532                           ; direct_byte            8     6 (fixed)
  3533                           ; jumptable            260     6 (fixed)
  3534                           ;	Chosen strategy is simple_byte
  3535  016C  0869               	movf	??_handle_received_commands+1,w
  3536  016D  3A00               	xorlw	0	; case 0
  3537  016E  1903               	skipnz
  3538  016F  2971               	goto	l3264
  3539  0170  29BB               	goto	l604
  3540  0171                     l3264:
  3541                           
  3542                           ; Switch size 1, requested type "simple"
  3543                           ; Number of cases is 24, Range of values is 11 to 142
  3544                           ; switch strategies available:
  3545                           ; Name         Instructions Cycles
  3546                           ; simple_byte           73    37 (average)
  3547                           ; jumptable            263     9 (fixed)
  3548                           ;	Chosen strategy is simple_byte
  3549  0171  0868               	movf	??_handle_received_commands,w
  3550  0172  3A0B               	xorlw	11	; case 11
  3551  0173  1903               	skipnz
  3552  0174  2872               	goto	l3080
  3553  0175  3A07               	xorlw	7	; case 12
  3554  0176  1903               	skipnz
  3555  0177  2876               	goto	l3082
  3556  0178  3A12               	xorlw	18	; case 30
  3557  0179  1903               	skipnz
  3558  017A  2890               	goto	l3096
  3559  017B  3A01               	xorlw	1	; case 31
  3560  017C  1903               	skipnz
  3561  017D  2894               	goto	l3098
  3562  017E  3A3F               	xorlw	63	; case 32
  3563  017F  1903               	skipnz
  3564  0180  28BD               	goto	l3108
  3565  0181  3A01               	xorlw	1	; case 33
  3566  0182  1903               	skipnz
  3567  0183  28AC               	goto	l3104
  3568  0184  3A02               	xorlw	2	; case 35
  3569  0185  1903               	skipnz
  3570  0186  28C5               	goto	l3110
  3571  0187  3A0A               	xorlw	10	; case 41
  3572  0188  1903               	skipnz
  3573  0189  2884               	goto	l3090
  3574  018A  3A03               	xorlw	3	; case 42
  3575  018B  1903               	skipnz
  3576  018C  2888               	goto	l3092
  3577  018D  3A01               	xorlw	1	; case 43
  3578  018E  1903               	skipnz
  3579  018F  288C               	goto	l3094
  3580  0190  3A15               	xorlw	21	; case 62
  3581  0191  1903               	skipnz
  3582  0192  28CE               	goto	l3112
  3583  0193  3A01               	xorlw	1	; case 63
  3584  0194  1903               	skipnz
  3585  0195  28E2               	goto	l3116
  3586  0196  3A7F               	xorlw	127	; case 64
  3587  0197  1903               	skipnz
  3588  0198  28E6               	goto	l3118
  3589  0199  3A01               	xorlw	1	; case 65
  3590  019A  1903               	skipnz
  3591  019B  2901               	goto	l3124
  3592  019C  3A03               	xorlw	3	; case 66
  3593  019D  1903               	skipnz
  3594  019E  28A4               	goto	l3102
  3595  019F  3A01               	xorlw	1	; case 67
  3596  01A0  1903               	skipnz
  3597  01A1  289B               	goto	l3100
  3598  01A2  3A2C               	xorlw	44	; case 111
  3599  01A3  1903               	skipnz
  3600  01A4  2905               	goto	l3128
  3601  01A5  3A1F               	xorlw	31	; case 112
  3602  01A6  1903               	skipnz
  3603  01A7  2913               	goto	l3132
  3604  01A8  3A09               	xorlw	9	; case 121
  3605  01A9  1903               	skipnz
  3606  01AA  291F               	goto	l3136
  3607  01AB  3A03               	xorlw	3	; case 122
  3608  01AC  1903               	skipnz
  3609  01AD  292D               	goto	l3140
  3610  01AE  3AF9               	xorlw	249	; case 131
  3611  01AF  1903               	skipnz
  3612  01B0  2939               	goto	l3144
  3613  01B1  3A07               	xorlw	7	; case 132
  3614  01B2  1903               	skipnz
  3615  01B3  2947               	goto	l3148
  3616  01B4  3A09               	xorlw	9	; case 141
  3617  01B5  1903               	skipnz
  3618  01B6  2953               	goto	l3152
  3619  01B7  3A03               	xorlw	3	; case 142
  3620  01B8  1903               	skipnz
  3621  01B9  2961               	goto	l3156
  3622  01BA  29BB               	goto	l604
  3623  01BB                     l604:
  3624  01BB  0008               	return
  3625  01BC                     __end_of_handle_received_commands:
  3626                           
  3627                           	psect	text5
  3628  0F4F                     __ptext5:	
  3629 ;; *************** function _set_display_value_manual *****************
  3630 ;; Defined at:
  3631 ;;		line 839 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3649 ;;Total ram usage:        1 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 5
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_handle_received_commands
  3656 ;;		_increase_num_manual
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _set_display_value_manual
  3662  0F4F                     _set_display_value_manual:
  3663  0F4F                     l2660:	
  3664                           ;incstack = 0
  3665                           ; Regs used in _set_display_value_manual: [wreg]
  3666                           
  3667                           
  3668                           ;main.c: 841:     g_sadegan.seven_segment_maping = middle_line_7seg;
  3669  0F4F  087D               	movf	_middle_line_7seg,w
  3670  0F50  0020               	movlb	0	; select bank0
  3671  0F51  00D9               	movwf	??_set_display_value_manual
  3672  0F52  0859               	movf	??_set_display_value_manual,w
  3673  0F53  00B3               	movwf	_g_sadegan+2
  3674                           
  3675                           ;main.c: 842:     g_dahegan.seven_segment_maping = middle_line_7seg;
  3676  0F54  087D               	movf	_middle_line_7seg,w
  3677  0F55  00D9               	movwf	??_set_display_value_manual
  3678  0F56  0859               	movf	??_set_display_value_manual,w
  3679  0F57  00B7               	movwf	_g_dahegan+2
  3680                           
  3681                           ;main.c: 843:     g_yekan.seven_segment_maping = middle_line_7seg;
  3682  0F58  087D               	movf	_middle_line_7seg,w
  3683  0F59  00D9               	movwf	??_set_display_value_manual
  3684  0F5A  0859               	movf	??_set_display_value_manual,w
  3685  0F5B  00BB               	movwf	_g_yekan+2
  3686  0F5C                     l634:
  3687  0F5C  0008               	return
  3688  0F5D                     __end_of_set_display_value_manual:
  3689                           
  3690                           	psect	text6
  3691  01BC                     __ptext6:	
  3692 ;; *************** function _set_display_value *****************
  3693 ;; Defined at:
  3694 ;;		line 501 in file "main.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  value           2   12[BANK0 ] unsigned short 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  buffer          2   17[BANK0 ] unsigned short 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;Total ram usage:        7 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 6
  3715 ;; This function calls:
  3716 ;;		___lwdiv
  3717 ;;		___lwmod
  3718 ;; This function is called by:
  3719 ;;		_handle_received_commands
  3720 ;;		_increase_num_manual
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function _set_display_value
  3726  01BC                     _set_display_value:
  3727  01BC                     l2642:	
  3728                           ;incstack = 0
  3729                           ; Regs used in _set_display_value: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3730                           
  3731                           
  3732                           ;main.c: 503:     uint16_t buffer = value;
  3733  01BC  0020               	movlb	0	; select bank0
  3734  01BD  0862               	movf	set_display_value@value+1,w
  3735  01BE  00E7               	movwf	set_display_value@buffer+1
  3736  01BF  0861               	movf	set_display_value@value,w
  3737  01C0  00E6               	movwf	set_display_value@buffer
  3738                           
  3739                           ;main.c: 505:     if (value <= 999) {
  3740  01C1  3003               	movlw	3
  3741  01C2  0262               	subwf	set_display_value@value+1,w
  3742  01C3  30E8               	movlw	232
  3743  01C4  1903               	skipnz
  3744  01C5  0261               	subwf	set_display_value@value,w
  3745  01C6  1803               	skipnc
  3746  01C7  29C9               	goto	u1541
  3747  01C8  29CA               	goto	u1540
  3748  01C9                     u1541:
  3749  01C9  2A2E               	goto	l557
  3750  01CA                     u1540:
  3751  01CA                     l2644:
  3752                           
  3753                           ;main.c: 507:         g_sadegan.value = buffer / g_sadegan.position;
  3754  01CA  0831               	movf	_g_sadegan,w
  3755  01CB  00E3               	movwf	??_set_display_value
  3756  01CC  01E4               	clrf	??_set_display_value+1
  3757  01CD  0863               	movf	??_set_display_value,w
  3758  01CE  00D9               	movwf	___lwdiv@divisor
  3759  01CF  0864               	movf	??_set_display_value+1,w
  3760  01D0  00DA               	movwf	___lwdiv@divisor+1
  3761  01D1  0867               	movf	set_display_value@buffer+1,w
  3762  01D2  00DC               	movwf	___lwdiv@dividend+1
  3763  01D3  0866               	movf	set_display_value@buffer,w
  3764  01D4  00DB               	movwf	___lwdiv@dividend
  3765  01D5  3184  24F0  3181   	fcall	___lwdiv
  3766  01D8  0020               	movlb	0	; select bank0
  3767  01D9  0859               	movf	?___lwdiv,w
  3768  01DA  00E5               	movwf	??_set_display_value+2
  3769  01DB  0865               	movf	??_set_display_value+2,w
  3770  01DC  00B2               	movwf	_g_sadegan+1
  3771                           
  3772                           ;main.c: 508:         buffer %= g_sadegan.position;
  3773  01DD  0831               	movf	_g_sadegan,w
  3774  01DE  00E3               	movwf	??_set_display_value
  3775  01DF  01E4               	clrf	??_set_display_value+1
  3776  01E0  0863               	movf	??_set_display_value,w
  3777  01E1  00D9               	movwf	___lwmod@divisor
  3778  01E2  0864               	movf	??_set_display_value+1,w
  3779  01E3  00DA               	movwf	___lwmod@divisor+1
  3780  01E4  0867               	movf	set_display_value@buffer+1,w
  3781  01E5  00DC               	movwf	___lwmod@dividend+1
  3782  01E6  0866               	movf	set_display_value@buffer,w
  3783  01E7  00DB               	movwf	___lwmod@dividend
  3784  01E8  3185  25D7  3181   	fcall	___lwmod
  3785  01EB  0020               	movlb	0	; select bank0
  3786  01EC  085A               	movf	?___lwmod+1,w
  3787  01ED  00E7               	movwf	set_display_value@buffer+1
  3788  01EE  0859               	movf	?___lwmod,w
  3789  01EF  00E6               	movwf	set_display_value@buffer
  3790                           
  3791                           ;main.c: 510:         g_dahegan.value = buffer / g_dahegan.position;
  3792  01F0  0835               	movf	_g_dahegan,w
  3793  01F1  00E3               	movwf	??_set_display_value
  3794  01F2  01E4               	clrf	??_set_display_value+1
  3795  01F3  0863               	movf	??_set_display_value,w
  3796  01F4  00D9               	movwf	___lwdiv@divisor
  3797  01F5  0864               	movf	??_set_display_value+1,w
  3798  01F6  00DA               	movwf	___lwdiv@divisor+1
  3799  01F7  0867               	movf	set_display_value@buffer+1,w
  3800  01F8  00DC               	movwf	___lwdiv@dividend+1
  3801  01F9  0866               	movf	set_display_value@buffer,w
  3802  01FA  00DB               	movwf	___lwdiv@dividend
  3803  01FB  3184  24F0  3181   	fcall	___lwdiv
  3804  01FE  0020               	movlb	0	; select bank0
  3805  01FF  0859               	movf	?___lwdiv,w
  3806  0200  00E5               	movwf	??_set_display_value+2
  3807  0201  0865               	movf	??_set_display_value+2,w
  3808  0202  00B6               	movwf	_g_dahegan+1
  3809                           
  3810                           ;main.c: 512:         g_yekan.value = buffer % g_dahegan.position;
  3811  0203  0835               	movf	_g_dahegan,w
  3812  0204  00E3               	movwf	??_set_display_value
  3813  0205  01E4               	clrf	??_set_display_value+1
  3814  0206  0863               	movf	??_set_display_value,w
  3815  0207  00D9               	movwf	___lwmod@divisor
  3816  0208  0864               	movf	??_set_display_value+1,w
  3817  0209  00DA               	movwf	___lwmod@divisor+1
  3818  020A  0867               	movf	set_display_value@buffer+1,w
  3819  020B  00DC               	movwf	___lwmod@dividend+1
  3820  020C  0866               	movf	set_display_value@buffer,w
  3821  020D  00DB               	movwf	___lwmod@dividend
  3822  020E  3185  25D7  3181   	fcall	___lwmod
  3823  0211  0020               	movlb	0	; select bank0
  3824  0212  0859               	movf	?___lwmod,w
  3825  0213  00E5               	movwf	??_set_display_value+2
  3826  0214  0865               	movf	??_set_display_value+2,w
  3827  0215  00BA               	movwf	_g_yekan+1
  3828  0216                     l2646:
  3829                           
  3830                           ;main.c: 514:         g_sadegan.seven_segment_maping = g_7seg_table[g_sadegan.value];
  3831  0216  0832               	movf	_g_sadegan+1,w
  3832  0217  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  3833  0218  0086               	movwf	6
  3834  0219  0187               	clrf	7
  3835  021A  0801               	movf	1,w
  3836  021B  00E3               	movwf	??_set_display_value
  3837  021C  0863               	movf	??_set_display_value,w
  3838  021D  00B3               	movwf	_g_sadegan+2
  3839  021E                     l2648:
  3840                           
  3841                           ;main.c: 515:         g_dahegan.seven_segment_maping = g_7seg_table[g_dahegan.value];
  3842  021E  0836               	movf	_g_dahegan+1,w
  3843  021F  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  3844  0220  0086               	movwf	6
  3845  0221  0187               	clrf	7
  3846  0222  0801               	movf	1,w
  3847  0223  00E3               	movwf	??_set_display_value
  3848  0224  0863               	movf	??_set_display_value,w
  3849  0225  00B7               	movwf	_g_dahegan+2
  3850  0226                     l2650:
  3851                           
  3852                           ;main.c: 516:         g_yekan.seven_segment_maping = g_7seg_table[g_yekan.value];
  3853  0226  083A               	movf	_g_yekan+1,w
  3854  0227  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  3855  0228  0086               	movwf	6
  3856  0229  0187               	clrf	7
  3857  022A  0801               	movf	1,w
  3858  022B  00E3               	movwf	??_set_display_value
  3859  022C  0863               	movf	??_set_display_value,w
  3860  022D  00BB               	movwf	_g_yekan+2
  3861  022E                     l557:
  3862  022E  0008               	return
  3863  022F                     __end_of_set_display_value:
  3864                           
  3865                           	psect	text7
  3866  05D7                     __ptext7:	
  3867 ;; *************** function ___lwmod *****************
  3868 ;; Defined at:
  3869 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwmod.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  divisor         2    4[BANK0 ] unsigned int 
  3872 ;;  dividend        2    6[BANK0 ] unsigned int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  counter         1    9[BANK0 ] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  2    4[BANK0 ] unsigned int 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;Total ram usage:        6 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 5
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_set_display_value
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function ___lwmod
  3900  05D7                     ___lwmod:
  3901  05D7                     l2378:	
  3902                           ;incstack = 0
  3903                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3904                           
  3905  05D7  0020               	movlb	0	; select bank0
  3906  05D8  0859               	movf	___lwmod@divisor,w
  3907  05D9  045A               	iorwf	___lwmod@divisor+1,w
  3908  05DA  1903               	btfsc	3,2
  3909  05DB  2DDD               	goto	u1351
  3910  05DC  2DDE               	goto	u1350
  3911  05DD                     u1351:
  3912  05DD  2E07               	goto	l2396
  3913  05DE                     u1350:
  3914  05DE                     l2380:
  3915  05DE  01DE               	clrf	___lwmod@counter
  3916  05DF  0ADE               	incf	___lwmod@counter,f
  3917  05E0  2DEA               	goto	l2386
  3918  05E1                     l2382:
  3919  05E1  3001               	movlw	1
  3920  05E2                     u1365:
  3921  05E2  35D9               	lslf	___lwmod@divisor,f
  3922  05E3  0DDA               	rlf	___lwmod@divisor+1,f
  3923  05E4  0B89               	decfsz	9,f
  3924  05E5  2DE2               	goto	u1365
  3925  05E6                     l2384:
  3926  05E6  3001               	movlw	1
  3927  05E7  00DD               	movwf	??___lwmod
  3928  05E8  085D               	movf	??___lwmod,w
  3929  05E9  07DE               	addwf	___lwmod@counter,f
  3930  05EA                     l2386:
  3931  05EA  1FDA               	btfss	___lwmod@divisor+1,7
  3932  05EB  2DED               	goto	u1371
  3933  05EC  2DEE               	goto	u1370
  3934  05ED                     u1371:
  3935  05ED  2DE1               	goto	l2382
  3936  05EE                     u1370:
  3937  05EE                     l2388:
  3938  05EE  085A               	movf	___lwmod@divisor+1,w
  3939  05EF  025C               	subwf	___lwmod@dividend+1,w
  3940  05F0  1D03               	skipz
  3941  05F1  2DF4               	goto	u1385
  3942  05F2  0859               	movf	___lwmod@divisor,w
  3943  05F3  025B               	subwf	___lwmod@dividend,w
  3944  05F4                     u1385:
  3945  05F4  1C03               	skipc
  3946  05F5  2DF7               	goto	u1381
  3947  05F6  2DF8               	goto	u1380
  3948  05F7                     u1381:
  3949  05F7  2DFC               	goto	l2392
  3950  05F8                     u1380:
  3951  05F8                     l2390:
  3952  05F8  0859               	movf	___lwmod@divisor,w
  3953  05F9  02DB               	subwf	___lwmod@dividend,f
  3954  05FA  085A               	movf	___lwmod@divisor+1,w
  3955  05FB  3BDC               	subwfb	___lwmod@dividend+1,f
  3956  05FC                     l2392:
  3957  05FC  3001               	movlw	1
  3958  05FD                     u1395:
  3959  05FD  36DA               	lsrf	___lwmod@divisor+1,f
  3960  05FE  0CD9               	rrf	___lwmod@divisor,f
  3961  05FF  0B89               	decfsz	9,f
  3962  0600  2DFD               	goto	u1395
  3963  0601                     l2394:
  3964  0601  3001               	movlw	1
  3965  0602  02DE               	subwf	___lwmod@counter,f
  3966  0603  1D03               	btfss	3,2
  3967  0604  2E06               	goto	u1401
  3968  0605  2E07               	goto	u1400
  3969  0606                     u1401:
  3970  0606  2DEE               	goto	l2388
  3971  0607                     u1400:
  3972  0607                     l2396:
  3973  0607  085C               	movf	___lwmod@dividend+1,w
  3974  0608  00DA               	movwf	?___lwmod+1
  3975  0609  085B               	movf	___lwmod@dividend,w
  3976  060A  00D9               	movwf	?___lwmod
  3977  060B                     l1074:
  3978  060B  0008               	return
  3979  060C                     __end_of___lwmod:
  3980                           
  3981                           	psect	text8
  3982  04F0                     __ptext8:	
  3983 ;; *************** function ___lwdiv *****************
  3984 ;; Defined at:
  3985 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  divisor         2    4[BANK0 ] unsigned int 
  3988 ;;  dividend        2    6[BANK0 ] unsigned int 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  quotient        2    9[BANK0 ] unsigned int 
  3991 ;;  counter         1   11[BANK0 ] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  2    4[BANK0 ] unsigned int 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;Total ram usage:        8 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 5
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_set_display_value
  4012 ;;		_handle_received_commands
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           
  4017                           ;psect for function ___lwdiv
  4018  04F0                     ___lwdiv:
  4019  04F0                     l2352:	
  4020                           ;incstack = 0
  4021                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4022                           
  4023  04F0  0020               	movlb	0	; select bank0
  4024  04F1  01DE               	clrf	___lwdiv@quotient
  4025  04F2  01DF               	clrf	___lwdiv@quotient+1
  4026  04F3                     l2354:
  4027  04F3  0859               	movf	___lwdiv@divisor,w
  4028  04F4  045A               	iorwf	___lwdiv@divisor+1,w
  4029  04F5  1903               	btfsc	3,2
  4030  04F6  2CF8               	goto	u1281
  4031  04F7  2CF9               	goto	u1280
  4032  04F8                     u1281:
  4033  04F8  2D28               	goto	l2374
  4034  04F9                     u1280:
  4035  04F9                     l2356:
  4036  04F9  01E0               	clrf	___lwdiv@counter
  4037  04FA  0AE0               	incf	___lwdiv@counter,f
  4038  04FB  2D05               	goto	l2362
  4039  04FC                     l2358:
  4040  04FC  3001               	movlw	1
  4041  04FD                     u1295:
  4042  04FD  35D9               	lslf	___lwdiv@divisor,f
  4043  04FE  0DDA               	rlf	___lwdiv@divisor+1,f
  4044  04FF  0B89               	decfsz	9,f
  4045  0500  2CFD               	goto	u1295
  4046  0501                     l2360:
  4047  0501  3001               	movlw	1
  4048  0502  00DD               	movwf	??___lwdiv
  4049  0503  085D               	movf	??___lwdiv,w
  4050  0504  07E0               	addwf	___lwdiv@counter,f
  4051  0505                     l2362:
  4052  0505  1FDA               	btfss	___lwdiv@divisor+1,7
  4053  0506  2D08               	goto	u1301
  4054  0507  2D09               	goto	u1300
  4055  0508                     u1301:
  4056  0508  2CFC               	goto	l2358
  4057  0509                     u1300:
  4058  0509                     l2364:
  4059  0509  3001               	movlw	1
  4060  050A                     u1315:
  4061  050A  35DE               	lslf	___lwdiv@quotient,f
  4062  050B  0DDF               	rlf	___lwdiv@quotient+1,f
  4063  050C  0B89               	decfsz	9,f
  4064  050D  2D0A               	goto	u1315
  4065  050E  085A               	movf	___lwdiv@divisor+1,w
  4066  050F  025C               	subwf	___lwdiv@dividend+1,w
  4067  0510  1D03               	skipz
  4068  0511  2D14               	goto	u1325
  4069  0512  0859               	movf	___lwdiv@divisor,w
  4070  0513  025B               	subwf	___lwdiv@dividend,w
  4071  0514                     u1325:
  4072  0514  1C03               	skipc
  4073  0515  2D17               	goto	u1321
  4074  0516  2D18               	goto	u1320
  4075  0517                     u1321:
  4076  0517  2D1D               	goto	l2370
  4077  0518                     u1320:
  4078  0518                     l2366:
  4079  0518  0859               	movf	___lwdiv@divisor,w
  4080  0519  02DB               	subwf	___lwdiv@dividend,f
  4081  051A  085A               	movf	___lwdiv@divisor+1,w
  4082  051B  3BDC               	subwfb	___lwdiv@dividend+1,f
  4083  051C                     l2368:
  4084  051C  145E               	bsf	___lwdiv@quotient,0
  4085  051D                     l2370:
  4086  051D  3001               	movlw	1
  4087  051E                     u1335:
  4088  051E  36DA               	lsrf	___lwdiv@divisor+1,f
  4089  051F  0CD9               	rrf	___lwdiv@divisor,f
  4090  0520  0B89               	decfsz	9,f
  4091  0521  2D1E               	goto	u1335
  4092  0522                     l2372:
  4093  0522  3001               	movlw	1
  4094  0523  02E0               	subwf	___lwdiv@counter,f
  4095  0524  1D03               	btfss	3,2
  4096  0525  2D27               	goto	u1341
  4097  0526  2D28               	goto	u1340
  4098  0527                     u1341:
  4099  0527  2D09               	goto	l2364
  4100  0528                     u1340:
  4101  0528                     l2374:
  4102  0528  085F               	movf	___lwdiv@quotient+1,w
  4103  0529  00DA               	movwf	?___lwdiv+1
  4104  052A  085E               	movf	___lwdiv@quotient,w
  4105  052B  00D9               	movwf	?___lwdiv
  4106  052C                     l1064:
  4107  052C  0008               	return
  4108  052D                     __end_of___lwdiv:
  4109                           
  4110                           	psect	text9
  4111  0569                     __ptext9:	
  4112 ;; *************** function _select_digit *****************
  4113 ;; Defined at:
  4114 ;;		line 226 in file "main.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  buffer          1    6[BANK0 ] PTR struct .
  4119 ;;		 -> NULL(0), g_sadegan(4), g_dahegan(4), g_yekan(4), 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;Total ram usage:        3 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 5
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_handle_received_commands
  4140 ;;		_increase_num_manual
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           
  4145                           ;psect for function _select_digit
  4146  0569                     _select_digit:
  4147  0569                     l2568:	
  4148                           ;incstack = 0
  4149                           ; Regs used in _select_digit: [wreg-fsr1h+status,2+status,0]
  4150                           
  4151                           
  4152                           ;main.c: 228:     digit_t* buffer = gp_selected_digit;
  4153  0569  0020               	movlb	0	; select bank0
  4154  056A  0852               	movf	_gp_selected_digit,w
  4155  056B  00D9               	movwf	??_select_digit
  4156  056C  0859               	movf	??_select_digit,w
  4157  056D  00DB               	movwf	select_digit@buffer
  4158  056E                     l2570:
  4159                           
  4160                           ;main.c: 229:     gp_selected_digit = ((void*)0);
  4161  056E  01D2               	clrf	_gp_selected_digit
  4162  056F                     l2572:
  4163                           
  4164                           ;main.c: 231:     if (((void*)0) == buffer)
  4165  056F  085B               	movf	select_digit@buffer,w
  4166  0570  1D03               	btfss	3,2
  4167  0571  2D73               	goto	u1461
  4168  0572  2D74               	goto	u1460
  4169  0573                     u1461:
  4170  0573  2D79               	goto	l2576
  4171  0574                     u1460:
  4172  0574                     l2574:
  4173                           
  4174                           ;main.c: 232:     {;main.c: 234:         gp_selected_digit = &g_yekan;
  4175  0574  3039               	movlw	(low (_g_yekan| 0))& (0+255)
  4176  0575  00D9               	movwf	??_select_digit
  4177  0576  0859               	movf	??_select_digit,w
  4178  0577  00D2               	movwf	_gp_selected_digit
  4179                           
  4180                           ;main.c: 235:     } else {
  4181  0578  2D9F               	goto	l503
  4182  0579                     l2576:
  4183                           
  4184                           ;main.c: 238:         buffer->show = 1;
  4185  0579  085B               	movf	select_digit@buffer,w
  4186  057A  3E03               	addlw	3
  4187  057B  0086               	movwf	6
  4188  057C  0187               	clrf	7
  4189  057D  1401               	bsf	1,0
  4190                           
  4191                           ;main.c: 240:         switch (buffer->position) {
  4192  057E  2D89               	goto	l2586
  4193  057F                     l2578:
  4194                           
  4195                           ;main.c: 244:                 gp_selected_digit = &g_dahegan;
  4196  057F  3035               	movlw	(low (_g_dahegan| 0))& (0+255)
  4197  0580  00D9               	movwf	??_select_digit
  4198  0581  0859               	movf	??_select_digit,w
  4199  0582  00D2               	movwf	_gp_selected_digit
  4200                           
  4201                           ;main.c: 245:                 break;
  4202  0583  2D9F               	goto	l503
  4203  0584                     l2580:
  4204                           
  4205                           ;main.c: 248:                 gp_selected_digit = &g_sadegan;
  4206  0584  3031               	movlw	(low (_g_sadegan| 0))& (0+255)
  4207  0585  00D9               	movwf	??_select_digit
  4208  0586  0859               	movf	??_select_digit,w
  4209  0587  00D2               	movwf	_gp_selected_digit
  4210                           
  4211                           ;main.c: 249:                 break;
  4212  0588  2D9F               	goto	l503
  4213  0589                     l2586:
  4214  0589  085B               	movf	select_digit@buffer,w
  4215  058A  0086               	movwf	6
  4216  058B  0187               	clrf	7
  4217  058C  0801               	movf	1,w
  4218  058D  00D9               	movwf	??_select_digit
  4219  058E  01DA               	clrf	??_select_digit+1
  4220                           
  4221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4222                           ; Switch size 1, requested type "simple"
  4223                           ; Number of cases is 1, Range of values is 0 to 0
  4224                           ; switch strategies available:
  4225                           ; Name         Instructions Cycles
  4226                           ; simple_byte            4     3 (average)
  4227                           ; direct_byte            8     6 (fixed)
  4228                           ; jumptable            260     6 (fixed)
  4229                           ;	Chosen strategy is simple_byte
  4230  058F  085A               	movf	??_select_digit+1,w
  4231  0590  3A00               	xorlw	0	; case 0
  4232  0591  1903               	skipnz
  4233  0592  2D94               	goto	l3266
  4234  0593  2D9F               	goto	l503
  4235  0594                     l3266:
  4236                           
  4237                           ; Switch size 1, requested type "simple"
  4238                           ; Number of cases is 3, Range of values is 1 to 100
  4239                           ; switch strategies available:
  4240                           ; Name         Instructions Cycles
  4241                           ; simple_byte           10     6 (average)
  4242                           ; direct_byte          209     9 (fixed)
  4243                           ; jumptable            263     9 (fixed)
  4244                           ;	Chosen strategy is simple_byte
  4245  0594  0859               	movf	??_select_digit,w
  4246  0595  3A01               	xorlw	1	; case 1
  4247  0596  1903               	skipnz
  4248  0597  2D7F               	goto	l2578
  4249  0598  3A0B               	xorlw	11	; case 10
  4250  0599  1903               	skipnz
  4251  059A  2D84               	goto	l2580
  4252  059B  3A6E               	xorlw	110	; case 100
  4253  059C  1903               	skipnz
  4254  059D  2D74               	goto	l2574
  4255  059E  2D9F               	goto	l503
  4256  059F                     l503:
  4257  059F  0008               	return
  4258  05A0                     __end_of_select_digit:
  4259                           
  4260                           	psect	text10
  4261  0699                     __ptext10:	
  4262 ;; *************** function _increase_digit *****************
  4263 ;; Defined at:
  4264 ;;		line 301 in file "main.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;		None
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;Total ram usage:        1 bytes
  4283 ;; Hardware stack levels used: 1
  4284 ;; Hardware stack levels required when called: 5
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_handle_received_commands
  4289 ;;		_increase_num_manual
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           
  4294                           ;psect for function _increase_digit
  4295  0699                     _increase_digit:
  4296  0699                     l2598:	
  4297                           ;incstack = 0
  4298                           ; Regs used in _increase_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4299                           
  4300                           
  4301                           ;main.c: 303:     if (((void*)0) != gp_selected_digit) {
  4302  0699  0020               	movlb	0	; select bank0
  4303  069A  0852               	movf	_gp_selected_digit,w
  4304  069B  1903               	btfsc	3,2
  4305  069C  2E9E               	goto	u1471
  4306  069D  2E9F               	goto	u1470
  4307  069E                     u1471:
  4308  069E  2EC2               	goto	l511
  4309  069F                     u1470:
  4310  069F                     l2600:
  4311                           
  4312                           ;main.c: 305:         gp_selected_digit->value++;
  4313  069F  3001               	movlw	1
  4314  06A0  00D9               	movwf	??_increase_digit
  4315  06A1  0A52               	incf	_gp_selected_digit,w
  4316  06A2  0086               	movwf	6
  4317  06A3  0187               	clrf	7
  4318  06A4  0859               	movf	??_increase_digit,w
  4319  06A5  0781               	addwf	1,f
  4320                           
  4321                           ;main.c: 307:         if (10 == gp_selected_digit->value) {
  4322  06A6  0A52               	incf	_gp_selected_digit,w
  4323  06A7  0086               	movwf	6
  4324  06A8  0187               	clrf	7
  4325  06A9  300A               	movlw	10
  4326  06AA  0601               	xorwf	1,w
  4327  06AB  1D03               	btfss	3,2
  4328  06AC  2EAE               	goto	u1481
  4329  06AD  2EAF               	goto	u1480
  4330  06AE                     u1481:
  4331  06AE  2EB3               	goto	l2604
  4332  06AF                     u1480:
  4333  06AF                     l2602:
  4334                           
  4335                           ;main.c: 309:             gp_selected_digit->value = 0;
  4336  06AF  0A52               	incf	_gp_selected_digit,w
  4337  06B0  0086               	movwf	6
  4338  06B1  0187               	clrf	7
  4339  06B2  0181               	clrf	1
  4340  06B3                     l2604:
  4341                           
  4342                           ;main.c: 312:         gp_selected_digit->seven_segment_maping =
  4343  06B3  0A52               	incf	_gp_selected_digit,w
  4344  06B4  0086               	movwf	6
  4345  06B5  0187               	clrf	7
  4346  06B6  0801               	movf	1,w
  4347  06B7  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  4348  06B8  0086               	movwf	6
  4349  06B9  0187               	clrf	7
  4350  06BA  0801               	movf	1,w
  4351  06BB  00D9               	movwf	??_increase_digit
  4352  06BC  0852               	movf	_gp_selected_digit,w
  4353  06BD  3E02               	addlw	2
  4354  06BE  0086               	movwf	6
  4355  06BF  0187               	clrf	7
  4356  06C0  0859               	movf	??_increase_digit,w
  4357  06C1  0081               	movwf	1
  4358  06C2                     l511:
  4359  06C2  0008               	return
  4360  06C3                     __end_of_increase_digit:
  4361                           
  4362                           	psect	text11
  4363  03D7                     __ptext11:	
  4364 ;; *************** function _get_display_value *****************
  4365 ;; Defined at:
  4366 ;;		line 479 in file "main.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  2   10[BANK0 ] unsigned short 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0, pclath, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;Total ram usage:       12 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 6
  4387 ;; This function calls:
  4388 ;;		___wmul
  4389 ;; This function is called by:
  4390 ;;		_handle_received_commands
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           
  4395                           ;psect for function _get_display_value
  4396  03D7                     _get_display_value:
  4397  03D7                     l3072:	
  4398                           ;incstack = 0
  4399                           ; Regs used in _get_display_value: [wreg+status,2+status,0+pclath+cstack]
  4400                           
  4401                           
  4402                           ;main.c: 481:     return (g_yekan.value + ((uint16_t) g_dahegan.value * g_dahegan.positi
      +                          on) +
  4403  03D7  0020               	movlb	0	; select bank0
  4404  03D8  0836               	movf	_g_dahegan+1,w
  4405  03D9  0021               	movlb	1	; select bank1
  4406  03DA  00AE               	movwf	??_get_display_value^(0+128)
  4407  03DB  01AF               	clrf	(??_get_display_value^(0+128)+1)
  4408  03DC  082E               	movf	??_get_display_value^(0+128),w
  4409  03DD  0020               	movlb	0	; select bank0
  4410  03DE  00D9               	movwf	___wmul@multiplier
  4411  03DF  0021               	movlb	1	; select bank1
  4412  03E0  082F               	movf	(??_get_display_value+1)^(0+128),w
  4413  03E1  0020               	movlb	0	; select bank0
  4414  03E2  00DA               	movwf	___wmul@multiplier+1
  4415  03E3  0835               	movf	_g_dahegan,w
  4416  03E4  0021               	movlb	1	; select bank1
  4417  03E5  00B0               	movwf	(??_get_display_value+2)^(0+128)
  4418  03E6  01B1               	clrf	((??_get_display_value+2)^(0+128)+1)
  4419  03E7  0830               	movf	(??_get_display_value+2)^(0+128),w
  4420  03E8  0020               	movlb	0	; select bank0
  4421  03E9  00DB               	movwf	___wmul@multiplicand
  4422  03EA  0021               	movlb	1	; select bank1
  4423  03EB  0831               	movf	(??_get_display_value+3)^(0+128),w
  4424  03EC  0020               	movlb	0	; select bank0
  4425  03ED  00DC               	movwf	___wmul@multiplicand+1
  4426  03EE  3187  2713  3183   	fcall	___wmul
  4427  03F1  0020               	movlb	0	; select bank0
  4428  03F2  083A               	movf	_g_yekan+1,w
  4429  03F3  0759               	addwf	?___wmul,w
  4430  03F4  0021               	movlb	1	; select bank1
  4431  03F5  00B2               	movwf	(??_get_display_value+4)^(0+128)
  4432  03F6  0020               	movlb	0	; select bank0
  4433  03F7  085A               	movf	?___wmul+1,w
  4434  03F8  1803               	skipnc
  4435  03F9  0A5A               	incf	?___wmul+1,w
  4436  03FA  0021               	movlb	1	; select bank1
  4437  03FB  00B3               	movwf	((??_get_display_value+4)^(0+128)+1)
  4438  03FC  0020               	movlb	0	; select bank0
  4439  03FD  0832               	movf	_g_sadegan+1,w
  4440  03FE  0021               	movlb	1	; select bank1
  4441  03FF  00B4               	movwf	(??_get_display_value+6)^(0+128)
  4442  0400  01B5               	clrf	((??_get_display_value+6)^(0+128)+1)
  4443  0401  0834               	movf	(??_get_display_value+6)^(0+128),w
  4444  0402  0020               	movlb	0	; select bank0
  4445  0403  00D9               	movwf	___wmul@multiplier
  4446  0404  0021               	movlb	1	; select bank1
  4447  0405  0835               	movf	(??_get_display_value+7)^(0+128),w
  4448  0406  0020               	movlb	0	; select bank0
  4449  0407  00DA               	movwf	___wmul@multiplier+1
  4450  0408  0831               	movf	_g_sadegan,w
  4451  0409  0021               	movlb	1	; select bank1
  4452  040A  00B6               	movwf	(??_get_display_value+8)^(0+128)
  4453  040B  01B7               	clrf	((??_get_display_value+8)^(0+128)+1)
  4454  040C  0836               	movf	(??_get_display_value+8)^(0+128),w
  4455  040D  0020               	movlb	0	; select bank0
  4456  040E  00DB               	movwf	___wmul@multiplicand
  4457  040F  0021               	movlb	1	; select bank1
  4458  0410  0837               	movf	(??_get_display_value+9)^(0+128),w
  4459  0411  0020               	movlb	0	; select bank0
  4460  0412  00DC               	movwf	___wmul@multiplicand+1
  4461  0413  3187  2713  3183   	fcall	___wmul
  4462  0416  0020               	movlb	0	; select bank0
  4463  0417  0859               	movf	?___wmul,w
  4464  0418  0021               	movlb	1	; select bank1
  4465  0419  0732               	addwf	(??_get_display_value+4)^(0+128),w
  4466  041A  0020               	movlb	0	; select bank0
  4467  041B  00DF               	movwf	?_get_display_value
  4468  041C  085A               	movf	?___wmul+1,w
  4469  041D  0021               	movlb	1	; select bank1
  4470  041E  3D33               	addwfc	(??_get_display_value+5)^(0+128),w
  4471  041F  0020               	movlb	0	; select bank0
  4472  0420  00E0               	movwf	?_get_display_value+1
  4473  0421                     l553:
  4474  0421  0008               	return
  4475  0422                     __end_of_get_display_value:
  4476                           
  4477                           	psect	text12
  4478  0713                     __ptext12:	
  4479 ;; *************** function ___wmul *****************
  4480 ;; Defined at:
  4481 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  multiplier      2    4[BANK0 ] unsigned int 
  4484 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  product         2    8[BANK0 ] unsigned int 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  2    4[BANK0 ] unsigned int 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4496 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4499 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;Total ram usage:        6 bytes
  4501 ;; Hardware stack levels used: 1
  4502 ;; Hardware stack levels required when called: 5
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_get_display_value
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function ___wmul
  4512  0713                     ___wmul:
  4513  0713                     l2338:	
  4514                           ;incstack = 0
  4515                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4516                           
  4517  0713  0020               	movlb	0	; select bank0
  4518  0714  01DD               	clrf	___wmul@product
  4519  0715  01DE               	clrf	___wmul@product+1
  4520  0716                     l2340:
  4521  0716  1C59               	btfss	___wmul@multiplier,0
  4522  0717  2F19               	goto	u1241
  4523  0718  2F1A               	goto	u1240
  4524  0719                     u1241:
  4525  0719  2F1E               	goto	l784
  4526  071A                     u1240:
  4527  071A                     l2342:
  4528  071A  085B               	movf	___wmul@multiplicand,w
  4529  071B  07DD               	addwf	___wmul@product,f
  4530  071C  085C               	movf	___wmul@multiplicand+1,w
  4531  071D  3DDE               	addwfc	___wmul@product+1,f
  4532  071E                     l784:
  4533  071E  3001               	movlw	1
  4534  071F                     u1255:
  4535  071F  35DB               	lslf	___wmul@multiplicand,f
  4536  0720  0DDC               	rlf	___wmul@multiplicand+1,f
  4537  0721  0B89               	decfsz	9,f
  4538  0722  2F1F               	goto	u1255
  4539  0723                     l2344:
  4540  0723  3001               	movlw	1
  4541  0724                     u1265:
  4542  0724  36DA               	lsrf	___wmul@multiplier+1,f
  4543  0725  0CD9               	rrf	___wmul@multiplier,f
  4544  0726  0B89               	decfsz	9,f
  4545  0727  2F24               	goto	u1265
  4546  0728                     l2346:
  4547  0728  0859               	movf	___wmul@multiplier,w
  4548  0729  045A               	iorwf	___wmul@multiplier+1,w
  4549  072A  1D03               	btfss	3,2
  4550  072B  2F2D               	goto	u1271
  4551  072C  2F2E               	goto	u1270
  4552  072D                     u1271:
  4553  072D  2F16               	goto	l2340
  4554  072E                     u1270:
  4555  072E                     l2348:
  4556  072E  085E               	movf	___wmul@product+1,w
  4557  072F  00DA               	movwf	?___wmul+1
  4558  0730  085D               	movf	___wmul@product,w
  4559  0731  00D9               	movwf	?___wmul
  4560  0732                     l786:
  4561  0732  0008               	return
  4562  0733                     __end_of___wmul:
  4563                           
  4564                           	psect	text13
  4565  0F27                     __ptext13:	
  4566 ;; *************** function _end_select_digit *****************
  4567 ;; Defined at:
  4568 ;;		line 276 in file "main.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  buffer          1    5[BANK0 ] PTR struct .
  4573 ;;		 -> NULL(0), g_sadegan(4), g_dahegan(4), g_yekan(4), 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;Total ram usage:        2 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 5
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_handle_received_commands
  4594 ;;		_increase_num_manual
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           
  4599                           ;psect for function _end_select_digit
  4600  0F27                     _end_select_digit:
  4601  0F27                     l2592:	
  4602                           ;incstack = 0
  4603                           ; Regs used in _end_select_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4604                           
  4605                           
  4606                           ;main.c: 278:     digit_t* buffer = gp_selected_digit;
  4607  0F27  0020               	movlb	0	; select bank0
  4608  0F28  0852               	movf	_gp_selected_digit,w
  4609  0F29  00D9               	movwf	??_end_select_digit
  4610  0F2A  0859               	movf	??_end_select_digit,w
  4611  0F2B  00DA               	movwf	end_select_digit@buffer
  4612  0F2C                     l2594:
  4613                           
  4614                           ;main.c: 279:     gp_selected_digit = ((void*)0);
  4615  0F2C  01D2               	clrf	_gp_selected_digit
  4616  0F2D                     l2596:
  4617                           
  4618                           ;main.c: 280:     buffer->show = 1;
  4619  0F2D  085A               	movf	end_select_digit@buffer,w
  4620  0F2E  3E03               	addlw	3
  4621  0F2F  0086               	movwf	6
  4622  0F30  0187               	clrf	7
  4623  0F31  1401               	bsf	1,0
  4624  0F32                     l506:
  4625  0F32  0008               	return
  4626  0F33                     __end_of_end_select_digit:
  4627                           
  4628                           	psect	text14
  4629  0FA8                     __ptext14:	
  4630 ;; *************** function ___itoee *****************
  4631 ;; Defined at:
  4632 ;;		line 157 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  addr            1    wreg     PTR eeprom void 
  4635 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  4636 ;;  data            2   10[BANK0 ] unsigned int 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  addr            1   14[BANK0 ] PTR eeprom void 
  4639 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  2   10[BANK0 ] unsigned int 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;Total ram usage:        5 bytes
  4654 ;; Hardware stack levels used: 1
  4655 ;; Hardware stack levels required when called: 6
  4656 ;; This function calls:
  4657 ;;		___memcpyee
  4658 ;; This function is called by:
  4659 ;;		_handle_received_commands
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           
  4664                           ;psect for function ___itoee
  4665  0FA8                     ___itoee:
  4666                           
  4667                           ;incstack = 0
  4668                           ; Regs used in ___itoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4669                           ;___itoee@addr stored from wreg
  4670  0FA8  0020               	movlb	0	; select bank0
  4671  0FA9  00E3               	movwf	___itoee@addr
  4672  0FAA                     l2748:
  4673  0FAA  305F               	movlw	(low (___itoee@data| 0))& (0+255)
  4674  0FAB  00E1               	movwf	??___itoee
  4675  0FAC  0861               	movf	??___itoee,w
  4676  0FAD  00D9               	movwf	___memcpyee@from
  4677  0FAE  3002               	movlw	2
  4678  0FAF  00E2               	movwf	??___itoee+1
  4679  0FB0  0862               	movf	??___itoee+1,w
  4680  0FB1  00DA               	movwf	___memcpyee@size
  4681  0FB2  0863               	movf	___itoee@addr,w
  4682  0FB3  3183  2381  318F   	fcall	___memcpyee
  4683  0FB6                     l695:
  4684  0FB6  0008               	return
  4685  0FB7                     __end_of___itoee:
  4686                           
  4687                           	psect	text15
  4688  0381                     __ptext15:	
  4689 ;; *************** function ___memcpyee *****************
  4690 ;; Defined at:
  4691 ;;		line 39 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  to              1    wreg     PTR eeprom unsigned char
  4694 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  4695 ;;  from            1    4[BANK0 ] PTR const unsigned char 
  4696 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  4697 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  4698 ;;  size            1    5[BANK0 ] unsigned char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  to              1    9[BANK0 ] PTR eeprom unsigned char
  4701 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  4702 ;;  ptr             1    8[BANK0 ] PTR const unsigned char 
  4703 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  4704 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4714 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;Total ram usage:        6 bytes
  4719 ;; Hardware stack levels used: 1
  4720 ;; Hardware stack levels required when called: 5
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		___itoee
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function ___memcpyee
  4730  0381                     ___memcpyee:
  4731                           
  4732                           ;incstack = 0
  4733                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
  4734                           ;___memcpyee@to stored from wreg
  4735  0381  0020               	movlb	0	; select bank0
  4736  0382  00DE               	movwf	___memcpyee@to
  4737  0383                     l2308:
  4738                           
  4739                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 39: __memcpyee(__eeprom unsign
      +                          ed char * to, const unsigned char *from, unsigned char size);/opt/microchip/xc8/v2.32/pi
      +                          c/sources/c99/pic/__eeprom.c: 40: {;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eepro
      +                          m.c: 41:  const unsigned char *ptr =from;
  4740  0383  0859               	movf	___memcpyee@from,w
  4741  0384  00DB               	movwf	??___memcpyee
  4742  0385  085B               	movf	??___memcpyee,w
  4743  0386  00DD               	movwf	___memcpyee@ptr
  4744  0387                     l663:	
  4745                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 43:  while (EECON1bits.WR) con
      +                          tinue;
  4746                           
  4747  0387  0023               	movlb	3	; select bank3
  4748  0388  1895               	btfsc	21,1	;volsfr
  4749  0389  2B8B               	goto	u1191
  4750  038A  2B8C               	goto	u1190
  4751  038B                     u1191:
  4752  038B  2B87               	goto	l663
  4753  038C                     u1190:
  4754  038C                     l2310:
  4755                           
  4756                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 44:  EEADR = (unsigned char)to
      +                           - 1U;
  4757  038C  0020               	movlb	0	; select bank0
  4758  038D  085E               	movf	___memcpyee@to,w
  4759  038E  3EFF               	addlw	255
  4760  038F  00DB               	movwf	??___memcpyee
  4761  0390  30FF               	movlw	255
  4762  0391  1803               	skipnc
  4763  0392  3000               	movlw	0
  4764  0393  00DC               	movwf	??___memcpyee+1
  4765  0394  085B               	movf	??___memcpyee,w
  4766  0395  0023               	movlb	3	; select bank3
  4767  0396  0091               	movwf	17	;volatile
  4768  0397  0020               	movlb	0	; select bank0
  4769  0398  085C               	movf	??___memcpyee+1,w
  4770  0399  0023               	movlb	3	; select bank3
  4771  039A  0092               	movwf	18	;volatile
  4772  039B                     l2312:
  4773                           
  4774                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 46:  EECON1 &= 0x7F;
  4775  039B  307F               	movlw	127
  4776  039C  0020               	movlb	0	; select bank0
  4777  039D  00DB               	movwf	??___memcpyee
  4778  039E  085B               	movf	??___memcpyee,w
  4779  039F  0023               	movlb	3	; select bank3
  4780  03A0  0595               	andwf	21,f	;volsfr
  4781                           
  4782                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 48:  while(size--) {
  4783  03A1  2BCE               	goto	l2336
  4784  03A2                     l668:	
  4785                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 51:   }
  4786                           
  4787                           
  4788                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 49:   while (EECON1bits.WR) {
  4789  03A2  0023               	movlb	3	; select bank3
  4790  03A3  1895               	btfsc	21,1	;volsfr
  4791  03A4  2BA6               	goto	u1201
  4792  03A5  2BA7               	goto	u1200
  4793  03A6                     u1201:
  4794  03A6  2BA2               	goto	l668
  4795  03A7                     u1200:
  4796  03A7                     l2314:
  4797                           
  4798                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 52:   EEDATA = *ptr++;
  4799  03A7  0020               	movlb	0	; select bank0
  4800  03A8  085D               	movf	___memcpyee@ptr,w
  4801  03A9  0086               	movwf	6
  4802  03AA  0187               	clrf	7
  4803  03AB  0801               	movf	1,w
  4804  03AC  0023               	movlb	3	; select bank3
  4805  03AD  0093               	movwf	19	;volatile
  4806  03AE                     l2316:
  4807  03AE  3001               	movlw	1
  4808  03AF  0020               	movlb	0	; select bank0
  4809  03B0  00DB               	movwf	??___memcpyee
  4810  03B1  085B               	movf	??___memcpyee,w
  4811  03B2  07DD               	addwf	___memcpyee@ptr,f
  4812  03B3                     l2318:
  4813                           
  4814                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 53:   ++EEADR;
  4815  03B3  3001               	movlw	1
  4816  03B4  0023               	movlb	3	; select bank3
  4817  03B5  0791               	addwf	17,f	;volatile
  4818  03B6  3000               	movlw	0
  4819  03B7  3D92               	addwfc	18,f	;volatile
  4820  03B8                     l2320:
  4821                           
  4822                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 54:   STATUSbits.CARRY = 0;
  4823  03B8  0020               	movlb	0	; select bank0
  4824  03B9  1003               	bcf	3,0	;volatile
  4825  03BA                     l2322:
  4826                           
  4827                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 55:   if (INTCONbits.GIE) {
  4828  03BA  1F8B               	btfss	11,7	;volatile
  4829  03BB  2BBD               	goto	u1211
  4830  03BC  2BBE               	goto	u1210
  4831  03BD                     u1211:
  4832  03BD  2BBF               	goto	l671
  4833  03BE                     u1210:
  4834  03BE                     l2324:
  4835                           
  4836                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 56:    STATUSbits.CARRY = 1;
  4837  03BE  1403               	bsf	3,0	;volatile
  4838  03BF                     l671:	
  4839                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 57:   }
  4840                           
  4841                           
  4842                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 58:   INTCONbits.GIE = 0;
  4843  03BF  138B               	bcf	11,7	;volatile
  4844                           
  4845                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 59:   EECON1bits.WREN = 1;
  4846  03C0  0023               	movlb	3	; select bank3
  4847  03C1  1515               	bsf	21,2	;volsfr
  4848  03C2                     l2326:
  4849                           
  4850                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 60:   EECON2 = 0x55;
  4851  03C2  3055               	movlw	85
  4852  03C3  0096               	movwf	22	;volsfr
  4853                           
  4854                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 61:   EECON2 = 0xAA;
  4855  03C4  30AA               	movlw	170
  4856  03C5  0096               	movwf	22	;volsfr
  4857  03C6                     l2328:
  4858                           
  4859                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 62:   EECON1bits.WR = 1;
  4860  03C6  1495               	bsf	21,1	;volsfr
  4861  03C7                     l2330:
  4862                           
  4863                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 63:   EECON1bits.WREN = 0;
  4864  03C7  1115               	bcf	21,2	;volsfr
  4865  03C8                     l2332:
  4866                           
  4867                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 64:   if (STATUSbits.CARRY) {
  4868  03C8  0020               	movlb	0	; select bank0
  4869  03C9  1C03               	btfss	3,0	;volatile
  4870  03CA  2BCC               	goto	u1221
  4871  03CB  2BCD               	goto	u1220
  4872  03CC                     u1221:
  4873  03CC  2BCE               	goto	l2336
  4874  03CD                     u1220:
  4875  03CD                     l2334:
  4876                           
  4877                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 65:    INTCONbits.GIE = 1;
  4878  03CD  178B               	bsf	11,7	;volatile
  4879  03CE                     l2336:
  4880                           
  4881                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 48:  while(size--) {
  4882  03CE  3001               	movlw	1
  4883  03CF  0020               	movlb	0	; select bank0
  4884  03D0  02DA               	subwf	___memcpyee@size,f
  4885  03D1  0A5A               	incf	___memcpyee@size,w
  4886  03D2  1D03               	btfss	3,2
  4887  03D3  2BD5               	goto	u1231
  4888  03D4  2BD6               	goto	u1230
  4889  03D5                     u1231:
  4890  03D5  2BA2               	goto	l668
  4891  03D6                     u1230:
  4892  03D6                     l674:
  4893  03D6  0008               	return
  4894  03D7                     __end_of___memcpyee:
  4895                           
  4896                           	psect	text16
  4897  0EBA                     __ptext16:	
  4898 ;; *************** function _TMR6_StopTimer *****************
  4899 ;; Defined at:
  4900 ;;		line 93 in file "mcc_generated_files/tmr6.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		None
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 5
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_handle_received_commands
  4925 ;;		_increase_num_manual
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           
  4930                           ;psect for function _TMR6_StopTimer
  4931  0EBA                     _TMR6_StopTimer:
  4932  0EBA                     l2566:	
  4933                           ;incstack = 0
  4934                           ; Regs used in _TMR6_StopTimer: []
  4935                           
  4936                           
  4937                           ;mcc_generated_files/tmr6.c: 96:     T6CONbits.TMR6ON = 0;
  4938  0EBA  0028               	movlb	8	; select bank8
  4939  0EBB  111E               	bcf	30,2	;volatile
  4940  0EBC                     l369:
  4941  0EBC  0008               	return
  4942  0EBD                     __end_of_TMR6_StopTimer:
  4943                           
  4944                           	psect	text17
  4945  0EB7                     __ptext17:	
  4946 ;; *************** function _TMR6_StartTimer *****************
  4947 ;; Defined at:
  4948 ;;		line 87 in file "mcc_generated_files/tmr6.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		None
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 5
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_handle_received_commands
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _TMR6_StartTimer
  4978  0EB7                     _TMR6_StartTimer:
  4979  0EB7                     l2564:	
  4980                           ;incstack = 0
  4981                           ; Regs used in _TMR6_StartTimer: []
  4982                           
  4983                           
  4984                           ;mcc_generated_files/tmr6.c: 90:     T6CONbits.TMR6ON = 1;
  4985  0EB7  0028               	movlb	8	; select bank8
  4986  0EB8  151E               	bsf	30,2	;volatile
  4987  0EB9                     l366:
  4988  0EB9  0008               	return
  4989  0EBA                     __end_of_TMR6_StartTimer:
  4990                           
  4991                           	psect	text18
  4992  0EB4                     __ptext18:	
  4993 ;; *************** function _TMR4_StopTimer *****************
  4994 ;; Defined at:
  4995 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		None
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 5
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_handle_received_commands
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           
  5024                           ;psect for function _TMR4_StopTimer
  5025  0EB4                     _TMR4_StopTimer:
  5026  0EB4                     l2562:	
  5027                           ;incstack = 0
  5028                           ; Regs used in _TMR4_StopTimer: []
  5029                           
  5030                           
  5031                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  5032  0EB4  0028               	movlb	8	; select bank8
  5033  0EB5  1117               	bcf	23,2	;volatile
  5034  0EB6                     l323:
  5035  0EB6  0008               	return
  5036  0EB7                     __end_of_TMR4_StopTimer:
  5037                           
  5038                           	psect	text19
  5039  0EB1                     __ptext19:	
  5040 ;; *************** function _TMR4_StartTimer *****************
  5041 ;; Defined at:
  5042 ;;		line 87 in file "mcc_generated_files/tmr4.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		None
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 5
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_handle_received_commands
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function _TMR4_StartTimer
  5072  0EB1                     _TMR4_StartTimer:
  5073  0EB1                     l2560:	
  5074                           ;incstack = 0
  5075                           ; Regs used in _TMR4_StartTimer: []
  5076                           
  5077                           
  5078                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
  5079  0EB1  0028               	movlb	8	; select bank8
  5080  0EB2  1517               	bsf	23,2	;volatile
  5081  0EB3                     l320:
  5082  0EB3  0008               	return
  5083  0EB4                     __end_of_TMR4_StartTimer:
  5084                           
  5085                           	psect	text20
  5086  0EAE                     __ptext20:	
  5087 ;; *************** function _TMR2_StopTimer *****************
  5088 ;; Defined at:
  5089 ;;		line 93 in file "mcc_generated_files/tmr2.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;		None
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;		None
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		None
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;Total ram usage:        0 bytes
  5108 ;; Hardware stack levels used: 1
  5109 ;; Hardware stack levels required when called: 5
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_init_digit
  5114 ;;		_handle_received_commands
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           
  5119                           ;psect for function _TMR2_StopTimer
  5120  0EAE                     _TMR2_StopTimer:
  5121  0EAE                     l2558:	
  5122                           ;incstack = 0
  5123                           ; Regs used in _TMR2_StopTimer: []
  5124                           
  5125                           
  5126                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
  5127  0EAE  0020               	movlb	0	; select bank0
  5128  0EAF  111C               	bcf	28,2	;volatile
  5129  0EB0                     l277:
  5130  0EB0  0008               	return
  5131  0EB1                     __end_of_TMR2_StopTimer:
  5132                           
  5133                           	psect	text21
  5134  0EAB                     __ptext21:	
  5135 ;; *************** function _TMR2_StartTimer *****************
  5136 ;; Defined at:
  5137 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		None
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used: 1
  5157 ;; Hardware stack levels required when called: 5
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_handle_received_commands
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _TMR2_StartTimer
  5167  0EAB                     _TMR2_StartTimer:
  5168  0EAB                     l2556:	
  5169                           ;incstack = 0
  5170                           ; Regs used in _TMR2_StartTimer: []
  5171                           
  5172                           
  5173                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  5174  0EAB  0020               	movlb	0	; select bank0
  5175  0EAC  151C               	bsf	28,2	;volatile
  5176  0EAD                     l274:
  5177  0EAD  0008               	return
  5178  0EAE                     __end_of_TMR2_StartTimer:
  5179                           
  5180                           	psect	text22
  5181  0FC8                     __ptext22:	
  5182 ;; *************** function _RX_Command *****************
  5183 ;; Defined at:
  5184 ;;		line 530 in file "main.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;		None
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  buffer          1    5[BANK0 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      unsigned char 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0, pclath, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;Total ram usage:        2 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 6
  5205 ;; This function calls:
  5206 ;;		_EUSART_Read
  5207 ;;		_EUSART_is_rx_ready
  5208 ;; This function is called by:
  5209 ;;		_handle_received_commands
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _RX_Command
  5215  0FC8                     _RX_Command:
  5216  0FC8                     l2652:	
  5217                           ;incstack = 0
  5218                           ; Regs used in _RX_Command: [wreg+status,2+status,0+pclath+cstack]
  5219                           
  5220                           
  5221                           ;main.c: 532:     uint8_t buffer;;main.c: 534:     if (EUSART_is_rx_ready()) {
  5222  0FC8  318E  26C1  318F   	fcall	_EUSART_is_rx_ready
  5223  0FCB  3A00               	xorlw	0
  5224  0FCC  1903               	skipnz
  5225  0FCD  2FCF               	goto	u1551
  5226  0FCE  2FD0               	goto	u1550
  5227  0FCF                     u1551:
  5228  0FCF  2FD8               	goto	l565
  5229  0FD0                     u1550:
  5230  0FD0                     l2654:
  5231                           
  5232                           ;main.c: 536:         buffer = EUSART_Read();
  5233  0FD0  318F  2799  318F   	fcall	_EUSART_Read
  5234  0FD3  0020               	movlb	0	; select bank0
  5235  0FD4  00D9               	movwf	??_RX_Command
  5236  0FD5  0859               	movf	??_RX_Command,w
  5237  0FD6  00DA               	movwf	RX_Command@buffer
  5238  0FD7                     l2656:
  5239                           
  5240                           ;main.c: 537:         return buffer;
  5241  0FD7  085A               	movf	RX_Command@buffer,w
  5242  0FD8                     l565:
  5243  0FD8  0008               	return
  5244  0FD9                     __end_of_RX_Command:
  5245                           
  5246                           	psect	text23
  5247  0EC1                     __ptext23:	
  5248 ;; *************** function _EUSART_is_rx_ready *****************
  5249 ;; Defined at:
  5250 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      _Bool 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 5
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_RX_Command
  5275 ;;		_handle_received_commands
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           
  5280                           ;psect for function _EUSART_is_rx_ready
  5281  0EC1                     _EUSART_is_rx_ready:
  5282  0EC1                     l2256:	
  5283                           ;incstack = 0
  5284                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5285                           
  5286                           
  5287                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  5288  0EC1  0020               	movlb	0	; select bank0
  5289  0EC2  0E11               	swapf	17,w	;volatile
  5290  0EC3  0C89               	rrf	9,f
  5291  0EC4  3901               	andlw	1
  5292  0EC5                     l120:
  5293  0EC5  0008               	return
  5294  0EC6                     __end_of_EUSART_is_rx_ready:
  5295                           
  5296                           	psect	text24
  5297  0F99                     __ptext24:	
  5298 ;; *************** function _EUSART_Read *****************
  5299 ;; Defined at:
  5300 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      unsigned char 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used: 1
  5320 ;; Hardware stack levels required when called: 5
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_RX_Command
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           
  5329                           ;psect for function _EUSART_Read
  5330  0F99                     _EUSART_Read:
  5331  0F99                     l2260:	
  5332                           ;incstack = 0
  5333                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5334                           
  5335  0F99                     l129:	
  5336                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  5337                           
  5338                           
  5339                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  5340  0F99  0020               	movlb	0	; select bank0
  5341  0F9A  1E91               	btfss	17,5	;volatile
  5342  0F9B  2F9D               	goto	u1111
  5343  0F9C  2F9E               	goto	u1110
  5344  0F9D                     u1111:
  5345  0F9D  2F99               	goto	l129
  5346  0F9E                     u1110:
  5347  0F9E                     l2262:
  5348                           
  5349                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  5350  0F9E  01D4               	clrf	_eusartRxLastError	;volatile
  5351  0F9F                     l2264:
  5352                           
  5353                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  5354  0F9F  0023               	movlb	3	; select bank3
  5355  0FA0  1C9D               	btfss	29,1	;volatile
  5356  0FA1  2FA3               	goto	u1121
  5357  0FA2  2FA4               	goto	u1120
  5358  0FA3                     u1121:
  5359  0FA3  2FA6               	goto	l2268
  5360  0FA4                     u1120:
  5361  0FA4                     l2266:
  5362                           
  5363                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  5364  0FA4  121D               	bcf	29,4	;volatile
  5365                           
  5366                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  5367  0FA5  161D               	bsf	29,4	;volatile
  5368  0FA6                     l2268:
  5369                           
  5370                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  5371  0FA6  0819               	movf	25,w	;volatile
  5372  0FA7                     l133:
  5373  0FA7  0008               	return
  5374  0FA8                     __end_of_EUSART_Read:
  5375                           
  5376                           	psect	text25
  5377  0770                     __ptext25:	
  5378 ;; *************** function _SYSTEM_Initialize *****************
  5379 ;; Defined at:
  5380 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0, pclath, cstack
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; Hardware stack levels required when called: 7
  5401 ;; This function calls:
  5402 ;;		_EUSART_Initialize
  5403 ;;		_OSCILLATOR_Initialize
  5404 ;;		_PIN_MANAGER_Initialize
  5405 ;;		_TMR1_Initialize
  5406 ;;		_TMR2_Initialize
  5407 ;;		_TMR4_Initialize
  5408 ;;		_TMR6_Initialize
  5409 ;;		_WDT_Initialize
  5410 ;; This function is called by:
  5411 ;;		_main
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function _SYSTEM_Initialize
  5417  0770                     _SYSTEM_Initialize:
  5418  0770                     l2752:	
  5419                           ;incstack = 0
  5420                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5421                           
  5422                           
  5423                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5424  0770  3187  2789  3187   	fcall	_PIN_MANAGER_Initialize
  5425                           
  5426                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5427  0773  3187  27F8  3187   	fcall	_OSCILLATOR_Initialize
  5428                           
  5429                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5430  0776  318E  26BD  3187   	fcall	_WDT_Initialize
  5431                           
  5432                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
  5433  0779  3187  27E4  3187   	fcall	_TMR6_Initialize
  5434                           
  5435                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
  5436  077C  318F  27EC  3187   	fcall	_TMR4_Initialize
  5437                           
  5438                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  5439  077F  318F  27D9  3187   	fcall	_TMR2_Initialize
  5440                           
  5441                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  5442  0782  3187  27A2  3187   	fcall	_TMR1_Initialize
  5443                           
  5444                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
  5445  0785  3186  26ED  3187   	fcall	_EUSART_Initialize
  5446  0788                     l27:
  5447  0788  0008               	return
  5448  0789                     __end_of_SYSTEM_Initialize:
  5449                           
  5450                           	psect	text26
  5451  0EBD                     __ptext26:	
  5452 ;; *************** function _WDT_Initialize *****************
  5453 ;; Defined at:
  5454 ;;		line 73 in file "mcc_generated_files/mcc.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;Total ram usage:        0 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; Hardware stack levels required when called: 5
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_SYSTEM_Initialize
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function _WDT_Initialize
  5484  0EBD                     _WDT_Initialize:
  5485  0EBD                     l2480:	
  5486                           ;incstack = 0
  5487                           ; Regs used in _WDT_Initialize: [wreg]
  5488                           
  5489                           
  5490                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  5491  0EBD  3016               	movlw	22
  5492  0EBE  0021               	movlb	1	; select bank1
  5493  0EBF  0097               	movwf	23	;volatile
  5494  0EC0                     l33:
  5495  0EC0  0008               	return
  5496  0EC1                     __end_of_WDT_Initialize:
  5497                           
  5498                           	psect	text27
  5499  07E4                     __ptext27:	
  5500 ;; *************** function _TMR6_Initialize *****************
  5501 ;; Defined at:
  5502 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, status,0, pclath, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used: 1
  5522 ;; Hardware stack levels required when called: 6
  5523 ;; This function calls:
  5524 ;;		_TMR6_SetInterruptHandler
  5525 ;; This function is called by:
  5526 ;;		_SYSTEM_Initialize
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           
  5531                           ;psect for function _TMR6_Initialize
  5532  07E4                     _TMR6_Initialize:
  5533  07E4                     l2482:	
  5534                           ;incstack = 0
  5535                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5536                           
  5537                           
  5538                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0x3E;
  5539  07E4  303E               	movlw	62
  5540  07E5  0028               	movlb	8	; select bank8
  5541  07E6  009D               	movwf	29	;volatile
  5542  07E7                     l2484:
  5543                           
  5544                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  5545  07E7  019C               	clrf	28	;volatile
  5546  07E8                     l2486:
  5547                           
  5548                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  5549  07E8  0020               	movlb	0	; select bank0
  5550  07E9  1193               	bcf	19,3	;volatile
  5551  07EA                     l2488:
  5552                           
  5553                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  5554  07EA  0021               	movlb	1	; select bank1
  5555  07EB  1593               	bsf	19,3	;volatile
  5556  07EC                     l2490:
  5557                           
  5558                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  5559  07EC  3003               	movlw	low _TMR6_DefaultInterruptHandler
  5560  07ED  0020               	movlb	0	; select bank0
  5561  07EE  00D9               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  5562  07EF  3000               	movlw	high _TMR6_DefaultInterruptHandler
  5563  07F0  00DA               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  5564  07F1  318F  2708  3187   	fcall	_TMR6_SetInterruptHandler
  5565  07F4                     l2492:
  5566                           
  5567                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x4B;
  5568  07F4  304B               	movlw	75
  5569  07F5  0028               	movlb	8	; select bank8
  5570  07F6  009E               	movwf	30	;volatile
  5571  07F7                     l363:
  5572  07F7  0008               	return
  5573  07F8                     __end_of_TMR6_Initialize:
  5574                           
  5575                           	psect	text28
  5576  0F08                     __ptext28:	
  5577 ;; *************** function _TMR6_SetInterruptHandler *****************
  5578 ;; Defined at:
  5579 ;;		line 132 in file "mcc_generated_files/tmr6.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
  5582 ;;		 -> increase_num_automatic(1), TMR6_DefaultInterruptHandler(1), 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;		None
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5594 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;Total ram usage:        2 bytes
  5599 ;; Hardware stack levels used: 1
  5600 ;; Hardware stack levels required when called: 5
  5601 ;; This function calls:
  5602 ;;		Nothing
  5603 ;; This function is called by:
  5604 ;;		_TMR6_Initialize
  5605 ;;		_main
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           
  5610                           ;psect for function _TMR6_SetInterruptHandler
  5611  0F08                     _TMR6_SetInterruptHandler:
  5612  0F08                     l2278:	
  5613                           ;incstack = 0
  5614                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  5615                           
  5616                           
  5617                           ;mcc_generated_files/tmr6.c: 133:     TMR6_InterruptHandler = InterruptHandler;
  5618  0F08  0020               	movlb	0	; select bank0
  5619  0F09  085A               	movf	TMR6_SetInterruptHandler@InterruptHandler+1,w
  5620  0F0A  0021               	movlb	1	; select bank1
  5621  0F0B  00A1               	movwf	(_TMR6_InterruptHandler+1)^(0+128)
  5622  0F0C  0020               	movlb	0	; select bank0
  5623  0F0D  0859               	movf	TMR6_SetInterruptHandler@InterruptHandler,w
  5624  0F0E  0021               	movlb	1	; select bank1
  5625  0F0F  00A0               	movwf	_TMR6_InterruptHandler^(0+128)
  5626  0F10                     l385:
  5627  0F10  0008               	return
  5628  0F11                     __end_of_TMR6_SetInterruptHandler:
  5629                           
  5630                           	psect	text29
  5631  0FEC                     __ptext29:	
  5632 ;; *************** function _TMR4_Initialize *****************
  5633 ;; Defined at:
  5634 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2, status,0, pclath, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 6
  5655 ;; This function calls:
  5656 ;;		_TMR4_SetInterruptHandler
  5657 ;; This function is called by:
  5658 ;;		_SYSTEM_Initialize
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           
  5663                           ;psect for function _TMR4_Initialize
  5664  0FEC                     _TMR4_Initialize:
  5665  0FEC                     l2494:	
  5666                           ;incstack = 0
  5667                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5668                           
  5669                           
  5670                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0x3E;
  5671  0FEC  303E               	movlw	62
  5672  0FED  0028               	movlb	8	; select bank8
  5673  0FEE  0096               	movwf	22	;volatile
  5674  0FEF                     l2496:
  5675                           
  5676                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5677  0FEF  0195               	clrf	21	;volatile
  5678  0FF0                     l2498:
  5679                           
  5680                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  5681  0FF0  0020               	movlb	0	; select bank0
  5682  0FF1  1093               	bcf	19,1	;volatile
  5683  0FF2                     l2500:
  5684                           
  5685                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  5686  0FF2  0021               	movlb	1	; select bank1
  5687  0FF3  1493               	bsf	19,1	;volatile
  5688  0FF4                     l2502:
  5689                           
  5690                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5691  0FF4  3002               	movlw	low _TMR4_DefaultInterruptHandler
  5692  0FF5  0020               	movlb	0	; select bank0
  5693  0FF6  00D9               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  5694  0FF7  3000               	movlw	high _TMR4_DefaultInterruptHandler
  5695  0FF8  00DA               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  5696  0FF9  318E  26FF  318F   	fcall	_TMR4_SetInterruptHandler
  5697  0FFC                     l2504:
  5698                           
  5699                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x4B;
  5700  0FFC  304B               	movlw	75
  5701  0FFD  0028               	movlb	8	; select bank8
  5702  0FFE  0097               	movwf	23	;volatile
  5703  0FFF                     l317:
  5704  0FFF  0008               	return
  5705  1000                     __end_of_TMR4_Initialize:
  5706                           
  5707                           	psect	text30
  5708  0EFF                     __ptext30:	
  5709 ;; *************** function _TMR4_SetInterruptHandler *****************
  5710 ;; Defined at:
  5711 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
  5714 ;;		 -> decrease_num(1), TMR4_DefaultInterruptHandler(1), 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;		None
  5717 ;; Return value:  Size  Location     Type
  5718 ;;                  1    wreg      void 
  5719 ;; Registers used:
  5720 ;;		wreg
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5730 ;;Total ram usage:        2 bytes
  5731 ;; Hardware stack levels used: 1
  5732 ;; Hardware stack levels required when called: 5
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_TMR4_Initialize
  5737 ;;		_main
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           
  5742                           ;psect for function _TMR4_SetInterruptHandler
  5743  0EFF                     _TMR4_SetInterruptHandler:
  5744  0EFF                     l2276:	
  5745                           ;incstack = 0
  5746                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  5747                           
  5748                           
  5749                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  5750  0EFF  0020               	movlb	0	; select bank0
  5751  0F00  085A               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  5752  0F01  0021               	movlb	1	; select bank1
  5753  0F02  00A3               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  5754  0F03  0020               	movlb	0	; select bank0
  5755  0F04  0859               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  5756  0F05  0021               	movlb	1	; select bank1
  5757  0F06  00A2               	movwf	_TMR4_InterruptHandler^(0+128)
  5758  0F07                     l339:
  5759  0F07  0008               	return
  5760  0F08                     __end_of_TMR4_SetInterruptHandler:
  5761                           
  5762                           	psect	text31
  5763  0FD9                     __ptext31:	
  5764 ;; *************** function _TMR2_Initialize *****************
  5765 ;; Defined at:
  5766 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;		None
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0, pclath, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;Total ram usage:        0 bytes
  5785 ;; Hardware stack levels used: 1
  5786 ;; Hardware stack levels required when called: 6
  5787 ;; This function calls:
  5788 ;;		_TMR2_SetInterruptHandler
  5789 ;; This function is called by:
  5790 ;;		_SYSTEM_Initialize
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _TMR2_Initialize
  5796  0FD9                     _TMR2_Initialize:
  5797  0FD9                     l2506:	
  5798                           ;incstack = 0
  5799                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5800                           
  5801                           
  5802                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x1E;
  5803  0FD9  301E               	movlw	30
  5804  0FDA  0020               	movlb	0	; select bank0
  5805  0FDB  009B               	movwf	27	;volatile
  5806  0FDC                     l2508:
  5807                           
  5808                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  5809  0FDC  019A               	clrf	26	;volatile
  5810  0FDD                     l2510:
  5811                           
  5812                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  5813  0FDD  1091               	bcf	17,1	;volatile
  5814  0FDE                     l2512:
  5815                           
  5816                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  5817  0FDE  0021               	movlb	1	; select bank1
  5818  0FDF  1491               	bsf	17,1	;volatile
  5819  0FE0                     l2514:
  5820                           
  5821                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  5822  0FE0  30A4               	movlw	low _TMR2_DefaultInterruptHandler
  5823  0FE1  0020               	movlb	0	; select bank0
  5824  0FE2  00D9               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  5825  0FE3  300E               	movlw	high _TMR2_DefaultInterruptHandler
  5826  0FE4  00DA               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  5827  0FE5  318E  26F6  318F   	fcall	_TMR2_SetInterruptHandler
  5828  0FE8                     l2516:
  5829                           
  5830                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4B;
  5831  0FE8  304B               	movlw	75
  5832  0FE9  0020               	movlb	0	; select bank0
  5833  0FEA  009C               	movwf	28	;volatile
  5834  0FEB                     l271:
  5835  0FEB  0008               	return
  5836  0FEC                     __end_of_TMR2_Initialize:
  5837                           
  5838                           	psect	text32
  5839  0EF6                     __ptext32:	
  5840 ;; *************** function _TMR2_SetInterruptHandler *****************
  5841 ;; Defined at:
  5842 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
  5845 ;;		 -> display_refresh(1), TMR2_DefaultInterruptHandler(1), 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;		None
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;Total ram usage:        2 bytes
  5862 ;; Hardware stack levels used: 1
  5863 ;; Hardware stack levels required when called: 5
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		_TMR2_Initialize
  5868 ;;		_main
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           
  5873                           ;psect for function _TMR2_SetInterruptHandler
  5874  0EF6                     _TMR2_SetInterruptHandler:
  5875  0EF6                     l2274:	
  5876                           ;incstack = 0
  5877                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  5878                           
  5879                           
  5880                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  5881  0EF6  0020               	movlb	0	; select bank0
  5882  0EF7  085A               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  5883  0EF8  0021               	movlb	1	; select bank1
  5884  0EF9  00A5               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  5885  0EFA  0020               	movlb	0	; select bank0
  5886  0EFB  0859               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  5887  0EFC  0021               	movlb	1	; select bank1
  5888  0EFD  00A4               	movwf	_TMR2_InterruptHandler^(0+128)
  5889  0EFE                     l293:
  5890  0EFE  0008               	return
  5891  0EFF                     __end_of_TMR2_SetInterruptHandler:
  5892                           
  5893                           	psect	text33
  5894  07A2                     __ptext33:	
  5895 ;; *************** function _TMR1_Initialize *****************
  5896 ;; Defined at:
  5897 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;		None
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      void 
  5904 ;; Registers used:
  5905 ;;		wreg, status,2, status,0, pclath, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;Total ram usage:        0 bytes
  5916 ;; Hardware stack levels used: 1
  5917 ;; Hardware stack levels required when called: 6
  5918 ;; This function calls:
  5919 ;;		_TMR1_SetInterruptHandler
  5920 ;; This function is called by:
  5921 ;;		_SYSTEM_Initialize
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           
  5926                           ;psect for function _TMR1_Initialize
  5927  07A2                     _TMR1_Initialize:
  5928  07A2                     l2518:	
  5929                           ;incstack = 0
  5930                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5931                           
  5932                           
  5933                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5934  07A2  0020               	movlb	0	; select bank0
  5935  07A3  0199               	clrf	25	;volatile
  5936  07A4                     l2520:
  5937                           
  5938                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x80;
  5939  07A4  3080               	movlw	128
  5940  07A5  0097               	movwf	23	;volatile
  5941  07A6                     l2522:
  5942                           
  5943                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  5944  07A6  0196               	clrf	22	;volatile
  5945  07A7                     l2524:
  5946                           
  5947                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  5948  07A7  1011               	bcf	17,0	;volatile
  5949                           
  5950                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5951  07A8  0817               	movf	23,w	;volatile
  5952  07A9  00EB               	movwf	_timer1ReloadVal+1	;volatile
  5953  07AA  0816               	movf	22,w	;volatile
  5954  07AB  00EA               	movwf	_timer1ReloadVal	;volatile
  5955  07AC                     l2526:
  5956                           
  5957                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5958  07AC  0021               	movlb	1	; select bank1
  5959  07AD  1411               	bsf	17,0	;volatile
  5960  07AE                     l2528:
  5961                           
  5962                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5963  07AE  30A3               	movlw	low _TMR1_DefaultInterruptHandler
  5964  07AF  0020               	movlb	0	; select bank0
  5965  07B0  00D9               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5966  07B1  300E               	movlw	high _TMR1_DefaultInterruptHandler
  5967  07B2  00DA               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5968  07B3  318E  26ED  3187   	fcall	_TMR1_SetInterruptHandler
  5969  07B6                     l2530:
  5970                           
  5971                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  5972  07B6  3031               	movlw	49
  5973  07B7  0020               	movlb	0	; select bank0
  5974  07B8  0098               	movwf	24	;volatile
  5975  07B9                     l217:
  5976  07B9  0008               	return
  5977  07BA                     __end_of_TMR1_Initialize:
  5978                           
  5979                           	psect	text34
  5980  0EED                     __ptext34:	
  5981 ;; *************** function _TMR1_SetInterruptHandler *****************
  5982 ;; Defined at:
  5983 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
  5986 ;;		 -> blink_digit(1), TMR1_DefaultInterruptHandler(1), 
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;		None
  5989 ;; Return value:  Size  Location     Type
  5990 ;;                  1    wreg      void 
  5991 ;; Registers used:
  5992 ;;		wreg
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;Total ram usage:        2 bytes
  6003 ;; Hardware stack levels used: 1
  6004 ;; Hardware stack levels required when called: 5
  6005 ;; This function calls:
  6006 ;;		Nothing
  6007 ;; This function is called by:
  6008 ;;		_TMR1_Initialize
  6009 ;;		_main
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function _TMR1_SetInterruptHandler
  6015  0EED                     _TMR1_SetInterruptHandler:
  6016  0EED                     l2272:	
  6017                           ;incstack = 0
  6018                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6019                           
  6020                           
  6021                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  6022  0EED  0020               	movlb	0	; select bank0
  6023  0EEE  085A               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6024  0EEF  0021               	movlb	1	; select bank1
  6025  0EF0  00A7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  6026  0EF1  0020               	movlb	0	; select bank0
  6027  0EF2  0859               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6028  0EF3  0021               	movlb	1	; select bank1
  6029  0EF4  00A6               	movwf	_TMR1_InterruptHandler^(0+128)
  6030  0EF5                     l247:
  6031  0EF5  0008               	return
  6032  0EF6                     __end_of_TMR1_SetInterruptHandler:
  6033                           
  6034                           	psect	text35
  6035  0789                     __ptext35:	
  6036 ;; *************** function _PIN_MANAGER_Initialize *****************
  6037 ;; Defined at:
  6038 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 5
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_SYSTEM_Initialize
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           
  6067                           ;psect for function _PIN_MANAGER_Initialize
  6068  0789                     _PIN_MANAGER_Initialize:
  6069  0789                     l2454:	
  6070                           ;incstack = 0
  6071                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6072                           
  6073                           
  6074                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6075  0789  0022               	movlb	2	; select bank2
  6076  078A  018C               	clrf	12	;volatile
  6077                           
  6078                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6079  078B  018D               	clrf	13	;volatile
  6080                           
  6081                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6082  078C  018E               	clrf	14	;volatile
  6083  078D                     l2456:
  6084                           
  6085                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3E;
  6086  078D  303E               	movlw	62
  6087  078E  0021               	movlb	1	; select bank1
  6088  078F  008C               	movwf	12	;volatile
  6089  0790                     l2458:
  6090                           
  6091                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xA0;
  6092  0790  30A0               	movlw	160
  6093  0791  008D               	movwf	13	;volatile
  6094                           
  6095                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
  6096  0792  018E               	clrf	14	;volatile
  6097                           
  6098                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  6099  0793  0023               	movlb	3	; select bank3
  6100  0794  018E               	clrf	14	;volatile
  6101                           
  6102                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  6103  0795  018D               	clrf	13	;volatile
  6104  0796                     l2460:
  6105                           
  6106                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x16;
  6107  0796  3016               	movlw	22
  6108  0797  008C               	movwf	12	;volatile
  6109  0798                     l2462:
  6110                           
  6111                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6112  0798  0024               	movlb	4	; select bank4
  6113  0799  018D               	clrf	13	;volatile
  6114  079A                     l2464:
  6115                           
  6116                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  6117  079A  018C               	clrf	12	;volatile
  6118  079B                     l2466:
  6119                           
  6120                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  6121  079B  018E               	clrf	14	;volatile
  6122  079C                     l2468:
  6123                           
  6124                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  6125  079C  0021               	movlb	1	; select bank1
  6126  079D  1795               	bsf	21,7	;volatile
  6127  079E                     l2470:
  6128                           
  6129                           ;mcc_generated_files/pin_manager.c: 90:     APFCON0 = 0x00;
  6130  079E  0022               	movlb	2	; select bank2
  6131  079F  019D               	clrf	29	;volatile
  6132  07A0                     l2472:
  6133                           
  6134                           ;mcc_generated_files/pin_manager.c: 91:     APFCON1 = 0x00;
  6135  07A0  019E               	clrf	30	;volatile
  6136  07A1                     l66:
  6137  07A1  0008               	return
  6138  07A2                     __end_of_PIN_MANAGER_Initialize:
  6139                           
  6140                           	psect	text36
  6141  07F8                     __ptext36:	
  6142 ;; *************** function _OSCILLATOR_Initialize *****************
  6143 ;; Defined at:
  6144 ;;		line 63 in file "mcc_generated_files/mcc.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;		None
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1    wreg      void 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;Total ram usage:        0 bytes
  6163 ;; Hardware stack levels used: 1
  6164 ;; Hardware stack levels required when called: 5
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_SYSTEM_Initialize
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           
  6173                           ;psect for function _OSCILLATOR_Initialize
  6174  07F8                     _OSCILLATOR_Initialize:
  6175  07F8                     l2474:	
  6176                           ;incstack = 0
  6177                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6178                           
  6179                           
  6180                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x78;
  6181  07F8  3078               	movlw	120
  6182  07F9  0021               	movlb	1	; select bank1
  6183  07FA  0099               	movwf	25	;volatile
  6184  07FB                     l2476:
  6185                           
  6186                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  6187  07FB  0198               	clrf	24	;volatile
  6188  07FC                     l2478:
  6189                           
  6190                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  6191  07FC  0022               	movlb	2	; select bank2
  6192  07FD  0196               	clrf	22	;volatile
  6193  07FE                     l30:
  6194  07FE  0008               	return
  6195  07FF                     __end_of_OSCILLATOR_Initialize:
  6196                           
  6197                           	psect	text37
  6198  06ED                     __ptext37:	
  6199 ;; *************** function _EUSART_Initialize *****************
  6200 ;; Defined at:
  6201 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;		None
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;		None
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      void 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, status,0, pclath, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;Total ram usage:        0 bytes
  6220 ;; Hardware stack levels used: 1
  6221 ;; Hardware stack levels required when called: 6
  6222 ;; This function calls:
  6223 ;;		_EUSART_SetErrorHandler
  6224 ;;		_EUSART_SetFramingErrorHandler
  6225 ;;		_EUSART_SetOverrunErrorHandler
  6226 ;; This function is called by:
  6227 ;;		_SYSTEM_Initialize
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           
  6232                           ;psect for function _EUSART_Initialize
  6233  06ED                     _EUSART_Initialize:
  6234  06ED                     l2532:	
  6235                           ;incstack = 0
  6236                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6237                           
  6238                           
  6239                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6240  06ED  3008               	movlw	8
  6241  06EE  0023               	movlb	3	; select bank3
  6242  06EF  009F               	movwf	31	;volatile
  6243                           
  6244                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6245  06F0  3090               	movlw	144
  6246  06F1  009D               	movwf	29	;volatile
  6247                           
  6248                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  6249  06F2  3024               	movlw	36
  6250  06F3  009E               	movwf	30	;volatile
  6251                           
  6252                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xA0;
  6253  06F4  30A0               	movlw	160
  6254  06F5  009B               	movwf	27	;volatile
  6255                           
  6256                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  6257  06F6  3001               	movlw	1
  6258  06F7  009C               	movwf	28	;volatile
  6259  06F8                     l2534:
  6260                           
  6261                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6262  06F8  3000               	movlw	0
  6263  06F9  0020               	movlb	0	; select bank0
  6264  06FA  00D9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6265  06FB  3000               	movlw	0
  6266  06FC  00DA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6267  06FD  318E  26DB  3186   	fcall	_EUSART_SetFramingErrorHandler
  6268  0700                     l2536:
  6269                           
  6270                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6271  0700  3000               	movlw	0
  6272  0701  0020               	movlb	0	; select bank0
  6273  0702  00D9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6274  0703  3000               	movlw	0
  6275  0704  00DA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6276  0705  318E  26E4  3186   	fcall	_EUSART_SetOverrunErrorHandler
  6277  0708                     l2538:
  6278                           
  6279                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6280  0708  3000               	movlw	0
  6281  0709  0020               	movlb	0	; select bank0
  6282  070A  00D9               	movwf	EUSART_SetErrorHandler@interruptHandler
  6283  070B  3000               	movlw	0
  6284  070C  00DA               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6285  070D  318E  26D2  3186   	fcall	_EUSART_SetErrorHandler
  6286  0710                     l2540:
  6287                           
  6288                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6289  0710  0020               	movlb	0	; select bank0
  6290  0711  01D4               	clrf	_eusartRxLastError	;volatile
  6291  0712                     l112:
  6292  0712  0008               	return
  6293  0713                     __end_of_EUSART_Initialize:
  6294                           
  6295                           	psect	text38
  6296  0EE4                     __ptext38:	
  6297 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6298 ;; Defined at:
  6299 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  6302 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1    wreg      void 
  6307 ;; Registers used:
  6308 ;;		wreg
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;Total ram usage:        2 bytes
  6319 ;; Hardware stack levels used: 1
  6320 ;; Hardware stack levels required when called: 5
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_EUSART_Initialize
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           
  6329                           ;psect for function _EUSART_SetOverrunErrorHandler
  6330  0EE4                     _EUSART_SetOverrunErrorHandler:
  6331  0EE4                     l2252:	
  6332                           ;incstack = 0
  6333                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6334                           
  6335                           
  6336                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6337  0EE4  0020               	movlb	0	; select bank0
  6338  0EE5  085A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6339  0EE6  0021               	movlb	1	; select bank1
  6340  0EE7  00AB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6341  0EE8  0020               	movlb	0	; select bank0
  6342  0EE9  0859               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6343  0EEA  0021               	movlb	1	; select bank1
  6344  0EEB  00AA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6345  0EEC                     l154:
  6346  0EEC  0008               	return
  6347  0EED                     __end_of_EUSART_SetOverrunErrorHandler:
  6348                           
  6349                           	psect	text39
  6350  0EDB                     __ptext39:	
  6351 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6352 ;; Defined at:
  6353 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  6356 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;Total ram usage:        2 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; Hardware stack levels required when called: 5
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_EUSART_Initialize
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           
  6383                           ;psect for function _EUSART_SetFramingErrorHandler
  6384  0EDB                     _EUSART_SetFramingErrorHandler:
  6385  0EDB                     l2250:	
  6386                           ;incstack = 0
  6387                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6388                           
  6389                           
  6390                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6391  0EDB  0020               	movlb	0	; select bank0
  6392  0EDC  085A               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6393  0EDD  0021               	movlb	1	; select bank1
  6394  0EDE  00AD               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6395  0EDF  0020               	movlb	0	; select bank0
  6396  0EE0  0859               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6397  0EE1  0021               	movlb	1	; select bank1
  6398  0EE2  00AC               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6399  0EE3                     l151:
  6400  0EE3  0008               	return
  6401  0EE4                     __end_of_EUSART_SetFramingErrorHandler:
  6402                           
  6403                           	psect	text40
  6404  0ED2                     __ptext40:	
  6405 ;; *************** function _EUSART_SetErrorHandler *****************
  6406 ;; Defined at:
  6407 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  6410 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;Total ram usage:        2 bytes
  6427 ;; Hardware stack levels used: 1
  6428 ;; Hardware stack levels required when called: 5
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_EUSART_Initialize
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           
  6437                           ;psect for function _EUSART_SetErrorHandler
  6438  0ED2                     _EUSART_SetErrorHandler:
  6439  0ED2                     l2254:	
  6440                           ;incstack = 0
  6441                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6442                           
  6443                           
  6444                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6445  0ED2  0020               	movlb	0	; select bank0
  6446  0ED3  085A               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6447  0ED4  0021               	movlb	1	; select bank1
  6448  0ED5  00A9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  6449  0ED6  0020               	movlb	0	; select bank0
  6450  0ED7  0859               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6451  0ED8  0021               	movlb	1	; select bank1
  6452  0ED9  00A8               	movwf	_EUSART_ErrorHandler^(0+128)
  6453  0EDA                     l157:
  6454  0EDA  0008               	return
  6455  0EDB                     __end_of_EUSART_SetErrorHandler:
  6456                           
  6457                           	psect	intentry
  6458  0004                     __pintentry:	
  6459 ;; *************** function _INTERRUPT_InterruptManager *****************
  6460 ;; Defined at:
  6461 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;Total ram usage:        0 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 4
  6482 ;; This function calls:
  6483 ;;		_TMR1_ISR
  6484 ;;		_TMR2_ISR
  6485 ;;		_TMR4_ISR
  6486 ;;		_TMR6_ISR
  6487 ;; This function is called by:
  6488 ;;		Interrupt level 1
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492  0004                     _INTERRUPT_InterruptManager:
  6493                           
  6494                           ;incstack = 0
  6495  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6496                           
  6497                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6498  0005  3180               	pagesel	$
  6499  0006                     i1l2910:
  6500                           
  6501                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  6502  0006  1F0B               	btfss	11,6	;volatile
  6503  0007  2809               	goto	u174_21
  6504  0008  280A               	goto	u174_20
  6505  0009                     u174_21:
  6506  0009  2842               	goto	i1l190
  6507  000A                     u174_20:
  6508  000A                     i1l2912:
  6509                           
  6510                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TMR6IE == 1 && PIR3bits.TMR6IF == 1)
  6511  000A  0021               	movlb	1	; select bank1
  6512  000B  1D93               	btfss	19,3	;volatile
  6513  000C  280E               	goto	u175_21
  6514  000D  280F               	goto	u175_20
  6515  000E                     u175_21:
  6516  000E  2818               	goto	i1l181
  6517  000F                     u175_20:
  6518  000F                     i1l2914:
  6519  000F  0020               	movlb	0	; select bank0
  6520  0010  1D93               	btfss	19,3	;volatile
  6521  0011  2813               	goto	u176_21
  6522  0012  2814               	goto	u176_20
  6523  0013                     u176_21:
  6524  0013  2818               	goto	i1l181
  6525  0014                     u176_20:
  6526  0014                     i1l2916:
  6527                           
  6528                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR6_ISR();
  6529  0014  318F  278A  3180   	fcall	_TMR6_ISR
  6530                           
  6531                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  6532  0017  2842               	goto	i1l190
  6533  0018                     i1l181:	
  6534                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  6535                           
  6536  0018  0021               	movlb	1	; select bank1
  6537  0019  1C93               	btfss	19,1	;volatile
  6538  001A  281C               	goto	u177_21
  6539  001B  281D               	goto	u177_20
  6540  001C                     u177_21:
  6541  001C  2826               	goto	i1l183
  6542  001D                     u177_20:
  6543  001D                     i1l2918:
  6544  001D  0020               	movlb	0	; select bank0
  6545  001E  1C93               	btfss	19,1	;volatile
  6546  001F  2821               	goto	u178_21
  6547  0020  2822               	goto	u178_20
  6548  0021                     u178_21:
  6549  0021  2826               	goto	i1l183
  6550  0022                     u178_20:
  6551  0022                     i1l2920:
  6552                           
  6553                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR4_ISR();
  6554  0022  318F  276C  3180   	fcall	_TMR4_ISR
  6555                           
  6556                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6557  0025  2842               	goto	i1l190
  6558  0026                     i1l183:	
  6559                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
  6560                           
  6561  0026  0021               	movlb	1	; select bank1
  6562  0027  1C91               	btfss	17,1	;volatile
  6563  0028  282A               	goto	u179_21
  6564  0029  282B               	goto	u179_20
  6565  002A                     u179_21:
  6566  002A  2834               	goto	i1l185
  6567  002B                     u179_20:
  6568  002B                     i1l2922:
  6569  002B  0020               	movlb	0	; select bank0
  6570  002C  1C91               	btfss	17,1	;volatile
  6571  002D  282F               	goto	u180_21
  6572  002E  2830               	goto	u180_20
  6573  002F                     u180_21:
  6574  002F  2834               	goto	i1l185
  6575  0030                     u180_20:
  6576  0030                     i1l2924:
  6577                           
  6578                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
  6579  0030  318F  275D  3180   	fcall	_TMR2_ISR
  6580                           
  6581                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  6582  0033  2842               	goto	i1l190
  6583  0034                     i1l185:	
  6584                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  6585                           
  6586  0034  0021               	movlb	1	; select bank1
  6587  0035  1C11               	btfss	17,0	;volatile
  6588  0036  2838               	goto	u181_21
  6589  0037  2839               	goto	u181_20
  6590  0038                     u181_21:
  6591  0038  2842               	goto	i1l184
  6592  0039                     u181_20:
  6593  0039                     i1l2926:
  6594  0039  0020               	movlb	0	; select bank0
  6595  003A  1C11               	btfss	17,0	;volatile
  6596  003B  283D               	goto	u182_21
  6597  003C  283E               	goto	u182_20
  6598  003D                     u182_21:
  6599  003D  2842               	goto	i1l184
  6600  003E                     u182_20:
  6601  003E                     i1l2928:
  6602                           
  6603                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR1_ISR();
  6604  003E  3187  27BA  3180   	fcall	_TMR1_ISR
  6605                           
  6606                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  6607  0041  2842               	goto	i1l190
  6608  0042                     i1l184:
  6609  0042                     i1l190:
  6610  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6611  0043  0009               	retfie
  6612  0044                     __end_of_INTERRUPT_InterruptManager:
  6613                           
  6614                           	psect	text42
  6615  0F8A                     __ptext42:	
  6616 ;; *************** function _TMR6_ISR *****************
  6617 ;; Defined at:
  6618 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;		None
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;		None
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  1    wreg      void 
  6625 ;; Registers used:
  6626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;Total ram usage:        0 bytes
  6637 ;; Hardware stack levels used: 1
  6638 ;; Hardware stack levels required when called: 3
  6639 ;; This function calls:
  6640 ;;		Absolute function
  6641 ;;		_TMR6_DefaultInterruptHandler
  6642 ;;		_increase_num_automatic
  6643 ;; This function is called by:
  6644 ;;		_INTERRUPT_InterruptManager
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           
  6649                           ;psect for function _TMR6_ISR
  6650  0F8A                     _TMR6_ISR:
  6651  0F8A                     i1l2754:	
  6652                           ;incstack = 0
  6653                           ; Regs used in _TMR6_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6654                           
  6655                           
  6656                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
  6657  0F8A  0020               	movlb	0	; select bank0
  6658  0F8B  1193               	bcf	19,3	;volatile
  6659  0F8C                     i1l2756:
  6660                           
  6661                           ;mcc_generated_files/tmr6.c: 125:     if(TMR6_InterruptHandler)
  6662  0F8C  0021               	movlb	1	; select bank1
  6663  0F8D  0820               	movf	_TMR6_InterruptHandler^(0+128),w
  6664  0F8E  0421               	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
  6665  0F8F  1903               	btfsc	3,2
  6666  0F90  2F92               	goto	u168_21
  6667  0F91  2F93               	goto	u168_20
  6668  0F92                     u168_21:
  6669  0F92  2F98               	goto	i1l382
  6670  0F93                     u168_20:
  6671  0F93                     i1l2758:
  6672                           
  6673                           ;mcc_generated_files/tmr6.c: 126:     {;mcc_generated_files/tmr6.c: 127:         TMR6_In
      +                          terruptHandler();
  6674  0F93  0821               	movf	(_TMR6_InterruptHandler+1)^(0+128),w
  6675  0F94  008A               	movwf	10
  6676  0F95  0820               	movf	_TMR6_InterruptHandler^(0+128),w
  6677  0F96  000A               	callw
  6678  0F97  318F               	pagesel	$
  6679  0F98                     i1l382:
  6680  0F98  0008               	return
  6681  0F99                     __end_of_TMR6_ISR:
  6682                           
  6683                           	psect	text43
  6684  0003                     __ptext43:	
  6685 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  6686 ;; Defined at:
  6687 ;;		line 136 in file "mcc_generated_files/tmr6.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;		None
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      void 
  6694 ;; Registers used:
  6695 ;;		None
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;Total ram usage:        0 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_TMR6_Initialize
  6711 ;;		_TMR6_ISR
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _TMR6_DefaultInterruptHandler
  6717  0003                     _TMR6_DefaultInterruptHandler:
  6718  0003                     i1l388:	
  6719                           ;incstack = 0
  6720                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  6721                           
  6722  0003  0008               	return
  6723  0004                     __end_of_TMR6_DefaultInterruptHandler:
  6724                           
  6725                           	psect	text44
  6726  02A2                     __ptext44:	
  6727 ;; *************** function _increase_num_automatic *****************
  6728 ;; Defined at:
  6729 ;;		line 753 in file "main.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6747 ;;Total ram usage:        2 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 2
  6750 ;; This function calls:
  6751 ;;		_TX_Command
  6752 ;;		i1_TMR6_StopTimer
  6753 ;;		i1_end_select_digit
  6754 ;;		i1_increase_digit
  6755 ;;		i1_select_digit
  6756 ;;		i1_set_display_value
  6757 ;;		i1_set_display_value_manual
  6758 ;; This function is called by:
  6759 ;;		_main
  6760 ;;		_TMR6_ISR
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           
  6765                           ;psect for function _increase_num_automatic
  6766  02A2                     _increase_num_automatic:
  6767  02A2                     i1l2700:	
  6768                           ;incstack = 0
  6769                           ; Regs used in _increase_num_automatic: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6770                           
  6771                           
  6772                           ;main.c: 755:     static uint8_t tmr6_counter;;main.c: 757:     tmr6_counter++;
  6773  02A2  3001               	movlw	1
  6774  02A3  0020               	movlb	0	; select bank0
  6775  02A4  00D7               	movwf	??_increase_num_automatic
  6776  02A5  0857               	movf	??_increase_num_automatic,w
  6777  02A6  07CE               	addwf	increase_num_automatic@tmr6_counter,f
  6778  02A7                     i1l2702:
  6779                           
  6780                           ;main.c: 759:     if (g_increase_delay == tmr6_counter) {
  6781  02A7  084E               	movf	increase_num_automatic@tmr6_counter,w
  6782  02A8  00D7               	movwf	??_increase_num_automatic
  6783  02A9  01D8               	clrf	??_increase_num_automatic+1
  6784  02AA  082D               	movf	_g_increase_delay+1,w
  6785  02AB  0658               	xorwf	??_increase_num_automatic+1,w
  6786  02AC  1D03               	skipz
  6787  02AD  2AB0               	goto	u162_25
  6788  02AE  082C               	movf	_g_increase_delay,w
  6789  02AF  0657               	xorwf	??_increase_num_automatic,w
  6790  02B0                     u162_25:
  6791  02B0  1D03               	skipz
  6792  02B1  2AB3               	goto	u162_21
  6793  02B2  2AB4               	goto	u162_20
  6794  02B3                     u162_21:
  6795  02B3  2B13               	goto	i1l622
  6796  02B4                     u162_20:
  6797  02B4                     i1l2704:
  6798                           
  6799                           ;main.c: 761:         select_digit();
  6800  02B4  3185  25A0  3182   	fcall	i1_select_digit
  6801  02B7                     i1l2706:
  6802                           
  6803                           ;main.c: 762:         increase_digit();
  6804  02B7  3186  26C3  3182   	fcall	i1_increase_digit
  6805  02BA                     i1l2708:
  6806                           
  6807                           ;main.c: 763:         end_select_digit();
  6808  02BA  318F  271B  3182   	fcall	i1_end_select_digit
  6809  02BD                     i1l2710:
  6810                           
  6811                           ;main.c: 765:         if (0x3F == g_7seg_table[g_yekan.value]) {
  6812  02BD  0020               	movlb	0	; select bank0
  6813  02BE  083A               	movf	_g_yekan+1,w
  6814  02BF  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  6815  02C0  0086               	movwf	6
  6816  02C1  0187               	clrf	7
  6817  02C2  303F               	movlw	63
  6818  02C3  0601               	xorwf	1,w
  6819  02C4  1D03               	btfss	3,2
  6820  02C5  2AC7               	goto	u163_21
  6821  02C6  2AC8               	goto	u163_20
  6822  02C7                     u163_21:
  6823  02C7  2AEE               	goto	i1l2726
  6824  02C8                     u163_20:
  6825  02C8                     i1l2712:
  6826                           
  6827                           ;main.c: 767:             select_digit();
  6828  02C8  3185  25A0  3182   	fcall	i1_select_digit
  6829                           
  6830                           ;main.c: 768:             select_digit();
  6831  02CB  3185  25A0  3182   	fcall	i1_select_digit
  6832  02CE                     i1l2714:
  6833                           
  6834                           ;main.c: 769:             increase_digit();
  6835  02CE  3186  26C3  3182   	fcall	i1_increase_digit
  6836  02D1                     i1l2716:
  6837                           
  6838                           ;main.c: 770:             end_select_digit();
  6839  02D1  318F  271B  3182   	fcall	i1_end_select_digit
  6840  02D4                     i1l2718:
  6841                           
  6842                           ;main.c: 772:             if (0x3F == g_7seg_table[g_dahegan.value]) {
  6843  02D4  0020               	movlb	0	; select bank0
  6844  02D5  0836               	movf	_g_dahegan+1,w
  6845  02D6  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  6846  02D7  0086               	movwf	6
  6847  02D8  0187               	clrf	7
  6848  02D9  303F               	movlw	63
  6849  02DA  0601               	xorwf	1,w
  6850  02DB  1D03               	btfss	3,2
  6851  02DC  2ADE               	goto	u164_21
  6852  02DD  2ADF               	goto	u164_20
  6853  02DE                     u164_21:
  6854  02DE  2AEE               	goto	i1l2726
  6855  02DF                     u164_20:
  6856  02DF                     i1l2720:
  6857                           
  6858                           ;main.c: 774:                 select_digit();
  6859  02DF  3185  25A0  3182   	fcall	i1_select_digit
  6860                           
  6861                           ;main.c: 775:                 select_digit();
  6862  02E2  3185  25A0  3182   	fcall	i1_select_digit
  6863                           
  6864                           ;main.c: 776:                 select_digit();
  6865  02E5  3185  25A0  3182   	fcall	i1_select_digit
  6866  02E8                     i1l2722:
  6867                           
  6868                           ;main.c: 777:                 increase_digit();
  6869  02E8  3186  26C3  3182   	fcall	i1_increase_digit
  6870  02EB                     i1l2724:
  6871                           
  6872                           ;main.c: 778:                 end_select_digit();
  6873  02EB  318F  271B  3182   	fcall	i1_end_select_digit
  6874  02EE                     i1l2726:
  6875                           
  6876                           ;main.c: 782:         if ((0x6F == g_sadegan.seven_segment_maping) &&
  6877  02EE  306F               	movlw	111
  6878  02EF  0020               	movlb	0	; select bank0
  6879  02F0  0633               	xorwf	_g_sadegan+2,w
  6880  02F1  1D03               	btfss	3,2
  6881  02F2  2AF4               	goto	u165_21
  6882  02F3  2AF5               	goto	u165_20
  6883  02F4                     u165_21:
  6884  02F4  2B11               	goto	i1l2740
  6885  02F5                     u165_20:
  6886  02F5                     i1l2728:
  6887  02F5  306F               	movlw	111
  6888  02F6  0637               	xorwf	_g_dahegan+2,w
  6889  02F7  1D03               	btfss	3,2
  6890  02F8  2AFA               	goto	u166_21
  6891  02F9  2AFB               	goto	u166_20
  6892  02FA                     u166_21:
  6893  02FA  2B11               	goto	i1l2740
  6894  02FB                     u166_20:
  6895  02FB                     i1l2730:
  6896  02FB  306F               	movlw	111
  6897  02FC  063B               	xorwf	_g_yekan+2,w
  6898  02FD  1D03               	btfss	3,2
  6899  02FE  2B00               	goto	u167_21
  6900  02FF  2B01               	goto	u167_20
  6901  0300                     u167_21:
  6902  0300  2B11               	goto	i1l2740
  6903  0301                     u167_20:
  6904  0301                     i1l2732:
  6905                           
  6906                           ;main.c: 784:                 (0x6F == g_yekan.seven_segment_maping)) {;main.c: 786:    
      +                                   TMR6_StopTimer();
  6907  0301  318E  26A8  3182   	fcall	i1_TMR6_StopTimer
  6908  0304                     i1l2734:
  6909                           
  6910                           ;main.c: 787:             set_display_value(0);
  6911  0304  3000               	movlw	0
  6912  0305  00F8               	movwf	i1set_display_value@value
  6913  0306  00F9               	movwf	i1set_display_value@value+1
  6914  0307  3182  222F  3182   	fcall	i1_set_display_value
  6915  030A                     i1l2736:
  6916                           
  6917                           ;main.c: 788:             set_display_value_manual();
  6918  030A  318F  2741  3182   	fcall	i1_set_display_value_manual
  6919  030D                     i1l2738:
  6920                           
  6921                           ;main.c: 789:             TX_Command(TX_7SEG_REACHED_999);
  6922  030D  3044               	movlw	68
  6923  030E  318F  2733  3182   	fcall	_TX_Command
  6924  0311                     i1l2740:
  6925                           
  6926                           ;main.c: 792:         tmr6_counter = 0;
  6927  0311  0020               	movlb	0	; select bank0
  6928  0312  01CE               	clrf	increase_num_automatic@tmr6_counter
  6929  0313                     i1l622:
  6930  0313  0008               	return
  6931  0314                     __end_of_increase_num_automatic:
  6932                           
  6933                           	psect	text45
  6934  0F41                     __ptext45:	
  6935 ;; *************** function i1_set_display_value_manual *****************
  6936 ;; Defined at:
  6937 ;;		line 839 in file "main.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6955 ;;Total ram usage:        1 bytes
  6956 ;; Hardware stack levels used: 1
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_increase_num_automatic
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function i1_set_display_value_manual
  6966  0F41                     i1_set_display_value_manual:
  6967  0F41                     i1l2452:	
  6968                           ;incstack = 0
  6969                           ; Regs used in i1_set_display_value_manual: [wreg]
  6970                           
  6971                           
  6972                           ;main.c: 841:     g_sadegan.seven_segment_maping = middle_line_7seg;
  6973  0F41  087D               	movf	_middle_line_7seg,w
  6974  0F42  00F0               	movwf	??i1_set_display_value_manual
  6975  0F43  0870               	movf	??i1_set_display_value_manual,w
  6976  0F44  0020               	movlb	0	; select bank0
  6977  0F45  00B3               	movwf	_g_sadegan+2
  6978                           
  6979                           ;main.c: 842:     g_dahegan.seven_segment_maping = middle_line_7seg;
  6980  0F46  087D               	movf	_middle_line_7seg,w
  6981  0F47  00F0               	movwf	??i1_set_display_value_manual
  6982  0F48  0870               	movf	??i1_set_display_value_manual,w
  6983  0F49  00B7               	movwf	_g_dahegan+2
  6984                           
  6985                           ;main.c: 843:     g_yekan.seven_segment_maping = middle_line_7seg;
  6986  0F4A  087D               	movf	_middle_line_7seg,w
  6987  0F4B  00F0               	movwf	??i1_set_display_value_manual
  6988  0F4C  0870               	movf	??i1_set_display_value_manual,w
  6989  0F4D  00BB               	movwf	_g_yekan+2
  6990  0F4E                     i1l634:
  6991  0F4E  0008               	return
  6992  0F4F                     __end_ofi1_set_display_value_manual:
  6993                           
  6994                           	psect	text46
  6995  06C3                     __ptext46:	
  6996 ;; *************** function i1_increase_digit *****************
  6997 ;; Defined at:
  6998 ;;		line 301 in file "main.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;		None
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;		None
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  1    wreg      void 
  7005 ;; Registers used:
  7006 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;Total ram usage:        1 bytes
  7017 ;; Hardware stack levels used: 1
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_increase_num_automatic
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function i1_increase_digit
  7027  06C3                     i1_increase_digit:
  7028  06C3                     i1l2434:	
  7029                           ;incstack = 0
  7030                           ; Regs used in i1_increase_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  7031                           
  7032                           
  7033                           ;main.c: 303:     if (((void*)0) != gp_selected_digit) {
  7034  06C3  0020               	movlb	0	; select bank0
  7035  06C4  0852               	movf	_gp_selected_digit,w
  7036  06C5  1903               	btfsc	3,2
  7037  06C6  2EC8               	goto	u142_21
  7038  06C7  2EC9               	goto	u142_20
  7039  06C8                     u142_21:
  7040  06C8  2EEC               	goto	i1l511
  7041  06C9                     u142_20:
  7042  06C9                     i1l2436:
  7043                           
  7044                           ;main.c: 305:         gp_selected_digit->value++;
  7045  06C9  3001               	movlw	1
  7046  06CA  00F0               	movwf	??i1_increase_digit
  7047  06CB  0A52               	incf	_gp_selected_digit,w
  7048  06CC  0086               	movwf	6
  7049  06CD  0187               	clrf	7
  7050  06CE  0870               	movf	??i1_increase_digit,w
  7051  06CF  0781               	addwf	1,f
  7052                           
  7053                           ;main.c: 307:         if (10 == gp_selected_digit->value) {
  7054  06D0  0A52               	incf	_gp_selected_digit,w
  7055  06D1  0086               	movwf	6
  7056  06D2  0187               	clrf	7
  7057  06D3  300A               	movlw	10
  7058  06D4  0601               	xorwf	1,w
  7059  06D5  1D03               	btfss	3,2
  7060  06D6  2ED8               	goto	u143_21
  7061  06D7  2ED9               	goto	u143_20
  7062  06D8                     u143_21:
  7063  06D8  2EDD               	goto	i1l2440
  7064  06D9                     u143_20:
  7065  06D9                     i1l2438:
  7066                           
  7067                           ;main.c: 309:             gp_selected_digit->value = 0;
  7068  06D9  0A52               	incf	_gp_selected_digit,w
  7069  06DA  0086               	movwf	6
  7070  06DB  0187               	clrf	7
  7071  06DC  0181               	clrf	1
  7072  06DD                     i1l2440:
  7073                           
  7074                           ;main.c: 312:         gp_selected_digit->seven_segment_maping =
  7075  06DD  0A52               	incf	_gp_selected_digit,w
  7076  06DE  0086               	movwf	6
  7077  06DF  0187               	clrf	7
  7078  06E0  0801               	movf	1,w
  7079  06E1  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  7080  06E2  0086               	movwf	6
  7081  06E3  0187               	clrf	7
  7082  06E4  0801               	movf	1,w
  7083  06E5  00F0               	movwf	??i1_increase_digit
  7084  06E6  0852               	movf	_gp_selected_digit,w
  7085  06E7  3E02               	addlw	2
  7086  06E8  0086               	movwf	6
  7087  06E9  0187               	clrf	7
  7088  06EA  0870               	movf	??i1_increase_digit,w
  7089  06EB  0081               	movwf	1
  7090  06EC                     i1l511:
  7091  06EC  0008               	return
  7092  06ED                     __end_ofi1_increase_digit:
  7093                           
  7094                           	psect	text47
  7095  0EA8                     __ptext47:	
  7096 ;; *************** function i1_TMR6_StopTimer *****************
  7097 ;; Defined at:
  7098 ;;		line 93 in file "mcc_generated_files/tmr6.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;		None
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  1    wreg      void 
  7105 ;; Registers used:
  7106 ;;		None
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;Total ram usage:        0 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_increase_num_automatic
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           
  7126                           ;psect for function i1_TMR6_StopTimer
  7127  0EA8                     i1_TMR6_StopTimer:
  7128  0EA8                     i1l2402:	
  7129                           ;incstack = 0
  7130                           ; Regs used in i1_TMR6_StopTimer: []
  7131                           
  7132                           
  7133                           ;mcc_generated_files/tmr6.c: 96:     T6CONbits.TMR6ON = 0;
  7134  0EA8  0028               	movlb	8	; select bank8
  7135  0EA9  111E               	bcf	30,2	;volatile
  7136  0EAA                     i1l369:
  7137  0EAA  0008               	return
  7138  0EAB                     __end_ofi1_TMR6_StopTimer:
  7139                           
  7140                           	psect	text48
  7141  0F33                     __ptext48:	
  7142 ;; *************** function _TX_Command *****************
  7143 ;; Defined at:
  7144 ;;		line 522 in file "main.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  txData          1    wreg     unsigned char 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  txData          1    1[COMMON] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0, pclath, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;Total ram usage:        1 bytes
  7163 ;; Hardware stack levels used: 1
  7164 ;; Hardware stack levels required when called: 1
  7165 ;; This function calls:
  7166 ;;		_EUSART_Write
  7167 ;;		_EUSART_is_tx_ready
  7168 ;; This function is called by:
  7169 ;;		_increase_num_automatic
  7170 ;;		_increase_num_manual
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           
  7175                           ;psect for function _TX_Command
  7176  0F33                     _TX_Command:
  7177                           
  7178                           ;incstack = 0
  7179                           ; Regs used in _TX_Command: [wreg+status,2+status,0+pclath+cstack]
  7180                           ;TX_Command@txData stored from wreg
  7181  0F33  00F1               	movwf	TX_Command@txData
  7182  0F34                     i1l2288:
  7183                           
  7184                           ;main.c: 524:     if (EUSART_is_tx_ready()) {
  7185  0F34  318F  277B  318F   	fcall	_EUSART_is_tx_ready
  7186  0F37  3A00               	xorlw	0
  7187  0F38  1903               	skipnz
  7188  0F39  2F3B               	goto	u115_21
  7189  0F3A  2F3C               	goto	u115_20
  7190  0F3B                     u115_21:
  7191  0F3B  2F40               	goto	i1l561
  7192  0F3C                     u115_20:
  7193  0F3C                     i1l2290:
  7194                           
  7195                           ;main.c: 526:         EUSART_Write(txData);
  7196  0F3C  0871               	movf	TX_Command@txData,w
  7197  0F3D  318F  2711  318F   	fcall	_EUSART_Write
  7198  0F40                     i1l561:
  7199  0F40  0008               	return
  7200  0F41                     __end_of_TX_Command:
  7201                           
  7202                           	psect	text49
  7203  0F7B                     __ptext49:	
  7204 ;; *************** function _EUSART_is_tx_ready *****************
  7205 ;; Defined at:
  7206 ;;		line 94 in file "mcc_generated_files/eusart.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;		None
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1    wreg      _Bool 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;Total ram usage:        1 bytes
  7225 ;; Hardware stack levels used: 1
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_TX_Command
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           
  7234                           ;psect for function _EUSART_is_tx_ready
  7235  0F7B                     _EUSART_is_tx_ready:
  7236  0F7B                     i1l2186:	
  7237                           ;incstack = 0
  7238                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  7239                           
  7240                           
  7241                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  7242  0F7B  01F0               	clrf	_EUSART_is_tx_ready$262
  7243  0F7C                     i1l2188:
  7244  0F7C  0020               	movlb	0	; select bank0
  7245  0F7D  1E11               	btfss	17,4	;volatile
  7246  0F7E  2F80               	goto	u95_21
  7247  0F7F  2F81               	goto	u95_20
  7248  0F80                     u95_21:
  7249  0F80  2F88               	goto	i1l2194
  7250  0F81                     u95_20:
  7251  0F81                     i1l2190:
  7252  0F81  0023               	movlb	3	; select bank3
  7253  0F82  1E9E               	btfss	30,5	;volatile
  7254  0F83  2F85               	goto	u96_21
  7255  0F84  2F86               	goto	u96_20
  7256  0F85                     u96_21:
  7257  0F85  2F88               	goto	i1l2194
  7258  0F86                     u96_20:
  7259  0F86                     i1l2192:
  7260  0F86  01F0               	clrf	_EUSART_is_tx_ready$262
  7261  0F87  0AF0               	incf	_EUSART_is_tx_ready$262,f
  7262  0F88                     i1l2194:
  7263  0F88  0870               	movf	_EUSART_is_tx_ready$262,w
  7264  0F89                     i1l117:
  7265  0F89  0008               	return
  7266  0F8A                     __end_of_EUSART_is_tx_ready:
  7267                           
  7268                           	psect	text50
  7269  0F11                     __ptext50:	
  7270 ;; *************** function _EUSART_Write *****************
  7271 ;; Defined at:
  7272 ;;		line 132 in file "mcc_generated_files/eusart.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  txData          1    wreg     unsigned char 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  txData          1    0[COMMON] unsigned char 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  1    wreg      void 
  7279 ;; Registers used:
  7280 ;;		wreg
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;Total ram usage:        1 bytes
  7291 ;; Hardware stack levels used: 1
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_TX_Command
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _EUSART_Write
  7301  0F11                     _EUSART_Write:
  7302                           
  7303                           ;incstack = 0
  7304                           ; Regs used in _EUSART_Write: [wreg]
  7305                           ;EUSART_Write@txData stored from wreg
  7306  0F11  00F0               	movwf	EUSART_Write@txData
  7307  0F12                     i1l2198:
  7308  0F12                     i1l136:	
  7309                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  7310                           
  7311                           
  7312                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  7313  0F12  0020               	movlb	0	; select bank0
  7314  0F13  1E11               	btfss	17,4	;volatile
  7315  0F14  2F16               	goto	u97_21
  7316  0F15  2F17               	goto	u97_20
  7317  0F16                     u97_21:
  7318  0F16  2F12               	goto	i1l136
  7319  0F17                     u97_20:
  7320  0F17                     i1l2200:
  7321                           
  7322                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  7323  0F17  0870               	movf	EUSART_Write@txData,w
  7324  0F18  0023               	movlb	3	; select bank3
  7325  0F19  009A               	movwf	26	;volatile
  7326  0F1A                     i1l139:
  7327  0F1A  0008               	return
  7328  0F1B                     __end_of_EUSART_Write:
  7329                           
  7330                           	psect	text51
  7331  0F6C                     __ptext51:	
  7332 ;; *************** function _TMR4_ISR *****************
  7333 ;; Defined at:
  7334 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;		None
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;Total ram usage:        0 bytes
  7353 ;; Hardware stack levels used: 1
  7354 ;; Hardware stack levels required when called: 3
  7355 ;; This function calls:
  7356 ;;		Absolute function
  7357 ;;		_TMR4_DefaultInterruptHandler
  7358 ;;		_decrease_num
  7359 ;; This function is called by:
  7360 ;;		_INTERRUPT_InterruptManager
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           
  7365                           ;psect for function _TMR4_ISR
  7366  0F6C                     _TMR4_ISR:
  7367  0F6C                     i1l2760:	
  7368                           ;incstack = 0
  7369                           ; Regs used in _TMR4_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7370                           
  7371                           
  7372                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  7373  0F6C  0020               	movlb	0	; select bank0
  7374  0F6D  1093               	bcf	19,1	;volatile
  7375  0F6E                     i1l2762:
  7376                           
  7377                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  7378  0F6E  0021               	movlb	1	; select bank1
  7379  0F6F  0822               	movf	_TMR4_InterruptHandler^(0+128),w
  7380  0F70  0423               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  7381  0F71  1903               	btfsc	3,2
  7382  0F72  2F74               	goto	u169_21
  7383  0F73  2F75               	goto	u169_20
  7384  0F74                     u169_21:
  7385  0F74  2F7A               	goto	i1l336
  7386  0F75                     u169_20:
  7387  0F75                     i1l2764:
  7388                           
  7389                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  7390  0F75  0823               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  7391  0F76  008A               	movwf	10
  7392  0F77  0822               	movf	_TMR4_InterruptHandler^(0+128),w
  7393  0F78  000A               	callw
  7394  0F79  318F               	pagesel	$
  7395  0F7A                     i1l336:
  7396  0F7A  0008               	return
  7397  0F7B                     __end_of_TMR4_ISR:
  7398                           
  7399                           	psect	text52
  7400  0002                     __ptext52:	
  7401 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  7402 ;; Defined at:
  7403 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		None
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;Total ram usage:        0 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_TMR4_Initialize
  7427 ;;		_TMR4_ISR
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function _TMR4_DefaultInterruptHandler
  7433  0002                     _TMR4_DefaultInterruptHandler:
  7434  0002                     i1l342:	
  7435                           ;incstack = 0
  7436                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  7437                           
  7438  0002  0008               	return
  7439  0003                     __end_of_TMR4_DefaultInterruptHandler:
  7440                           
  7441                           	psect	text53
  7442  0314                     __ptext53:	
  7443 ;; *************** function _decrease_num *****************
  7444 ;; Defined at:
  7445 ;;		line 712 in file "main.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;		None
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;Total ram usage:        2 bytes
  7464 ;; Hardware stack levels used: 1
  7465 ;; Hardware stack levels required when called: 2
  7466 ;; This function calls:
  7467 ;;		_decrease_digit
  7468 ;;		i1_TMR4_StopTimer
  7469 ;;		i1_end_select_digit
  7470 ;;		i1_select_digit
  7471 ;;		i1_set_display_value
  7472 ;; This function is called by:
  7473 ;;		_main
  7474 ;;		_TMR4_ISR
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           
  7479                           ;psect for function _decrease_num
  7480  0314                     _decrease_num:
  7481  0314                     i1l2662:	
  7482                           ;incstack = 0
  7483                           ; Regs used in _decrease_num: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7484                           
  7485                           
  7486                           ;main.c: 714:     static uint8_t tmr4_counter;;main.c: 716:     tmr4_counter++;
  7487  0314  3001               	movlw	1
  7488  0315  0020               	movlb	0	; select bank0
  7489  0316  00D7               	movwf	??_decrease_num
  7490  0317  0857               	movf	??_decrease_num,w
  7491  0318  07CF               	addwf	decrease_num@tmr4_counter,f
  7492  0319                     i1l2664:
  7493                           
  7494                           ;main.c: 718:     if (g_decrease_delay == tmr4_counter) {
  7495  0319  084F               	movf	decrease_num@tmr4_counter,w
  7496  031A  00D7               	movwf	??_decrease_num
  7497  031B  01D8               	clrf	??_decrease_num+1
  7498  031C  082F               	movf	_g_decrease_delay+1,w
  7499  031D  0658               	xorwf	??_decrease_num+1,w
  7500  031E  1D03               	skipz
  7501  031F  2B22               	goto	u156_25
  7502  0320  082E               	movf	_g_decrease_delay,w
  7503  0321  0657               	xorwf	??_decrease_num,w
  7504  0322                     u156_25:
  7505  0322  1D03               	skipz
  7506  0323  2B25               	goto	u156_21
  7507  0324  2B26               	goto	u156_20
  7508  0325                     u156_21:
  7509  0325  2B80               	goto	i1l613
  7510  0326                     u156_20:
  7511  0326                     i1l2666:
  7512                           
  7513                           ;main.c: 720:         select_digit();
  7514  0326  3185  25A0  3183   	fcall	i1_select_digit
  7515  0329                     i1l2668:
  7516                           
  7517                           ;main.c: 721:         decrease_digit();
  7518  0329  3186  266E  3183   	fcall	_decrease_digit
  7519  032C                     i1l2670:
  7520                           
  7521                           ;main.c: 722:         end_select_digit();
  7522  032C  318F  271B  3183   	fcall	i1_end_select_digit
  7523  032F                     i1l2672:
  7524                           
  7525                           ;main.c: 724:         if (0x6F == g_7seg_table[g_yekan.value]) {
  7526  032F  0020               	movlb	0	; select bank0
  7527  0330  083A               	movf	_g_yekan+1,w
  7528  0331  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  7529  0332  0086               	movwf	6
  7530  0333  0187               	clrf	7
  7531  0334  306F               	movlw	111
  7532  0335  0601               	xorwf	1,w
  7533  0336  1D03               	btfss	3,2
  7534  0337  2B39               	goto	u157_21
  7535  0338  2B3A               	goto	u157_20
  7536  0339                     u157_21:
  7537  0339  2B60               	goto	i1l2688
  7538  033A                     u157_20:
  7539  033A                     i1l2674:
  7540                           
  7541                           ;main.c: 726:             select_digit();
  7542  033A  3185  25A0  3183   	fcall	i1_select_digit
  7543                           
  7544                           ;main.c: 727:             select_digit();
  7545  033D  3185  25A0  3183   	fcall	i1_select_digit
  7546  0340                     i1l2676:
  7547                           
  7548                           ;main.c: 728:             decrease_digit();
  7549  0340  3186  266E  3183   	fcall	_decrease_digit
  7550  0343                     i1l2678:
  7551                           
  7552                           ;main.c: 729:             end_select_digit();
  7553  0343  318F  271B  3183   	fcall	i1_end_select_digit
  7554  0346                     i1l2680:
  7555                           
  7556                           ;main.c: 731:             if (0x6F == g_7seg_table[g_dahegan.value]) {
  7557  0346  0020               	movlb	0	; select bank0
  7558  0347  0836               	movf	_g_dahegan+1,w
  7559  0348  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  7560  0349  0086               	movwf	6
  7561  034A  0187               	clrf	7
  7562  034B  306F               	movlw	111
  7563  034C  0601               	xorwf	1,w
  7564  034D  1D03               	btfss	3,2
  7565  034E  2B50               	goto	u158_21
  7566  034F  2B51               	goto	u158_20
  7567  0350                     u158_21:
  7568  0350  2B60               	goto	i1l2688
  7569  0351                     u158_20:
  7570  0351                     i1l2682:
  7571                           
  7572                           ;main.c: 733:                 select_digit();
  7573  0351  3185  25A0  3183   	fcall	i1_select_digit
  7574                           
  7575                           ;main.c: 734:                 select_digit();
  7576  0354  3185  25A0  3183   	fcall	i1_select_digit
  7577                           
  7578                           ;main.c: 735:                 select_digit();
  7579  0357  3185  25A0  3183   	fcall	i1_select_digit
  7580  035A                     i1l2684:
  7581                           
  7582                           ;main.c: 736:                 decrease_digit();
  7583  035A  3186  266E  3183   	fcall	_decrease_digit
  7584  035D                     i1l2686:
  7585                           
  7586                           ;main.c: 737:                 end_select_digit();
  7587  035D  318F  271B  3183   	fcall	i1_end_select_digit
  7588  0360                     i1l2688:
  7589                           
  7590                           ;main.c: 741:         if ((0x3F == g_sadegan.seven_segment_maping) &&
  7591  0360  303F               	movlw	63
  7592  0361  0020               	movlb	0	; select bank0
  7593  0362  0633               	xorwf	_g_sadegan+2,w
  7594  0363  1D03               	btfss	3,2
  7595  0364  2B66               	goto	u159_21
  7596  0365  2B67               	goto	u159_20
  7597  0366                     u159_21:
  7598  0366  2B7E               	goto	i1l2698
  7599  0367                     u159_20:
  7600  0367                     i1l2690:
  7601  0367  303F               	movlw	63
  7602  0368  0637               	xorwf	_g_dahegan+2,w
  7603  0369  1D03               	btfss	3,2
  7604  036A  2B6C               	goto	u160_21
  7605  036B  2B6D               	goto	u160_20
  7606  036C                     u160_21:
  7607  036C  2B7E               	goto	i1l2698
  7608  036D                     u160_20:
  7609  036D                     i1l2692:
  7610  036D  303F               	movlw	63
  7611  036E  063B               	xorwf	_g_yekan+2,w
  7612  036F  1D03               	btfss	3,2
  7613  0370  2B72               	goto	u161_21
  7614  0371  2B73               	goto	u161_20
  7615  0372                     u161_21:
  7616  0372  2B7E               	goto	i1l2698
  7617  0373                     u161_20:
  7618  0373                     i1l2694:
  7619                           
  7620                           ;main.c: 743:                 (0x3F == g_yekan.seven_segment_maping)) {;main.c: 745:    
      +                                   TMR4_StopTimer();
  7621  0373  318E  26A5  3183   	fcall	i1_TMR4_StopTimer
  7622  0376                     i1l2696:
  7623                           
  7624                           ;main.c: 746:             set_display_value(g_setted_value);
  7625  0376  0020               	movlb	0	; select bank0
  7626  0377  084A               	movf	_g_setted_value+1,w
  7627  0378  00F9               	movwf	i1set_display_value@value+1
  7628  0379  0849               	movf	_g_setted_value,w
  7629  037A  00F8               	movwf	i1set_display_value@value
  7630  037B  3182  222F  3183   	fcall	i1_set_display_value
  7631  037E                     i1l2698:
  7632                           
  7633                           ;main.c: 749:         tmr4_counter = 0;
  7634  037E  0020               	movlb	0	; select bank0
  7635  037F  01CF               	clrf	decrease_num@tmr4_counter
  7636  0380                     i1l613:
  7637  0380  0008               	return
  7638  0381                     __end_of_decrease_num:
  7639                           
  7640                           	psect	text54
  7641  022F                     __ptext54:	
  7642 ;; *************** function i1_set_display_value *****************
  7643 ;; Defined at:
  7644 ;;		line 501 in file "main.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  value           2    8[COMMON] unsigned short 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  buffer          2    0[BANK0 ] unsigned short 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;Total ram usage:        7 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; Hardware stack levels required when called: 1
  7665 ;; This function calls:
  7666 ;;		i1___lwdiv
  7667 ;;		i1___lwmod
  7668 ;; This function is called by:
  7669 ;;		_decrease_num
  7670 ;;		_increase_num_automatic
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           
  7675                           ;psect for function i1_set_display_value
  7676  022F                     i1_set_display_value:
  7677  022F                     i1l2442:	
  7678                           ;incstack = 0
  7679                           ; Regs used in i1_set_display_value: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7680                           
  7681                           
  7682                           ;main.c: 503:     uint16_t buffer = value;
  7683  022F  0879               	movf	i1set_display_value@value+1,w
  7684  0230  0020               	movlb	0	; select bank0
  7685  0231  00D6               	movwf	i1set_display_value@buffer+1
  7686  0232  0878               	movf	i1set_display_value@value,w
  7687  0233  00D5               	movwf	i1set_display_value@buffer
  7688                           
  7689                           ;main.c: 505:     if (value <= 999) {
  7690  0234  3003               	movlw	3
  7691  0235  0279               	subwf	i1set_display_value@value+1,w
  7692  0236  30E8               	movlw	232
  7693  0237  1903               	skipnz
  7694  0238  0278               	subwf	i1set_display_value@value,w
  7695  0239  1803               	skipnc
  7696  023A  2A3C               	goto	u144_21
  7697  023B  2A3D               	goto	u144_20
  7698  023C                     u144_21:
  7699  023C  2AA1               	goto	i1l557
  7700  023D                     u144_20:
  7701  023D                     i1l2444:
  7702                           
  7703                           ;main.c: 507:         g_sadegan.value = buffer / g_sadegan.position;
  7704  023D  0831               	movf	_g_sadegan,w
  7705  023E  00FA               	movwf	??i1_set_display_value
  7706  023F  01FB               	clrf	??i1_set_display_value+1
  7707  0240  087A               	movf	??i1_set_display_value,w
  7708  0241  00F0               	movwf	i1___lwdiv@divisor
  7709  0242  087B               	movf	??i1_set_display_value+1,w
  7710  0243  00F1               	movwf	i1___lwdiv@divisor+1
  7711  0244  0856               	movf	i1set_display_value@buffer+1,w
  7712  0245  00F3               	movwf	i1___lwdiv@dividend+1
  7713  0246  0855               	movf	i1set_display_value@buffer,w
  7714  0247  00F2               	movwf	i1___lwdiv@dividend
  7715  0248  3185  252D  3182   	fcall	i1___lwdiv
  7716  024B  0870               	movf	?i1___lwdiv,w
  7717  024C  00FC               	movwf	??i1_set_display_value+2
  7718  024D  087C               	movf	??i1_set_display_value+2,w
  7719  024E  0020               	movlb	0	; select bank0
  7720  024F  00B2               	movwf	_g_sadegan+1
  7721                           
  7722                           ;main.c: 508:         buffer %= g_sadegan.position;
  7723  0250  0831               	movf	_g_sadegan,w
  7724  0251  00FA               	movwf	??i1_set_display_value
  7725  0252  01FB               	clrf	??i1_set_display_value+1
  7726  0253  087A               	movf	??i1_set_display_value,w
  7727  0254  00F0               	movwf	i1___lwmod@divisor
  7728  0255  087B               	movf	??i1_set_display_value+1,w
  7729  0256  00F1               	movwf	i1___lwmod@divisor+1
  7730  0257  0856               	movf	i1set_display_value@buffer+1,w
  7731  0258  00F3               	movwf	i1___lwmod@dividend+1
  7732  0259  0855               	movf	i1set_display_value@buffer,w
  7733  025A  00F2               	movwf	i1___lwmod@dividend
  7734  025B  3186  260C  3182   	fcall	i1___lwmod
  7735  025E  0871               	movf	?i1___lwmod+1,w
  7736  025F  0020               	movlb	0	; select bank0
  7737  0260  00D6               	movwf	i1set_display_value@buffer+1
  7738  0261  0870               	movf	?i1___lwmod,w
  7739  0262  00D5               	movwf	i1set_display_value@buffer
  7740                           
  7741                           ;main.c: 510:         g_dahegan.value = buffer / g_dahegan.position;
  7742  0263  0835               	movf	_g_dahegan,w
  7743  0264  00FA               	movwf	??i1_set_display_value
  7744  0265  01FB               	clrf	??i1_set_display_value+1
  7745  0266  087A               	movf	??i1_set_display_value,w
  7746  0267  00F0               	movwf	i1___lwdiv@divisor
  7747  0268  087B               	movf	??i1_set_display_value+1,w
  7748  0269  00F1               	movwf	i1___lwdiv@divisor+1
  7749  026A  0856               	movf	i1set_display_value@buffer+1,w
  7750  026B  00F3               	movwf	i1___lwdiv@dividend+1
  7751  026C  0855               	movf	i1set_display_value@buffer,w
  7752  026D  00F2               	movwf	i1___lwdiv@dividend
  7753  026E  3185  252D  3182   	fcall	i1___lwdiv
  7754  0271  0870               	movf	?i1___lwdiv,w
  7755  0272  00FC               	movwf	??i1_set_display_value+2
  7756  0273  087C               	movf	??i1_set_display_value+2,w
  7757  0274  0020               	movlb	0	; select bank0
  7758  0275  00B6               	movwf	_g_dahegan+1
  7759                           
  7760                           ;main.c: 512:         g_yekan.value = buffer % g_dahegan.position;
  7761  0276  0835               	movf	_g_dahegan,w
  7762  0277  00FA               	movwf	??i1_set_display_value
  7763  0278  01FB               	clrf	??i1_set_display_value+1
  7764  0279  087A               	movf	??i1_set_display_value,w
  7765  027A  00F0               	movwf	i1___lwmod@divisor
  7766  027B  087B               	movf	??i1_set_display_value+1,w
  7767  027C  00F1               	movwf	i1___lwmod@divisor+1
  7768  027D  0856               	movf	i1set_display_value@buffer+1,w
  7769  027E  00F3               	movwf	i1___lwmod@dividend+1
  7770  027F  0855               	movf	i1set_display_value@buffer,w
  7771  0280  00F2               	movwf	i1___lwmod@dividend
  7772  0281  3186  260C  3182   	fcall	i1___lwmod
  7773  0284  0870               	movf	?i1___lwmod,w
  7774  0285  00FC               	movwf	??i1_set_display_value+2
  7775  0286  087C               	movf	??i1_set_display_value+2,w
  7776  0287  0020               	movlb	0	; select bank0
  7777  0288  00BA               	movwf	_g_yekan+1
  7778  0289                     i1l2446:
  7779                           
  7780                           ;main.c: 514:         g_sadegan.seven_segment_maping = g_7seg_table[g_sadegan.value];
  7781  0289  0832               	movf	_g_sadegan+1,w
  7782  028A  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  7783  028B  0086               	movwf	6
  7784  028C  0187               	clrf	7
  7785  028D  0801               	movf	1,w
  7786  028E  00FA               	movwf	??i1_set_display_value
  7787  028F  087A               	movf	??i1_set_display_value,w
  7788  0290  00B3               	movwf	_g_sadegan+2
  7789  0291                     i1l2448:
  7790                           
  7791                           ;main.c: 515:         g_dahegan.seven_segment_maping = g_7seg_table[g_dahegan.value];
  7792  0291  0836               	movf	_g_dahegan+1,w
  7793  0292  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  7794  0293  0086               	movwf	6
  7795  0294  0187               	clrf	7
  7796  0295  0801               	movf	1,w
  7797  0296  00FA               	movwf	??i1_set_display_value
  7798  0297  087A               	movf	??i1_set_display_value,w
  7799  0298  00B7               	movwf	_g_dahegan+2
  7800  0299                     i1l2450:
  7801                           
  7802                           ;main.c: 516:         g_yekan.seven_segment_maping = g_7seg_table[g_yekan.value];
  7803  0299  083A               	movf	_g_yekan+1,w
  7804  029A  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  7805  029B  0086               	movwf	6
  7806  029C  0187               	clrf	7
  7807  029D  0801               	movf	1,w
  7808  029E  00FA               	movwf	??i1_set_display_value
  7809  029F  087A               	movf	??i1_set_display_value,w
  7810  02A0  00BB               	movwf	_g_yekan+2
  7811  02A1                     i1l557:
  7812  02A1  0008               	return
  7813  02A2                     __end_ofi1_set_display_value:
  7814                           
  7815                           	psect	text55
  7816  060C                     __ptext55:	
  7817 ;; *************** function i1___lwmod *****************
  7818 ;; Defined at:
  7819 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwmod.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  divisor         2    0[COMMON] unsigned int 
  7822 ;;  dividend        2    2[COMMON] unsigned int 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  counter         1    5[COMMON] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  2    0[COMMON] unsigned int 
  7827 ;; Registers used:
  7828 ;;		wreg, status,2, status,0
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;Total ram usage:        6 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		i1_set_display_value
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           
  7848                           ;psect for function i1___lwmod
  7849  060C                     i1___lwmod:
  7850  060C                     i1l2228:	
  7851                           ;incstack = 0
  7852                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  7853                           
  7854  060C  0870               	movf	i1___lwmod@divisor,w
  7855  060D  0471               	iorwf	i1___lwmod@divisor+1,w
  7856  060E  1903               	btfsc	3,2
  7857  060F  2E11               	goto	u105_21
  7858  0610  2E12               	goto	u105_20
  7859  0611                     u105_21:
  7860  0611  2E3B               	goto	i1l2246
  7861  0612                     u105_20:
  7862  0612                     i1l2230:
  7863  0612  01F5               	clrf	i1___lwmod@counter
  7864  0613  0AF5               	incf	i1___lwmod@counter,f
  7865  0614  2E1E               	goto	i1l2236
  7866  0615                     i1l2232:
  7867  0615  3001               	movlw	1
  7868  0616                     u106_25:
  7869  0616  35F0               	lslf	i1___lwmod@divisor,f
  7870  0617  0DF1               	rlf	i1___lwmod@divisor+1,f
  7871  0618  0B89               	decfsz	9,f
  7872  0619  2E16               	goto	u106_25
  7873  061A                     i1l2234:
  7874  061A  3001               	movlw	1
  7875  061B  00F4               	movwf	??i1___lwmod
  7876  061C  0874               	movf	??i1___lwmod,w
  7877  061D  07F5               	addwf	i1___lwmod@counter,f
  7878  061E                     i1l2236:
  7879  061E  1FF1               	btfss	i1___lwmod@divisor+1,7
  7880  061F  2E21               	goto	u107_21
  7881  0620  2E22               	goto	u107_20
  7882  0621                     u107_21:
  7883  0621  2E15               	goto	i1l2232
  7884  0622                     u107_20:
  7885  0622                     i1l2238:
  7886  0622  0871               	movf	i1___lwmod@divisor+1,w
  7887  0623  0273               	subwf	i1___lwmod@dividend+1,w
  7888  0624  1D03               	skipz
  7889  0625  2E28               	goto	u108_25
  7890  0626  0870               	movf	i1___lwmod@divisor,w
  7891  0627  0272               	subwf	i1___lwmod@dividend,w
  7892  0628                     u108_25:
  7893  0628  1C03               	skipc
  7894  0629  2E2B               	goto	u108_21
  7895  062A  2E2C               	goto	u108_20
  7896  062B                     u108_21:
  7897  062B  2E30               	goto	i1l2242
  7898  062C                     u108_20:
  7899  062C                     i1l2240:
  7900  062C  0870               	movf	i1___lwmod@divisor,w
  7901  062D  02F2               	subwf	i1___lwmod@dividend,f
  7902  062E  0871               	movf	i1___lwmod@divisor+1,w
  7903  062F  3BF3               	subwfb	i1___lwmod@dividend+1,f
  7904  0630                     i1l2242:
  7905  0630  3001               	movlw	1
  7906  0631                     u109_25:
  7907  0631  36F1               	lsrf	i1___lwmod@divisor+1,f
  7908  0632  0CF0               	rrf	i1___lwmod@divisor,f
  7909  0633  0B89               	decfsz	9,f
  7910  0634  2E31               	goto	u109_25
  7911  0635                     i1l2244:
  7912  0635  3001               	movlw	1
  7913  0636  02F5               	subwf	i1___lwmod@counter,f
  7914  0637  1D03               	btfss	3,2
  7915  0638  2E3A               	goto	u110_21
  7916  0639  2E3B               	goto	u110_20
  7917  063A                     u110_21:
  7918  063A  2E22               	goto	i1l2238
  7919  063B                     u110_20:
  7920  063B                     i1l2246:
  7921  063B  0873               	movf	i1___lwmod@dividend+1,w
  7922  063C  00F1               	movwf	?i1___lwmod+1
  7923  063D  0872               	movf	i1___lwmod@dividend,w
  7924  063E  00F0               	movwf	?i1___lwmod
  7925  063F                     i1l1074:
  7926  063F  0008               	return
  7927  0640                     __end_ofi1___lwmod:
  7928                           
  7929                           	psect	text56
  7930  052D                     __ptext56:	
  7931 ;; *************** function i1___lwdiv *****************
  7932 ;; Defined at:
  7933 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  divisor         2    0[COMMON] unsigned int 
  7936 ;;  dividend        2    2[COMMON] unsigned int 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  quotient        2    5[COMMON] unsigned int 
  7939 ;;  counter         1    7[COMMON] unsigned char 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  2    0[COMMON] unsigned int 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2, status,0
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;Total ram usage:        8 bytes
  7954 ;; Hardware stack levels used: 1
  7955 ;; This function calls:
  7956 ;;		Nothing
  7957 ;; This function is called by:
  7958 ;;		i1_set_display_value
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           
  7963                           ;psect for function i1___lwdiv
  7964  052D                     i1___lwdiv:
  7965  052D                     i1l2202:	
  7966                           ;incstack = 0
  7967                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7968                           
  7969  052D  01F5               	clrf	i1___lwdiv@quotient
  7970  052E  01F6               	clrf	i1___lwdiv@quotient+1
  7971  052F                     i1l2204:
  7972  052F  0870               	movf	i1___lwdiv@divisor,w
  7973  0530  0471               	iorwf	i1___lwdiv@divisor+1,w
  7974  0531  1903               	btfsc	3,2
  7975  0532  2D34               	goto	u98_21
  7976  0533  2D35               	goto	u98_20
  7977  0534                     u98_21:
  7978  0534  2D64               	goto	i1l2224
  7979  0535                     u98_20:
  7980  0535                     i1l2206:
  7981  0535  01F7               	clrf	i1___lwdiv@counter
  7982  0536  0AF7               	incf	i1___lwdiv@counter,f
  7983  0537  2D41               	goto	i1l2212
  7984  0538                     i1l2208:
  7985  0538  3001               	movlw	1
  7986  0539                     u99_25:
  7987  0539  35F0               	lslf	i1___lwdiv@divisor,f
  7988  053A  0DF1               	rlf	i1___lwdiv@divisor+1,f
  7989  053B  0B89               	decfsz	9,f
  7990  053C  2D39               	goto	u99_25
  7991  053D                     i1l2210:
  7992  053D  3001               	movlw	1
  7993  053E  00F4               	movwf	??i1___lwdiv
  7994  053F  0874               	movf	??i1___lwdiv,w
  7995  0540  07F7               	addwf	i1___lwdiv@counter,f
  7996  0541                     i1l2212:
  7997  0541  1FF1               	btfss	i1___lwdiv@divisor+1,7
  7998  0542  2D44               	goto	u100_21
  7999  0543  2D45               	goto	u100_20
  8000  0544                     u100_21:
  8001  0544  2D38               	goto	i1l2208
  8002  0545                     u100_20:
  8003  0545                     i1l2214:
  8004  0545  3001               	movlw	1
  8005  0546                     u101_25:
  8006  0546  35F5               	lslf	i1___lwdiv@quotient,f
  8007  0547  0DF6               	rlf	i1___lwdiv@quotient+1,f
  8008  0548  0B89               	decfsz	9,f
  8009  0549  2D46               	goto	u101_25
  8010  054A  0871               	movf	i1___lwdiv@divisor+1,w
  8011  054B  0273               	subwf	i1___lwdiv@dividend+1,w
  8012  054C  1D03               	skipz
  8013  054D  2D50               	goto	u102_25
  8014  054E  0870               	movf	i1___lwdiv@divisor,w
  8015  054F  0272               	subwf	i1___lwdiv@dividend,w
  8016  0550                     u102_25:
  8017  0550  1C03               	skipc
  8018  0551  2D53               	goto	u102_21
  8019  0552  2D54               	goto	u102_20
  8020  0553                     u102_21:
  8021  0553  2D59               	goto	i1l2220
  8022  0554                     u102_20:
  8023  0554                     i1l2216:
  8024  0554  0870               	movf	i1___lwdiv@divisor,w
  8025  0555  02F2               	subwf	i1___lwdiv@dividend,f
  8026  0556  0871               	movf	i1___lwdiv@divisor+1,w
  8027  0557  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  8028  0558                     i1l2218:
  8029  0558  1475               	bsf	i1___lwdiv@quotient,0
  8030  0559                     i1l2220:
  8031  0559  3001               	movlw	1
  8032  055A                     u103_25:
  8033  055A  36F1               	lsrf	i1___lwdiv@divisor+1,f
  8034  055B  0CF0               	rrf	i1___lwdiv@divisor,f
  8035  055C  0B89               	decfsz	9,f
  8036  055D  2D5A               	goto	u103_25
  8037  055E                     i1l2222:
  8038  055E  3001               	movlw	1
  8039  055F  02F7               	subwf	i1___lwdiv@counter,f
  8040  0560  1D03               	btfss	3,2
  8041  0561  2D63               	goto	u104_21
  8042  0562  2D64               	goto	u104_20
  8043  0563                     u104_21:
  8044  0563  2D45               	goto	i1l2214
  8045  0564                     u104_20:
  8046  0564                     i1l2224:
  8047  0564  0876               	movf	i1___lwdiv@quotient+1,w
  8048  0565  00F1               	movwf	?i1___lwdiv+1
  8049  0566  0875               	movf	i1___lwdiv@quotient,w
  8050  0567  00F0               	movwf	?i1___lwdiv
  8051  0568                     i1l1064:
  8052  0568  0008               	return
  8053  0569                     __end_ofi1___lwdiv:
  8054                           
  8055                           	psect	text57
  8056  05A0                     __ptext57:	
  8057 ;; *************** function i1_select_digit *****************
  8058 ;; Defined at:
  8059 ;;		line 226 in file "main.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;		None
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  buffer          1    2[COMMON] PTR struct .
  8064 ;;		 -> NULL(0), g_sadegan(4), g_dahegan(4), g_yekan(4), 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  1    wreg      void 
  8067 ;; Registers used:
  8068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;Total ram usage:        3 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_decrease_num
  8084 ;;		_increase_num_automatic
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           
  8089                           ;psect for function i1_select_digit
  8090  05A0                     i1_select_digit:
  8091  05A0                     i1l2404:	
  8092                           ;incstack = 0
  8093                           ; Regs used in i1_select_digit: [wreg-fsr1h+status,2+status,0]
  8094                           
  8095                           
  8096                           ;main.c: 228:     digit_t* buffer = gp_selected_digit;
  8097  05A0  0020               	movlb	0	; select bank0
  8098  05A1  0852               	movf	_gp_selected_digit,w
  8099  05A2  00F0               	movwf	??i1_select_digit
  8100  05A3  0870               	movf	??i1_select_digit,w
  8101  05A4  00F2               	movwf	i1select_digit@buffer
  8102  05A5                     i1l2406:
  8103                           
  8104                           ;main.c: 229:     gp_selected_digit = ((void*)0);
  8105  05A5  01D2               	clrf	_gp_selected_digit
  8106  05A6                     i1l2408:
  8107                           
  8108                           ;main.c: 231:     if (((void*)0) == buffer)
  8109  05A6  0872               	movf	i1select_digit@buffer,w
  8110  05A7  1D03               	btfss	3,2
  8111  05A8  2DAA               	goto	u141_21
  8112  05A9  2DAB               	goto	u141_20
  8113  05AA                     u141_21:
  8114  05AA  2DB0               	goto	i1l2412
  8115  05AB                     u141_20:
  8116  05AB                     i1l2410:
  8117                           
  8118                           ;main.c: 232:     {;main.c: 234:         gp_selected_digit = &g_yekan;
  8119  05AB  3039               	movlw	(low (_g_yekan| 0))& (0+255)
  8120  05AC  00F0               	movwf	??i1_select_digit
  8121  05AD  0870               	movf	??i1_select_digit,w
  8122  05AE  00D2               	movwf	_gp_selected_digit
  8123                           
  8124                           ;main.c: 235:     } else {
  8125  05AF  2DD6               	goto	i1l503
  8126  05B0                     i1l2412:
  8127                           
  8128                           ;main.c: 238:         buffer->show = 1;
  8129  05B0  0872               	movf	i1select_digit@buffer,w
  8130  05B1  3E03               	addlw	3
  8131  05B2  0086               	movwf	6
  8132  05B3  0187               	clrf	7
  8133  05B4  1401               	bsf	1,0
  8134                           
  8135                           ;main.c: 240:         switch (buffer->position) {
  8136  05B5  2DC0               	goto	i1l2422
  8137  05B6                     i1l2414:
  8138                           
  8139                           ;main.c: 244:                 gp_selected_digit = &g_dahegan;
  8140  05B6  3035               	movlw	(low (_g_dahegan| 0))& (0+255)
  8141  05B7  00F0               	movwf	??i1_select_digit
  8142  05B8  0870               	movf	??i1_select_digit,w
  8143  05B9  00D2               	movwf	_gp_selected_digit
  8144                           
  8145                           ;main.c: 245:                 break;
  8146  05BA  2DD6               	goto	i1l503
  8147  05BB                     i1l2416:
  8148                           
  8149                           ;main.c: 248:                 gp_selected_digit = &g_sadegan;
  8150  05BB  3031               	movlw	(low (_g_sadegan| 0))& (0+255)
  8151  05BC  00F0               	movwf	??i1_select_digit
  8152  05BD  0870               	movf	??i1_select_digit,w
  8153  05BE  00D2               	movwf	_gp_selected_digit
  8154                           
  8155                           ;main.c: 249:                 break;
  8156  05BF  2DD6               	goto	i1l503
  8157  05C0                     i1l2422:
  8158  05C0  0872               	movf	i1select_digit@buffer,w
  8159  05C1  0086               	movwf	6
  8160  05C2  0187               	clrf	7
  8161  05C3  0801               	movf	1,w
  8162  05C4  00F0               	movwf	??i1_select_digit
  8163  05C5  01F1               	clrf	??i1_select_digit+1
  8164                           
  8165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8166                           ; Switch size 1, requested type "simple"
  8167                           ; Number of cases is 1, Range of values is 0 to 0
  8168                           ; switch strategies available:
  8169                           ; Name         Instructions Cycles
  8170                           ; simple_byte            4     3 (average)
  8171                           ; direct_byte            8     6 (fixed)
  8172                           ; jumptable            260     6 (fixed)
  8173                           ;	Chosen strategy is simple_byte
  8174  05C6  0871               	movf	??i1_select_digit+1,w
  8175  05C7  3A00               	xorlw	0	; case 0
  8176  05C8  1903               	skipnz
  8177  05C9  2DCB               	goto	i1l3268
  8178  05CA  2DD6               	goto	i1l503
  8179  05CB                     i1l3268:
  8180                           
  8181                           ; Switch size 1, requested type "simple"
  8182                           ; Number of cases is 3, Range of values is 1 to 100
  8183                           ; switch strategies available:
  8184                           ; Name         Instructions Cycles
  8185                           ; simple_byte           10     6 (average)
  8186                           ; direct_byte          209     9 (fixed)
  8187                           ; jumptable            263     9 (fixed)
  8188                           ;	Chosen strategy is simple_byte
  8189  05CB  0870               	movf	??i1_select_digit,w
  8190  05CC  3A01               	xorlw	1	; case 1
  8191  05CD  1903               	skipnz
  8192  05CE  2DB6               	goto	i1l2414
  8193  05CF  3A0B               	xorlw	11	; case 10
  8194  05D0  1903               	skipnz
  8195  05D1  2DBB               	goto	i1l2416
  8196  05D2  3A6E               	xorlw	110	; case 100
  8197  05D3  1903               	skipnz
  8198  05D4  2DAB               	goto	i1l2410
  8199  05D5  2DD6               	goto	i1l503
  8200  05D6                     i1l503:
  8201  05D6  0008               	return
  8202  05D7                     __end_ofi1_select_digit:
  8203                           
  8204                           	psect	text58
  8205  0F1B                     __ptext58:	
  8206 ;; *************** function i1_end_select_digit *****************
  8207 ;; Defined at:
  8208 ;;		line 276 in file "main.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;  buffer          1    1[COMMON] PTR struct .
  8213 ;;		 -> NULL(0), g_sadegan(4), g_dahegan(4), g_yekan(4), 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;Total ram usage:        2 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_decrease_num
  8233 ;;		_increase_num_automatic
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           
  8238                           ;psect for function i1_end_select_digit
  8239  0F1B                     i1_end_select_digit:
  8240  0F1B                     i1l2428:	
  8241                           ;incstack = 0
  8242                           ; Regs used in i1_end_select_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8243                           
  8244                           
  8245                           ;main.c: 278:     digit_t* buffer = gp_selected_digit;
  8246  0F1B  0020               	movlb	0	; select bank0
  8247  0F1C  0852               	movf	_gp_selected_digit,w
  8248  0F1D  00F0               	movwf	??i1_end_select_digit
  8249  0F1E  0870               	movf	??i1_end_select_digit,w
  8250  0F1F  00F1               	movwf	i1end_select_digit@buffer
  8251  0F20                     i1l2430:
  8252                           
  8253                           ;main.c: 279:     gp_selected_digit = ((void*)0);
  8254  0F20  01D2               	clrf	_gp_selected_digit
  8255  0F21                     i1l2432:
  8256                           
  8257                           ;main.c: 280:     buffer->show = 1;
  8258  0F21  0871               	movf	i1end_select_digit@buffer,w
  8259  0F22  3E03               	addlw	3
  8260  0F23  0086               	movwf	6
  8261  0F24  0187               	clrf	7
  8262  0F25  1401               	bsf	1,0
  8263  0F26                     i1l506:
  8264  0F26  0008               	return
  8265  0F27                     __end_ofi1_end_select_digit:
  8266                           
  8267                           	psect	text59
  8268  0EA5                     __ptext59:	
  8269 ;; *************** function i1_TMR4_StopTimer *****************
  8270 ;; Defined at:
  8271 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;		None
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;		None
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		None
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;Total ram usage:        0 bytes
  8290 ;; Hardware stack levels used: 1
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_decrease_num
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           
  8299                           ;psect for function i1_TMR4_StopTimer
  8300  0EA5                     i1_TMR4_StopTimer:
  8301  0EA5                     i1l2400:	
  8302                           ;incstack = 0
  8303                           ; Regs used in i1_TMR4_StopTimer: []
  8304                           
  8305                           
  8306                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  8307  0EA5  0028               	movlb	8	; select bank8
  8308  0EA6  1117               	bcf	23,2	;volatile
  8309  0EA7                     i1l323:
  8310  0EA7  0008               	return
  8311  0EA8                     __end_ofi1_TMR4_StopTimer:
  8312                           
  8313                           	psect	text60
  8314  066E                     __ptext60:	
  8315 ;; *************** function _decrease_digit *****************
  8316 ;; Defined at:
  8317 ;;		line 335 in file "main.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;Total ram usage:        1 bytes
  8336 ;; Hardware stack levels used: 1
  8337 ;; This function calls:
  8338 ;;		Nothing
  8339 ;; This function is called by:
  8340 ;;		_decrease_num
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function _decrease_digit
  8346  066E                     _decrease_digit:
  8347  066E                     i1l2280:	
  8348                           ;incstack = 0
  8349                           ; Regs used in _decrease_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8350                           
  8351                           
  8352                           ;main.c: 337:     if (((void*)0) != gp_selected_digit) {
  8353  066E  0020               	movlb	0	; select bank0
  8354  066F  0852               	movf	_gp_selected_digit,w
  8355  0670  1903               	btfsc	3,2
  8356  0671  2E73               	goto	u113_21
  8357  0672  2E74               	goto	u113_20
  8358  0673                     u113_21:
  8359  0673  2E98               	goto	i1l517
  8360  0674                     u113_20:
  8361  0674                     i1l2282:
  8362                           
  8363                           ;main.c: 339:         if (0 == gp_selected_digit->value) {
  8364  0674  0A52               	incf	_gp_selected_digit,w
  8365  0675  0086               	movwf	6
  8366  0676  0187               	clrf	7
  8367  0677  0801               	movf	1,w
  8368  0678  1D03               	btfss	3,2
  8369  0679  2E7B               	goto	u114_21
  8370  067A  2E7C               	goto	u114_20
  8371  067B                     u114_21:
  8372  067B  2E84               	goto	i1l2286
  8373  067C                     u114_20:
  8374  067C                     i1l2284:
  8375                           
  8376                           ;main.c: 341:             gp_selected_digit->value = 9;
  8377  067C  3009               	movlw	9
  8378  067D  00F0               	movwf	??_decrease_digit
  8379  067E  0A52               	incf	_gp_selected_digit,w
  8380  067F  0086               	movwf	6
  8381  0680  0187               	clrf	7
  8382  0681  0870               	movf	??_decrease_digit,w
  8383  0682  0081               	movwf	1
  8384                           
  8385                           ;main.c: 342:         } else {
  8386  0683  2E89               	goto	i1l516
  8387  0684                     i1l2286:
  8388                           
  8389                           ;main.c: 344:             gp_selected_digit->value--;
  8390  0684  0A52               	incf	_gp_selected_digit,w
  8391  0685  0086               	movwf	6
  8392  0686  0187               	clrf	7
  8393  0687  3001               	movlw	1
  8394  0688  0281               	subwf	1,f
  8395  0689                     i1l516:	
  8396                           ;main.c: 345:         }
  8397                           
  8398                           
  8399                           ;main.c: 347:         gp_selected_digit->seven_segment_maping =
  8400  0689  0A52               	incf	_gp_selected_digit,w
  8401  068A  0086               	movwf	6
  8402  068B  0187               	clrf	7
  8403  068C  0801               	movf	1,w
  8404  068D  3E20               	addlw	(low (_g_7seg_table| 0))& (0+255)
  8405  068E  0086               	movwf	6
  8406  068F  0187               	clrf	7
  8407  0690  0801               	movf	1,w
  8408  0691  00F0               	movwf	??_decrease_digit
  8409  0692  0852               	movf	_gp_selected_digit,w
  8410  0693  3E02               	addlw	2
  8411  0694  0086               	movwf	6
  8412  0695  0187               	clrf	7
  8413  0696  0870               	movf	??_decrease_digit,w
  8414  0697  0081               	movwf	1
  8415  0698                     i1l517:
  8416  0698  0008               	return
  8417  0699                     __end_of_decrease_digit:
  8418                           
  8419                           	psect	text61
  8420  0F5D                     __ptext61:	
  8421 ;; *************** function _TMR2_ISR *****************
  8422 ;; Defined at:
  8423 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8441 ;;Total ram usage:        0 bytes
  8442 ;; Hardware stack levels used: 1
  8443 ;; Hardware stack levels required when called: 1
  8444 ;; This function calls:
  8445 ;;		Absolute function
  8446 ;;		_TMR2_DefaultInterruptHandler
  8447 ;;		_display_refresh
  8448 ;; This function is called by:
  8449 ;;		_INTERRUPT_InterruptManager
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           
  8454                           ;psect for function _TMR2_ISR
  8455  0F5D                     _TMR2_ISR:
  8456  0F5D                     i1l2766:	
  8457                           ;incstack = 0
  8458                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8459                           
  8460                           
  8461                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  8462  0F5D  0020               	movlb	0	; select bank0
  8463  0F5E  1091               	bcf	17,1	;volatile
  8464  0F5F                     i1l2768:
  8465                           
  8466                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  8467  0F5F  0021               	movlb	1	; select bank1
  8468  0F60  0824               	movf	_TMR2_InterruptHandler^(0+128),w
  8469  0F61  0425               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  8470  0F62  1903               	btfsc	3,2
  8471  0F63  2F65               	goto	u170_21
  8472  0F64  2F66               	goto	u170_20
  8473  0F65                     u170_21:
  8474  0F65  2F6B               	goto	i1l290
  8475  0F66                     u170_20:
  8476  0F66                     i1l2770:
  8477                           
  8478                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  8479  0F66  0825               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  8480  0F67  008A               	movwf	10
  8481  0F68  0824               	movf	_TMR2_InterruptHandler^(0+128),w
  8482  0F69  000A               	callw
  8483  0F6A  318F               	pagesel	$
  8484  0F6B                     i1l290:
  8485  0F6B  0008               	return
  8486  0F6C                     __end_of_TMR2_ISR:
  8487                           
  8488                           	psect	text62
  8489  0EA4                     __ptext62:	
  8490 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  8491 ;; Defined at:
  8492 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;		None
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		None
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;Total ram usage:        0 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		_TMR2_Initialize
  8516 ;;		_TMR2_ISR
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           
  8521                           ;psect for function _TMR2_DefaultInterruptHandler
  8522  0EA4                     _TMR2_DefaultInterruptHandler:
  8523  0EA4                     i1l296:	
  8524                           ;incstack = 0
  8525                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  8526                           
  8527  0EA4  0008               	return
  8528  0EA5                     __end_of_TMR2_DefaultInterruptHandler:
  8529                           
  8530                           	psect	text63
  8531  046C                     __ptext63:	
  8532 ;; *************** function _display_refresh *****************
  8533 ;; Defined at:
  8534 ;;		line 371 in file "main.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;Total ram usage:        2 bytes
  8553 ;; Hardware stack levels used: 1
  8554 ;; This function calls:
  8555 ;;		Nothing
  8556 ;; This function is called by:
  8557 ;;		_main
  8558 ;;		_TMR2_ISR
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           
  8563                           ;psect for function _display_refresh
  8564  046C                     _display_refresh:
  8565  046C                     i1l2606:	
  8566                           ;incstack = 0
  8567                           ; Regs used in _display_refresh: [wreg-fsr0h+status,2+status,0]
  8568                           
  8569                           
  8570                           ;main.c: 373:     static digit_position_t pos = position_yekan;;main.c: 375:     switch 
      +                          (pos) {
  8571  046C  2C9E               	goto	i1l2624
  8572  046D                     i1l524:	
  8573                           ;main.c: 379:             do { LATBbits.LATB6 = 0; } while(0);
  8574                           
  8575  046D  0022               	movlb	2	; select bank2
  8576  046E  130D               	bcf	13,6	;volatile
  8577  046F                     i1l525:
  8578                           
  8579                           ;main.c: 381:             if (1 == g_yekan.show) {
  8580  046F  0020               	movlb	0	; select bank0
  8581  0470  1C3C               	btfss	_g_yekan+3,0
  8582  0471  2C73               	goto	u149_21
  8583  0472  2C74               	goto	u149_20
  8584  0473                     u149_21:
  8585  0473  2C78               	goto	i1l526
  8586  0474                     u149_20:
  8587  0474                     i1l2608:
  8588                           
  8589                           ;main.c: 383:                 LATC = g_yekan.seven_segment_maping;
  8590  0474  083B               	movf	_g_yekan+2,w
  8591  0475  0022               	movlb	2	; select bank2
  8592  0476  008E               	movwf	14	;volatile
  8593  0477                     i1l2610:
  8594  0477  160D               	bsf	13,4	;volatile
  8595  0478                     i1l526:	
  8596                           ;main.c: 385:             }
  8597                           
  8598                           
  8599                           ;main.c: 387:             pos = position_dahegan;
  8600  0478  300A               	movlw	10
  8601  0479  00F0               	movwf	??_display_refresh
  8602  047A  0870               	movf	??_display_refresh,w
  8603  047B  0020               	movlb	0	; select bank0
  8604  047C  00B0               	movwf	display_refresh@pos
  8605                           
  8606                           ;main.c: 388:             break;
  8607  047D  2CB2               	goto	i1l543
  8608  047E                     i1l531:	
  8609                           ;main.c: 391:             do { LATBbits.LATB4 = 0; } while(0);
  8610                           
  8611  047E  0022               	movlb	2	; select bank2
  8612  047F  120D               	bcf	13,4	;volatile
  8613  0480                     i1l532:
  8614                           
  8615                           ;main.c: 393:             if (1 == g_dahegan.show) {
  8616  0480  0020               	movlb	0	; select bank0
  8617  0481  1C38               	btfss	_g_dahegan+3,0
  8618  0482  2C84               	goto	u150_21
  8619  0483  2C85               	goto	u150_20
  8620  0484                     u150_21:
  8621  0484  2C89               	goto	i1l533
  8622  0485                     u150_20:
  8623  0485                     i1l2612:
  8624                           
  8625                           ;main.c: 395:                 LATC = g_dahegan.seven_segment_maping;
  8626  0485  0837               	movf	_g_dahegan+2,w
  8627  0486  0022               	movlb	2	; select bank2
  8628  0487  008E               	movwf	14	;volatile
  8629  0488                     i1l2614:
  8630  0488  140C               	bsf	12,0	;volatile
  8631  0489                     i1l533:	
  8632                           ;main.c: 397:             }
  8633                           
  8634                           
  8635                           ;main.c: 399:             pos = position_sadegan;
  8636  0489  3064               	movlw	100
  8637  048A  00F0               	movwf	??_display_refresh
  8638  048B  0870               	movf	??_display_refresh,w
  8639  048C  0020               	movlb	0	; select bank0
  8640  048D  00B0               	movwf	display_refresh@pos
  8641                           
  8642                           ;main.c: 400:             break;
  8643  048E  2CB2               	goto	i1l543
  8644  048F                     i1l537:	
  8645                           ;main.c: 403:             do { LATAbits.LATA0 = 0; } while(0);
  8646                           
  8647  048F  0022               	movlb	2	; select bank2
  8648  0490  100C               	bcf	12,0	;volatile
  8649  0491                     i1l538:
  8650                           
  8651                           ;main.c: 405:             if (1 == g_sadegan.show) {
  8652  0491  0020               	movlb	0	; select bank0
  8653  0492  1C34               	btfss	_g_sadegan+3,0
  8654  0493  2C95               	goto	u151_21
  8655  0494  2C96               	goto	u151_20
  8656  0495                     u151_21:
  8657  0495  2C9A               	goto	i1l2620
  8658  0496                     u151_20:
  8659  0496                     i1l2616:
  8660                           
  8661                           ;main.c: 407:                 LATC = g_sadegan.seven_segment_maping;
  8662  0496  0833               	movf	_g_sadegan+2,w
  8663  0497  0022               	movlb	2	; select bank2
  8664  0498  008E               	movwf	14	;volatile
  8665  0499                     i1l2618:
  8666  0499  170D               	bsf	13,6	;volatile
  8667  049A                     i1l2620:
  8668                           
  8669                           ;main.c: 411:             pos = position_yekan;
  8670  049A  0020               	movlb	0	; select bank0
  8671  049B  01B0               	clrf	display_refresh@pos
  8672  049C  0AB0               	incf	display_refresh@pos,f
  8673                           
  8674                           ;main.c: 412:             break;
  8675  049D  2CB2               	goto	i1l543
  8676  049E                     i1l2624:
  8677  049E  0020               	movlb	0	; select bank0
  8678  049F  0830               	movf	display_refresh@pos,w
  8679  04A0  00F0               	movwf	??_display_refresh
  8680  04A1  01F1               	clrf	??_display_refresh+1
  8681                           
  8682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8683                           ; Switch size 1, requested type "simple"
  8684                           ; Number of cases is 1, Range of values is 0 to 0
  8685                           ; switch strategies available:
  8686                           ; Name         Instructions Cycles
  8687                           ; simple_byte            4     3 (average)
  8688                           ; direct_byte            8     6 (fixed)
  8689                           ; jumptable            260     6 (fixed)
  8690                           ;	Chosen strategy is simple_byte
  8691  04A2  0871               	movf	??_display_refresh+1,w
  8692  04A3  3A00               	xorlw	0	; case 0
  8693  04A4  1903               	skipnz
  8694  04A5  2CA7               	goto	i1l3270
  8695  04A6  2C9A               	goto	i1l2620
  8696  04A7                     i1l3270:
  8697                           
  8698                           ; Switch size 1, requested type "simple"
  8699                           ; Number of cases is 3, Range of values is 1 to 100
  8700                           ; switch strategies available:
  8701                           ; Name         Instructions Cycles
  8702                           ; simple_byte           10     6 (average)
  8703                           ; direct_byte          209     9 (fixed)
  8704                           ; jumptable            263     9 (fixed)
  8705                           ;	Chosen strategy is simple_byte
  8706  04A7  0870               	movf	??_display_refresh,w
  8707  04A8  3A01               	xorlw	1	; case 1
  8708  04A9  1903               	skipnz
  8709  04AA  2C6D               	goto	i1l524
  8710  04AB  3A0B               	xorlw	11	; case 10
  8711  04AC  1903               	skipnz
  8712  04AD  2C7E               	goto	i1l531
  8713  04AE  3A6E               	xorlw	110	; case 100
  8714  04AF  1903               	skipnz
  8715  04B0  2C8F               	goto	i1l537
  8716  04B1  2C9A               	goto	i1l2620
  8717  04B2                     i1l543:
  8718  04B2  0008               	return
  8719  04B3                     __end_of_display_refresh:
  8720                           
  8721                           	psect	text64
  8722  07BA                     __ptext64:	
  8723 ;; *************** function _TMR1_ISR *****************
  8724 ;; Defined at:
  8725 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;		None
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;		None
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  1    wreg      void 
  8732 ;; Registers used:
  8733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;Total ram usage:        0 bytes
  8744 ;; Hardware stack levels used: 1
  8745 ;; Hardware stack levels required when called: 1
  8746 ;; This function calls:
  8747 ;;		Absolute function
  8748 ;;		_TMR1_DefaultInterruptHandler
  8749 ;;		_TMR1_WriteTimer
  8750 ;;		_blink_digit
  8751 ;; This function is called by:
  8752 ;;		_INTERRUPT_InterruptManager
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           
  8757                           ;psect for function _TMR1_ISR
  8758  07BA                     _TMR1_ISR:
  8759  07BA                     i1l2772:	
  8760                           ;incstack = 0
  8761                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8762                           
  8763                           
  8764                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  8765  07BA  0020               	movlb	0	; select bank0
  8766  07BB  1011               	bcf	17,0	;volatile
  8767  07BC                     i1l2774:
  8768                           
  8769                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  8770  07BC  086B               	movf	_timer1ReloadVal+1,w	;volatile
  8771  07BD  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  8772  07BE  086A               	movf	_timer1ReloadVal,w	;volatile
  8773  07BF  00F0               	movwf	TMR1_WriteTimer@timerVal
  8774  07C0  318F  27B7  3187   	fcall	_TMR1_WriteTimer
  8775  07C3                     i1l2776:
  8776                           
  8777                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  8778  07C3  0021               	movlb	1	; select bank1
  8779  07C4  0826               	movf	_TMR1_InterruptHandler^(0+128),w
  8780  07C5  0427               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  8781  07C6  1903               	btfsc	3,2
  8782  07C7  2FC9               	goto	u171_21
  8783  07C8  2FCA               	goto	u171_20
  8784  07C9                     u171_21:
  8785  07C9  2FCF               	goto	i1l244
  8786  07CA                     u171_20:
  8787  07CA                     i1l2778:
  8788                           
  8789                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  8790  07CA  0827               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  8791  07CB  008A               	movwf	10
  8792  07CC  0826               	movf	_TMR1_InterruptHandler^(0+128),w
  8793  07CD  000A               	callw
  8794  07CE  3187               	pagesel	$
  8795  07CF                     i1l244:
  8796  07CF  0008               	return
  8797  07D0                     __end_of_TMR1_ISR:
  8798                           
  8799                           	psect	text65
  8800  0EA3                     __ptext65:	
  8801 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  8802 ;; Defined at:
  8803 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;		None
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      void 
  8810 ;; Registers used:
  8811 ;;		None
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;Total ram usage:        0 bytes
  8822 ;; Hardware stack levels used: 1
  8823 ;; This function calls:
  8824 ;;		Nothing
  8825 ;; This function is called by:
  8826 ;;		_TMR1_Initialize
  8827 ;;		_TMR1_ISR
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           
  8832                           ;psect for function _TMR1_DefaultInterruptHandler
  8833  0EA3                     _TMR1_DefaultInterruptHandler:
  8834  0EA3                     i1l250:	
  8835                           ;incstack = 0
  8836                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  8837                           
  8838  0EA3  0008               	return
  8839  0EA4                     __end_of_TMR1_DefaultInterruptHandler:
  8840                           
  8841                           	psect	text66
  8842  0733                     __ptext66:	
  8843 ;; *************** function _blink_digit *****************
  8844 ;; Defined at:
  8845 ;;		line 438 in file "main.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;		None
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      void 
  8852 ;; Registers used:
  8853 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;Total ram usage:        1 bytes
  8864 ;; Hardware stack levels used: 1
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_main
  8869 ;;		_TMR1_ISR
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           
  8874                           ;psect for function _blink_digit
  8875  0733                     _blink_digit:
  8876  0733                     i1l2630:	
  8877                           ;incstack = 0
  8878                           ; Regs used in _blink_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8879                           
  8880                           
  8881                           ;main.c: 440:     static uint8_t blink_counter;;main.c: 442:     blink_counter++;
  8882  0733  3001               	movlw	1
  8883  0734  00F0               	movwf	??_blink_digit
  8884  0735  0870               	movf	??_blink_digit,w
  8885  0736  0020               	movlb	0	; select bank0
  8886  0737  07D1               	addwf	blink_digit@blink_counter,f
  8887                           
  8888                           ;main.c: 444:     if (8 == blink_counter) {
  8889  0738  3008               	movlw	8
  8890  0739  0651               	xorwf	blink_digit@blink_counter,w
  8891  073A  1D03               	btfss	3,2
  8892  073B  2F3D               	goto	u152_21
  8893  073C  2F3E               	goto	u152_20
  8894  073D                     u152_21:
  8895  073D  2F52               	goto	i1l550
  8896  073E                     u152_20:
  8897  073E                     i1l2632:
  8898                           
  8899                           ;main.c: 446:         if (((void*)0) != gp_selected_digit) {
  8900  073E  0852               	movf	_gp_selected_digit,w
  8901  073F  1903               	btfsc	3,2
  8902  0740  2F42               	goto	u153_21
  8903  0741  2F43               	goto	u153_20
  8904  0742                     u153_21:
  8905  0742  2F51               	goto	i1l2636
  8906  0743                     u153_20:
  8907  0743                     i1l2634:
  8908                           
  8909                           ;main.c: 448:             gp_selected_digit->show ^= 1;
  8910  0743  0852               	movf	_gp_selected_digit,w
  8911  0744  3E03               	addlw	3
  8912  0745  0086               	movwf	6
  8913  0746  0187               	clrf	7
  8914  0747  0801               	movf	1,w
  8915  0748  3901               	andlw	1
  8916  0749  00F0               	movwf	??_blink_digit
  8917  074A  3001               	movlw	1
  8918  074B  06F0               	xorwf	??_blink_digit,f
  8919  074C  0801               	movf	1,w
  8920  074D  0670               	xorwf	??_blink_digit,w
  8921  074E  39FE               	andlw	-2
  8922  074F  0670               	xorwf	??_blink_digit,w
  8923  0750  0081               	movwf	1
  8924  0751                     i1l2636:
  8925                           
  8926                           ;main.c: 459:         blink_counter = 0;
  8927  0751  01D1               	clrf	blink_digit@blink_counter
  8928  0752                     i1l550:
  8929  0752  0008               	return
  8930  0753                     __end_of_blink_digit:
  8931                           
  8932                           	psect	text67
  8933  0FB7                     __ptext67:	
  8934 ;; *************** function _TMR1_WriteTimer *****************
  8935 ;; Defined at:
  8936 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  timerVal        2    0[COMMON] unsigned short 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  1    wreg      void 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;Total ram usage:        2 bytes
  8955 ;; Hardware stack levels used: 1
  8956 ;; This function calls:
  8957 ;;		Nothing
  8958 ;; This function is called by:
  8959 ;;		_TMR1_ISR
  8960 ;;		_TMR1_Reload
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           
  8965                           ;psect for function _TMR1_WriteTimer
  8966  0FB7                     _TMR1_WriteTimer:
  8967  0FB7                     i1l2542:	
  8968                           ;incstack = 0
  8969                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  8970                           
  8971                           
  8972                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  8973  0FB7  0020               	movlb	0	; select bank0
  8974  0FB8  1D18               	btfss	24,2	;volatile
  8975  0FB9  2FBB               	goto	u145_21
  8976  0FBA  2FBC               	goto	u145_20
  8977  0FBB                     u145_21:
  8978  0FBB  2FC3               	goto	i1l2552
  8979  0FBC                     u145_20:
  8980  0FBC                     i1l2544:
  8981                           
  8982                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  8983  0FBC  1018               	bcf	24,0	;volatile
  8984  0FBD                     i1l2546:
  8985                           
  8986                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  8987  0FBD  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  8988  0FBE  0097               	movwf	23	;volatile
  8989  0FBF                     i1l2548:
  8990                           
  8991                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  8992  0FBF  0870               	movf	TMR1_WriteTimer@timerVal,w
  8993  0FC0  0096               	movwf	22	;volatile
  8994  0FC1                     i1l2550:
  8995                           
  8996                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  8997  0FC1  1418               	bsf	24,0	;volatile
  8998                           
  8999                           ;mcc_generated_files/tmr1.c: 133:     }
  9000  0FC2  2FC7               	goto	i1l231
  9001  0FC3                     i1l2552:
  9002                           
  9003                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9004  0FC3  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9005  0FC4  0097               	movwf	23	;volatile
  9006  0FC5                     i1l2554:
  9007                           
  9008                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  9009  0FC5  0870               	movf	TMR1_WriteTimer@timerVal,w
  9010  0FC6  0096               	movwf	22	;volatile
  9011  0FC7                     i1l231:
  9012  0FC7  0008               	return
  9013  0FC8                     __end_of_TMR1_WriteTimer:
  9014  007E                     btemp	set	126	;btemp
  9015  007E                     int$flags	set	126
  9016  007E                     wtemp0	set	126
  9017                           
  9018                           	psect	config
  9019                           
  9020                           ;Config register CONFIG1 @ 0x8007
  9021                           ;	Oscillator Selection
  9022                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9023                           ;	Watchdog Timer Enable
  9024                           ;	WDTE = OFF, WDT disabled
  9025                           ;	Power-up Timer Enable
  9026                           ;	PWRTE = OFF, PWRT disabled
  9027                           ;	MCLR Pin Function Select
  9028                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9029                           ;	Flash Program Memory Code Protection
  9030                           ;	CP = OFF, Program memory code protection is disabled
  9031                           ;	Data Memory Code Protection
  9032                           ;	CPD = OFF, Data memory code protection is disabled
  9033                           ;	Brown-out Reset Enable
  9034                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
  9035                           ;	Clock Out Enable
  9036                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9037                           ;	Internal/External Switchover
  9038                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9039                           ;	Fail-Safe Clock Monitor Enable
  9040                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9041  8007                     	org	32775
  9042  8007  3DE4               	dw	15844
  9043                           
  9044                           ;Config register CONFIG2 @ 0x8008
  9045                           ;	Flash Memory Self-Write Protection
  9046                           ;	WRT = OFF, Write protection off
  9047                           ;	PLL Enable
  9048                           ;	PLLEN = OFF, 4x PLL disabled
  9049                           ;	Stack Overflow/Underflow Reset Enable
  9050                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9051                           ;	Brown-out Reset Voltage Selection
  9052                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9053                           ;	Low-Voltage Programming Enable
  9054                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  9055  8008                     	org	32776
  9056  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         34
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     21      76
    BANK1            80     10      24
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __itoee@addr	PTR eeprom void  size(1) Largest target is 8
		 -> ge_time_ms(EEDATA[2]), ge_memory_mass(EEDATA[8]), 

    __eetoi@addr	PTR eeprom void  size(1) Largest target is 8
		 -> ge_time_ms(EEDATA[2]), ge_memory_mass(EEDATA[8]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 8
		 -> ge_time_ms(EEDATA[2]), ge_memory_mass(EEDATA[8]), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(BANK0[2]), __ctoee@data(COMMON[1]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(BANK0[2]), __ctoee@data(COMMON[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 8
		 -> ge_time_ms(EEDATA[2]), ge_memory_mass(EEDATA[8]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    end_select_digit@buffer	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), g_sadegan(BANK0[4]), g_dahegan(BANK0[4]), g_yekan(BANK0[4]), 

    gp_selected_digit	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), g_sadegan(BANK0[4]), g_dahegan(BANK0[4]), g_yekan(BANK0[4]), 

    select_digit@buffer	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), g_sadegan(BANK0[4]), g_dahegan(BANK0[4]), g_yekan(BANK0[4]), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> increase_num_automatic(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> increase_num_automatic(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> decrease_num(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> decrease_num(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> display_refresh(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> display_refresh(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blink_digit(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blink_digit(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _increase_num_automatic->i1_set_display_value
    _TX_Command->_EUSART_Write
    _TX_Command->_EUSART_is_tx_ready
    _decrease_num->i1_set_display_value
    i1_set_display_value->i1___lwdiv
    _TMR2_ISR->_display_refresh
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_handle_received_commands
    _init_digit->___eetoi
    ___eetoi->___eecpymem
    _handle_received_commands->_set_display_value
    _set_display_value->___lwdiv
    _get_display_value->___wmul
    ___itoee->___memcpyee
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR6_ISR->_increase_num_automatic
    _increase_num_automatic->i1_set_display_value
    _TMR4_ISR->_decrease_num
    _decrease_num->i1_set_display_value

Critical Paths under _main in BANK1

    _handle_received_commands->_get_display_value

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8112
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
           _TMR4_SetInterruptHandler
           _TMR6_SetInterruptHandler
           _handle_received_commands
                         _init_digit
 ---------------------------------------------------------------------------------
 (1) _init_digit                                           2     2      0    1420
                                             17 BANK0      2     2      0
                     _TMR2_StopTimer
                            ___eetoi
 ---------------------------------------------------------------------------------
 (2) ___eetoi                                              7     5      2    1330
                                             10 BANK0      7     5      2
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (3) ___eecpymem                                           6     4      2    1229
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _handle_received_commands                             2     2      0    5006
                                             19 BANK0      2     2      0
                 _EUSART_is_rx_ready
                         _RX_Command
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                    _TMR4_StartTimer
                     _TMR4_StopTimer
                    _TMR6_StartTimer
                     _TMR6_StopTimer
                            ___itoee
                            ___lwdiv
                   _end_select_digit
                  _get_display_value
                     _increase_digit
                       _select_digit
                  _set_display_value
           _set_display_value_manual
 ---------------------------------------------------------------------------------
 (2) _set_display_value_manual                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_display_value                                    7     5      2    2151
                                             12 BANK0      7     5      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              4 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _select_digit                                         3     3      0      67
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _increase_digit                                       1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_display_value                                   12    10      2     396
                                             10 BANK0      2     0      2
                                              0 BANK1     10    10      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _end_select_digit                                     2     2      0      23
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___itoee                                              5     3      2    1576
                                             10 BANK0      5     3      2
                         ___memcpyee
 ---------------------------------------------------------------------------------
 (3) ___memcpyee                                           6     4      2    1229
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RX_Command                                           2     2      0      23
                                              4 BANK0      2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     990
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1918
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0     873
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _increase_num_automatic *
 ---------------------------------------------------------------------------------
 (6) _increase_num_automatic                               2     2      0     873
                                              2 BANK0      2     2      0
                         _TX_Command
                   i1_TMR6_StopTimer
                 i1_end_select_digit
                   i1_increase_digit
                     i1_select_digit
                i1_set_display_value
         i1_set_display_value_manual
 ---------------------------------------------------------------------------------
 (7) i1_set_display_value_manual                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_increase_digit                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_TMR6_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TX_Command                                           1     1      0      68
                                              1 COMMON     1     1      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (8) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0     805
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                       _decrease_num *
 ---------------------------------------------------------------------------------
 (6) _decrease_num                                         2     2      0     805
                                              2 BANK0      2     2      0
                     _decrease_digit
                   i1_TMR4_StopTimer
                 i1_end_select_digit
                     i1_select_digit
                i1_set_display_value
 ---------------------------------------------------------------------------------
 (7) i1_set_display_value                                  7     5      2     715
                                              8 COMMON     5     3      2
                                              0 BANK0      2     2      0
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (8) i1___lwmod                                            6     2      4     263
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1_select_digit                                       3     3      0      67
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) i1_end_select_digit                                   2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) i1_TMR4_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _decrease_digit                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                    _display_refresh *
 ---------------------------------------------------------------------------------
 (6) _display_refresh                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                        _blink_digit *
 ---------------------------------------------------------------------------------
 (6) _blink_digit                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _handle_received_commands
     _EUSART_is_rx_ready
     _RX_Command
       _EUSART_Read
       _EUSART_is_rx_ready
     _TMR2_StartTimer
     _TMR2_StopTimer
     _TMR4_StartTimer
     _TMR4_StopTimer
     _TMR6_StartTimer
     _TMR6_StopTimer
     ___itoee
       ___memcpyee
     ___lwdiv
     _end_select_digit
     _get_display_value
       ___wmul
     _increase_digit
     _select_digit
     _set_display_value
       ___lwdiv
       ___lwmod
     _set_display_value_manual
   _init_digit
     _TMR2_StopTimer
     ___eetoi
       ___eecpymem

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _blink_digit *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _display_refresh *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _decrease_num *
       _decrease_digit
       i1_TMR4_StopTimer
       i1_end_select_digit
       i1_select_digit
       i1_set_display_value
         i1___lwdiv
         i1___lwmod
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _increase_num_automatic *
       _TX_Command
         _EUSART_Write
         _EUSART_is_tx_ready
       i1_TMR6_StopTimer
       i1_end_select_digit
       i1_increase_digit
       i1_select_digit
       i1_set_display_value
       i1_set_display_value_manual

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       A       0        3.9%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      18       7       30.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      72      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      72      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec  8 12:15:39 2021

             __end_of_TMR2_SetInterruptHandler 0EFF                           ??i1_end_select_digit 0070  
                                           l30 07FE                                             l33 0EC0  
                                           l27 0788                                             l66 07A1  
                     __end_of_end_select_digit 0F33                              ??_TMR6_StartTimer 0059  
                              ?i1_select_digit 0070                         _g_current_num_on_7segs 004B  
                          ___wmul@multiplicand 005B                               ??_TMR6_StopTimer 0059  
                                          l112 0712                                            l120 0EC5  
                                          l133 0FA7                                            l151 0EE3  
                                          l320 0EB3                                            l217 07B9  
                                          l129 0F99                                            l154 0EEC  
                                          l323 0EB6                                            l157 0EDA  
                                          l317 0FFF                                            l247 0EF5  
                                          l271 0FEB                                            l511 06C2  
                                          l503 059F                                            l274 0EAD  
                                          l506 0F32                                            l339 0F07  
                                          l363 07F7                                            l604 01BB  
                                          l293 0EFE                                            l277 0EB0  
                                          l366 0EB9                                            l385 0F10  
                                          l369 0EBC                                            l553 0421  
                                          l634 0F5C                                            l651 04B9  
                                          l660 04EF                                            l565 0FD8  
                                          l557 022E                                            l493 046B  
                                          l671 03BF                                            l663 0387  
                                          l656 04CA                                            l680 07E3  
                                          l674 03D6                                            l668 03A2  
                                          l695 0FB6                                            l784 071E  
                                          l786 0732                                            _PR2 001B  
                                          _PR4 0416                                            _PR6 041D  
              __size_of_increase_num_automatic 0072                                _timer1ReloadVal 006A  
               ?_EUSART_SetFramingErrorHandler 0059                                _TMR2_Initialize 0FD9  
                                          wreg 0009                               RX_Command@buffer 005A  
                                 ?_EUSART_Read 0070                                           l1064 052C  
                                         l1074 060B                                           l3100 009B  
                                         l2300 04D6                                           l2310 038C  
                                         l3110 00C5                                           l3102 00A4  
                                         l2302 04DE                                           l2320 03B8  
                                         l2312 039B                                           l3120 00EC  
                                         l3112 00CE                                           l3104 00AC  
                                         l2304 04E2                                           l2250 0EDB  
                                         l2330 03C7                                           l2322 03BA  
                                         l2314 03A7                                           l3130 010D  
                                         l3122 00FD                                           l3114 00DE  
                                         l3106 00B4                                           l2306 04E7  
                                         l2252 0EE4                                           l2500 0FF2  
                                         l2260 0F99                                           l2332 03C8  
                                         l2324 03BE                                           l2316 03AE  
                                         l2308 0383                                           l2340 0716  
                                         l3140 012D                                           l3132 0113  
                                         l3124 0101                                           l3116 00E2  
                                         l3108 00BD                                           l2254 0ED2  
                                         l2510 0FDD                                           l2502 0FF4  
                                         l2262 0F9E                                           l2334 03CD  
                                         l2326 03C2                                           l2318 03B3  
                                         l2342 071A                                           l3150 014B  
                                         l3142 0131                                           l3134 0117  
                                         l3118 00E6                                           l2272 0EED  
                                         l2520 07A4                                           l2512 0FDE  
                                         l2504 0FFC                                           l2264 0F9F  
                                         l2256 0EC1                                           l2328 03C6  
                                         l2336 03CE                                           l2344 0723  
                                         l3072 03D7                                           l2600 069F  
                                         l2360 0501                                           l2352 04F0  
                                         l3152 0153                                           l3144 0139  
                                         l3136 011F                                           l3128 0105  
                                         l3080 0072                                           l3160 0169  
                                         l2530 07B6                                           l2522 07A6  
                                         l2274 0EF6                                           l2514 0FE0  
                                         l2506 0FD9                                           l2266 0FA4  
                                         l2346 0728                                           l2338 0713  
                                         l2602 06AF                                           l2370 051D  
                                         l2362 0505                                           l2354 04F3  
                                         l3154 015B                                           l3146 0141  
                                         l3138 0127                                           l3090 0084  
                                         l3082 0076                                           l3170 0646  
                                         l2540 0710                                           l2532 06ED  
                                         l2460 0796                                           l2524 07A7  
                                         l2516 0FE8                                           l2508 0FDC  
                                         l2276 0EFF                                           l2268 0FA6  
                                         l2348 072E                                           l2604 06B3  
                                         l2372 0522                                           l2364 0509  
                                         l2356 04F9                                           l2380 05DE  
                                         l3156 0161                                           l3148 0147  
                                         l3092 0088                                           l3084 007F  
                                         l3076 0062                                           l2292 04B5  
                                         l3180 0660                                           l3172 0647  
                                         l2534 06F8                                           l2470 079E  
                                         l2462 0798                                           l2454 0789  
                                         l2526 07AC                                           l2518 07A2  
                                         l2278 0F08                                           l2366 0518  
                                         l2358 04FC                                           l2374 0528  
                                         l2390 05F8                                           l2382 05E1  
                                         l3094 008C                                           l3086 0081  
                                         l3078 006A                                           l2294 04BE  
                                         l3182 0668                                           l3174 0648  
                                         l3166 0640                                           l2536 0700  
                                         l2472 07A0                                           l2464 079A  
                                         l2456 078D                                           l2528 07AE  
                                         l2480 0EBD                                           l2560 0EB1  
                                         l2368 051C                                           l2392 05FC  
                                         l2384 05E6                                           l3264 0171  
                                         l3096 0090                                           l3088 0082  
                                         l2296 04CF                                           l2800 0449  
                                         l3176 0650                                           l3168 0643  
                                         l2538 0708                                           l2474 07F8  
                                         l2466 079B                                           l2458 0790  
                                         l2490 07EC                                           l2482 07E4  
                                         l2562 0EB4                                           l3266 0594  
                                         l2570 056E                                           l2394 0601  
                                         l2386 05EA                                           l2378 05D7  
                                         l2650 0226                                           l2642 01BC  
                                         l3098 0094                                           l2298 04D5  
                                         l2810 0458                                           l2802 044C  
                                         l3178 0658                                           l2476 07FB  
                                         l2468 079C                                           l2492 07F4  
                                         l2484 07E7                                           l2652 0FC8  
                                         l2556 0EAB                                           l2564 0EB7  
                                         l2580 0584                                           l2572 056F  
                                         l2388 05EE                                           l2396 0607  
                                         l2644 01CA                                           l2660 0F4F  
                                         l2812 0460                                           l2804 044E  
                                         l2478 07FC                                           l2494 0FEC  
                                         l2486 07E8                                           l2654 0FD0  
                                         l2558 0EAE                                           l2566 0EBA  
                                         l2574 0574                                           l2646 0216  
                                         l2742 07D2                                           l2814 0461  
                                         l2806 0456                                           l2496 0FEF  
                                         l2488 07EA                                           l2752 0770  
                                         l2656 0FD7                                           l2592 0F27  
                                         l2576 0579                                           l2568 0569  
                                         l2648 021E                                           l2744 07DE  
                                         l2816 0462                                           l2808 0457  
                                         l2498 0FF0                                           l2594 0F2C  
                                         l2578 057F                                           l2586 0589  
                                         l2818 046A                                           l2748 0FAA  
                                         l2596 0F2D                                           l2780 0422  
                                         l2598 0699                                           l2790 0436  
                                         l2792 043C                                           l2794 0445  
                                         l2786 0424                                           l2796 0447  
                                         l2788 0432                                           l2798 0448  
                         __end_of_decrease_num 0381                                           u1110 0F9E  
                                         u1111 0F9D                                           u1120 0FA4  
                                         u1200 03A7                                           u1121 0FA3  
                                         u1201 03A6                                           u1210 03BE  
                                         u1211 03BD                                           u1220 03CD  
                                         u1300 0509                                           u1221 03CC  
                                         u1301 0508                                           u1230 03D6  
                                         u1231 03D5                                           u1240 071A  
                                         u1320 0518                                           u1400 0607  
                                         u1160 04BE                                           u1241 0719  
                                         u1321 0517                                           u1401 0606  
                                         u1161 04BD                                           u1170 04CF  
                                         u1315 050A                                           u1171 04CE  
                                         u1340 0528                                           u1180 04EF  
                                         u1341 0527                                           u1325 0514  
                                         u1181 04EE                                           _LATA 010C  
                                         u1190 038C                                           u1270 072E  
                                         u1350 05DE                                           _LATB 010D  
                                         u1191 038B                                           u1271 072D  
                                         u1255 071F                                           u1335 051E  
                                         u1351 05DD                                           _LATC 010E  
                                         u1280 04F9                                           u1265 0724  
                                         u1281 04F8                                           u1370 05EE  
                                         u1371 05ED                                           u1460 0574  
                                         u1380 05F8                                           u1540 01CA  
                                         u1461 0573                                           u1381 05F7  
                                         u1365 05E2                                           u1541 01C9  
                                         u1550 0FD0                                           u1470 069F  
                                         u1551 0FCF                                           u1471 069E  
                                         u1295 04FD                                           u1480 06AF  
                                         u1720 043C                                           u1481 06AE  
                                         u1385 05F4                                           u1721 043B  
                                         u1395 05FD                                           u1890 006A  
                                         u1891 0069                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                        __end_of_display_refresh 04B3  
                                         _main 0640                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0044                                     _RX_Command 0FC8  
                   ??_TMR1_SetInterruptHandler 005B                     ??_TMR4_SetInterruptHandler 005B  
                                 ___itoee@addr 0063                                   ___itoee@data 005F  
                                   _TX_Command 0F33                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 07FF  
                                        ?_main 0070                                __end_of___eetoi 07E4  
                                        _EEADR 0191                                          _T1CON 0018  
                              __end_of___itoee 0FB7                                          _T2CON 001C  
                                        _T4CON 0417                                          _T6CON 041E  
                              __end_of___lwdiv 052D                                          i1l117 0F89  
                                        i1l231 0FC7                                          i1l136 0F12  
                                        i1l250 0EA3                                          i1l323 0EA7  
                                        i1l139 0F1A                                          i1l244 07CF  
                                        i1l181 0018                                          i1l342 0002  
                                        i1l190 0042                                          i1l503 05D6  
                                        i1l511 06EC                                          i1l183 0026  
                                        i1l336 0F7A                                          i1l184 0042  
                                        i1l185 0034                                __end_of___lwmod 060C  
                                        i1l290 0F6B                                          i1l506 0F26  
                                        i1l531 047E                                          i1l532 0480  
                                        i1l524 046D                                          i1l516 0689  
                                        i1l533 0489                                          i1l525 046F  
                                        i1l517 0698                                          i1l613 0380  
                                        i1l550 0752                                          i1l526 0478  
                                        i1l622 0313                                          i1l382 0F98  
                                        i1l543 04B2                                          i1l296 0EA4  
                                        i1l537 048F                                          i1l561 0F40  
                                        i1l369 0EAA                                          i1l538 0491  
                                        i1l634 0F4E                                          i1l388 0003  
                                        i1l557 02A1                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        u95_20 0F81                                          u95_21 0F80  
                                        u96_20 0F86                                          u96_21 0F85  
                                        u97_20 0F17                                          u97_21 0F16  
                                        _TXREG 019A                                          u98_20 0535  
                                        u98_21 0534                                          u99_25 0539  
                                        _TXSTA 019E                                _TMR4_Initialize 0FEC  
            __size_of_TMR6_SetInterruptHandler 0009                      ?_TMR6_SetInterruptHandler 0059  
                             __end_of_TMR1_ISR 07D0                               __end_of_TMR2_ISR 0F6C  
                           i1___lwmod@dividend 0072                               __end_of_TMR4_ISR 0F7B  
                             __end_of_TMR6_ISR 0F99                                 _WDT_Initialize 0EBD  
               handle_received_commands@rxData 0050                               _g_increase_delay 002C  
                               _decrease_digit 066E                        __end_of_TMR1_Initialize 07BA  
                                        pclath 000A                                  ___memcpyee@to 005E  
                                        status 0003                                          wtemp0 007E  
                       _increase_num_automatic 02A2                                _TMR2_StartTimer 0EAB  
                              _TMR1_WriteTimer 0FB7                             __size_ofi1___lwdiv 003C  
                           __size_ofi1___lwmod 0034                 ??_TMR6_DefaultInterruptHandler 0070  
                     __end_ofi1_TMR4_StopTimer 0EA8                                __initialization 0046  
                   ??_set_display_value_manual 0059                                   __end_of_main 066E  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 0FEC  
                  ?_INTERRUPT_InterruptManager 0070                       _TMR2_SetInterruptHandler 0EF6  
                                       ??_main 006A                           __size_of_blink_digit 0020  
                       __end_of_WDT_Initialize 0EC1                                _TMR6_Initialize 07E4  
                     __end_ofi1_TMR6_StopTimer 0EAB                         __end_of_decrease_digit 0699  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00AA  
                                       _EEDATA 0193                                         _EECON1 0195  
                                       _EECON2 0196                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                   __end_of_EUSART_is_rx_ready 0EC6                                         _BORCON 0116  
                                       _T1GCON 0019                                         u100_20 0545  
                                       u100_21 0544                                         u101_25 0546  
                                       u102_20 0554                                         u110_20 063B  
                                       u102_21 0553                                         u110_21 063A  
                      TMR1_WriteTimer@timerVal 0070                                         u102_25 0550  
                                       i1l1064 0568                                         i1l2200 0F17  
                                       i1l2210 053D                                         i1l2202 052D  
                                       i1l1074 063F                                         i1l2220 0559  
                                       i1l2212 0541                                         i1l2204 052F  
                                       u103_25 055A                                         i1l2222 055E  
                                       i1l2214 0545                                         i1l2206 0535  
                                       i1l2230 0612                                         i1l2400 0EA5  
                                       u104_20 0564                                         i1l2216 0554  
                                       i1l2208 0538                                         i1l2224 0564  
                                       i1l2240 062C                                         i1l2232 0615  
                                       u104_21 0563                                         i1l2410 05AB  
                                       i1l2218 0558                                         i1l2242 0630  
                                       i1l2234 061A                                         i1l2402 0EA8  
                                       i1l2412 05B0                                         i1l2404 05A0  
                                       i1l2244 0635                                         i1l2236 061E  
                                       i1l2228 060C                                         i1l2430 0F20  
                                       i1l2414 05B6                                         i1l2422 05C0  
                                       i1l2406 05A5                                         i1l2238 0622  
                                       i1l2246 063B                                         i1l2190 0F81  
                                       u113_20 0674                                         i1l2280 066E  
                                       i1l2432 0F21                                         i1l2416 05BB  
                                       i1l2408 05A6                                         u105_20 0612  
                                       i1l2192 0F86                                         i1l2440 06DD  
                                       u113_21 0673                                         u105_21 0611  
                                       i1l2610 0477                                         i1l2282 0674  
                                       i1l2450 0299                                         i1l2442 022F  
                                       i1l2194 0F88                                         i1l2186 0F7B  
                                       i1l2290 0F3C                                         i1l2434 06C3  
                                       i1l2620 049A                                         i1l2612 0485  
                                       i1l2284 067C                                         i1l2428 0F1B  
                                       i1l2444 023D                                         i1l2188 0F7C  
                                       i1l2436 06C9                                         i1l2452 0F41  
                                       i1l2700 02A2                                         i1l2550 0FC1  
                                       i1l2542 0FB7                                         i1l2630 0733  
                                       i1l3270 04A7                                         i1l2614 0488  
                                       i1l2606 046C                                         i1l2286 0684  
                                       i1l2446 0289                                         i1l2198 0F12  
                                       i1l2438 06D9                                         i1l2710 02BD  
                                       i1l2702 02A7                                         i1l2544 0FBC  
                                       i1l2552 0FC3                                         i1l2632 073E  
                                       i1l2616 0496                                         i1l2608 0474  
                                       i1l2624 049E                                         u114_20 067C  
                                       i1l2448 0291                                         i1l2288 0F34  
                                       i1l2720 02DF                                         i1l2712 02C8  
                                       i1l2704 02B4                                         u114_21 067B  
                                       i1l2554 0FC5                                         i1l2546 0FBD  
                                       i1l2634 0743                                         i1l2618 0499  
                                       i1l2730 02FB                                         i1l2722 02E8  
                                       i1l2714 02CE                                         i1l2706 02B7  
                                       i1l2548 0FBF                                         i1l2636 0751  
                                       i1l3268 05CB                                         i1l2732 0301  
                                       i1l2740 0311                                         i1l2724 02EB  
                                       i1l2716 02D1                                         i1l2708 02BA  
                                       u106_25 0616                                         i1l2670 032C  
                                       i1l2662 0314                                         i1l2734 0304  
                                       i1l2718 02D4                                         i1l2726 02EE  
                                       i1l2910 0006                                         u107_20 0622  
                                       i1l2680 0346                                         i1l2672 032F  
                                       i1l2664 0319                                         i1l2760 0F6C  
                                       u115_20 0F3C                                         i1l2736 030A  
                                       i1l2728 02F5                                         i1l2920 0022  
                                       i1l2912 000A                                         u107_21 0621  
                                       u115_21 0F3B                                         i1l2770 0F66  
                                       i1l2690 0367                                         i1l2682 0351  
                                       i1l2674 033A                                         i1l2666 0326  
                                       i1l2762 0F6E                                         i1l2738 030D  
                                       i1l2754 0F8A                                         i1l2922 002B  
                                       i1l2914 000F                                         i1l2772 07BA  
                                       i1l2692 036D                                         i1l2684 035A  
                                       i1l2676 0340                                         i1l2668 0329  
                                       i1l2764 0F75                                         i1l2756 0F8C  
                                       i1l2924 0030                                         i1l2916 0014  
                                       i1l2774 07BC                                         i1l2766 0F5D  
                                       i1l2694 0373                                         i1l2686 035D  
                                       i1l2678 0343                                         i1l2758 0F93  
                                       i1l2926 0039                                         i1l2918 001D  
                                       i1l2776 07C3                                         i1l2768 0F5F  
                                       u108_20 062C                                         i1l2696 0376  
                                       i1l2688 0360                                         i1l2928 003E  
                                       u108_21 062B                                         i1l2778 07CA  
                                       i1l2698 037E                                         u108_25 0628  
                                       u141_20 05AB                                         u141_21 05AA  
                                       u109_25 0631                                         u150_20 0485  
                                       u142_20 06C9                                         u150_21 0484  
                                       u142_21 06C8                                         u151_20 0496  
                                       u143_20 06D9                                         u151_21 0495  
                                       u143_21 06D8                                         u152_20 073E  
                                       u144_20 023D                                         u160_20 036D  
                                       u152_21 073D                                         u144_21 023C  
                                       u160_21 036C                                         u145_20 0FBC  
                                       u153_20 0743                                         u161_20 0373  
                                       u145_21 0FBB                                         u153_21 0742  
                                       u161_21 0372                                         u170_20 0F66  
                                       u162_20 02B4                                         u170_21 0F65  
                                       u162_21 02B3                                         u162_25 02B0  
                                       u171_20 07CA                                         u163_20 02C8  
                                       u171_21 07C9                                         u163_21 02C7  
                                       u156_20 0326                                         u164_20 02DF  
                                       u180_20 0030                                         u156_21 0325  
                                       u164_21 02DE                                         u180_21 002F  
                                       u156_25 0322                     __end_of_EUSART_is_tx_ready 0F8A  
                                       u149_20 0474                                         u157_20 033A  
                                       u165_20 02F5                                         u181_20 0039  
                                       u149_21 0473                                         u157_21 0339  
                                       u165_21 02F4                                         u181_21 0038  
                                       u158_20 0351                                         u166_20 02FB  
                                       u182_20 003E                                         u174_20 000A  
                                       u158_21 0350                                         u166_21 02FA  
                                       u182_21 003D                                         u174_21 0009  
                                       u159_20 0367                                         u167_20 0301  
                                       u175_20 000F                                         u159_21 0366  
                                       u167_21 0300                                         u175_21 000E  
                                       u168_20 0F93                                         u176_20 0014  
                                       u168_21 0F92                                         u176_21 0013  
                                       u169_20 0F75                                         u177_20 001D  
                                       u169_21 0F74                                         u177_21 001C  
                                       u178_20 0022                                         u178_21 0021  
                                       u179_20 002B                                         u179_21 002A  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             ?_display_refresh 0070                                _TMR4_StartTimer 0EB1  
                                  ?_RX_Command 0070                              ?i1_increase_digit 0070  
         __end_of_TMR1_DefaultInterruptHandler 0EA4          __size_of_TMR1_DefaultInterruptHandler 0001  
                 _TMR1_DefaultInterruptHandler 0EA3                        __size_of_increase_digit 002A  
                  ?i1_set_display_value_manual 0070                                         ___wmul 0713  
                           ??i1_increase_digit 0070                               TX_Command@txData 0071  
                                    ??___eetoi 0061                                         _g_mass 0047  
                                    ??___itoee 0061                                      ??___lwdiv 005D  
                                    ??___lwmod 005D                                    ?_TX_Command 0070  
                                  init_digit@i 0067                        __end_of_TMR4_Initialize 1000  
         __end_of_TMR4_DefaultInterruptHandler 0003          __size_of_TMR4_DefaultInterruptHandler 0001  
                 _TMR4_DefaultInterruptHandler 0002                              __end_ofi1___lwdiv 0569  
                                 __pdataCOMMON 007D                              __end_ofi1___lwmod 0640  
                        __size_of_decrease_num 006D                                ?_WDT_Initialize 0070  
                               ___memcpyee@ptr 005D                                ?_decrease_digit 0070  
                      __end_of_TMR2_StartTimer 0EAE       TMR6_SetInterruptHandler@InterruptHandler 0059  
     TMR4_SetInterruptHandler@InterruptHandler 0059       TMR2_SetInterruptHandler@InterruptHandler 0059  
     TMR1_SetInterruptHandler@InterruptHandler 0059                        __end_of_TMR1_WriteTimer 0FC8  
           increase_num_automatic@tmr6_counter 004E                                     ___eecpymem 04B3  
                             ?_TMR1_Initialize 0070                           __size_of_EUSART_Read 000F  
                            _SYSTEM_Initialize 0770                        __end_of__initialization 005E  
                           ?_SYSTEM_Initialize 0070                                _TMR6_StartTimer 0EB7  
                                   ___memcpyee 0381                               ??i1_select_digit 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 0753  
                          ??_SYSTEM_Initialize 005B                                      ?_TMR1_ISR 0070  
                                    ?_TMR2_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                    ?_TMR4_ISR 0070                                      ?_TMR6_ISR 0070  
                                 _decrease_num 0314                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 07F8                              ?_end_select_digit 0070  
                           ??_end_select_digit 0059                                 _OPTION_REGbits 0095  
                ?_TMR4_DefaultInterruptHandler 0070                            __size_of_RX_Command 0011  
              ??_EUSART_SetOverrunErrorHandler 005B                       _handle_received_commands 0062  
                      __end_of_TMR4_StartTimer 0EB4                      __end_of_SYSTEM_Initialize 0789  
                                   __pbssBANK0 003D                           __end_of_EUSART_Write 0F1B  
                          __size_of_TX_Command 000E                    __end_ofi1_set_display_value 02A2  
                        _TMR4_InterruptHandler 00A2               __end_of_set_display_value_manual 0F5D  
                                   __pmaintext 0640                                        ?___wmul 0059  
                                   ??_TMR1_ISR 0072               __end_of_TMR6_SetInterruptHandler 0F11  
                                   ??_TMR2_ISR 0072                                     ??_TMR4_ISR 007D  
                                   ??_TMR6_ISR 007D                                     _ge_time_ms 0008  
                                   __pintentry 0004                    __size_ofi1_end_select_digit 000C  
                                ?_select_digit 0070                                        _BAUDCON 019F  
                             ?_TMR4_Initialize 0070                                        _APFCON0 011D  
                                      _APFCON1 011E                              _gp_selected_digit 0052  
                               _ge_memory_mass 0000                                        _OSCTUNE 0098  
                      __size_of_TMR2_StopTimer 0003                       ??_EUSART_SetErrorHandler 005B  
                             ?_TMR2_StartTimer 0070                        __end_of_TMR6_StartTimer 0EBA  
                             _g_time_ms_backup 0045                               ?_TMR1_WriteTimer 0070  
                      ?_increase_num_automatic 0070            __size_ofi1_set_display_value_manual 000E  
                                  ?___eecpymem 0059                                    ?___memcpyee 0059  
                               _increase_digit 0699                     ??_TMR2_SetInterruptHandler 005B  
                            ?i1_TMR4_StopTimer 0070                        __size_of_TMR4_StopTimer 0003  
                                      ___eetoi 07D0                                 ??_select_digit 0059  
                              __size_of___wmul 0020                                        ___itoee 0FA8  
                                      ___lwdiv 04F0                                        ___lwmod 05D7  
                           ??i1_TMR4_StopTimer 0070                                     _init_digit 0422  
                      set_display_value@buffer 0066                               ?_TMR6_Initialize 0070  
                                      __ptext1 0422                                        __ptext2 07D0  
                                      __ptext3 04B3                                        __ptext4 0062  
                                      __ptext5 0F4F                                        __ptext6 01BC  
                                      __ptext7 05D7                                        __ptext8 04F0  
                                      __ptext9 0569                                        _g_yekan 0039  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                            i1___lwdiv@divisor 0070                          _OSCILLATOR_Initialize 07F8  
                                    _T2CONbits 001C                              i1___lwdiv@counter 0077  
                     i1set_display_value@value 0078              __size_of_TMR1_SetInterruptHandler 0009  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 0059  
            __size_of_TMR4_SetInterruptHandler 0009                      ?_TMR1_SetInterruptHandler 0059  
                    ?_TMR4_SetInterruptHandler 0059                                      _T6CONbits 041E  
                            ?i1_TMR6_StopTimer 0070                 __end_of_increase_num_automatic 0314  
                      __size_of_TMR6_StopTimer 0003                      i1set_display_value@buffer 0055  
                   __size_of_SYSTEM_Initialize 0019                                        clrloop0 0EC7  
                             ?_TMR4_StartTimer 0070                           end_of_initialization 005E  
                           ??i1_TMR6_StopTimer 0070                 ??_TMR4_DefaultInterruptHandler 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0EED         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0EE4                                        init_ram 0ECC  
                                      initloop 0ECD                         __end_of_increase_digit 06C3  
                            _EUSART_Initialize 06ED                                   ??_RX_Command 0059  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                     decrease_num@tmr4_counter 004F                             _EUSART_is_rx_ready 0EC1  
                              ___memcpyee@from 0059                             _EUSART_is_tx_ready 0F7B  
                              ___memcpyee@size 005A                                   ??_TX_Command 0071  
                                ??_blink_digit 0070                            ??_EUSART_Initialize 005B  
                             ??_WDT_Initialize 0059                            __size_of___eecpymem 003D  
                          ?_EUSART_is_rx_ready 0070                       _TMR6_SetInterruptHandler 0F08  
                         i1select_digit@buffer 0072                               ??_decrease_digit 0070  
                          ?_EUSART_is_tx_ready 0070                      __size_ofi1_increase_digit 002A  
            __size_of_set_display_value_manual 000E                      ?_set_display_value_manual 0070  
                        __size_of_EUSART_Write 000A                            __size_of___memcpyee 0056  
                           __end_of_RX_Command 0FD9                                      i1___lwdiv 052D  
                                    i1___lwmod 060C                __size_of_EUSART_SetErrorHandler 0009  
                             ?_TMR6_StartTimer 0070                      __end_of_EUSART_Initialize 0713  
                         ??_EUSART_is_rx_ready 0059                             __end_of_TX_Command 0F41  
                         ??_EUSART_is_tx_ready 0070                                      _TXSTAbits 019E  
                              ?_increase_digit 0070                       i1end_select_digit@buffer 0071  
                            _get_display_value 03D7                              _set_display_value 01BC  
                     __size_of_display_refresh 0047           __end_of_TMR2_DefaultInterruptHandler 0EA5  
        __size_of_TMR2_DefaultInterruptHandler 0001                   _TMR2_DefaultInterruptHandler 0EA4  
                                  ?_init_digit 0070                     _EUSART_DefaultErrorHandler 0000  
                           ?_get_display_value 005F                             ?_set_display_value 0061  
                               __end_of___wmul 0733                                  __pidataCOMMON 07FF  
                                 _EUSART_Write 0F11                              __size_of_TMR1_ISR 0016  
                            __size_of_TMR2_ISR 000F                              __size_of_TMR4_ISR 000F  
                   ??_handle_received_commands 0068                              __size_of_TMR6_ISR 000F  
                            i1___lwmod@divisor 0070                         ?_OSCILLATOR_Initialize 0070  
                            i1___lwmod@counter 0075                            ??_get_display_value 00AE  
                          ??_set_display_value 0063                            start_initialization 0046  
                          __end_of_blink_digit 0753                __size_of_PIN_MANAGER_Initialize 0019  
                               _TMR2_StopTimer 0EAE                                  ??_EUSART_Read 0059  
                       _EUSART_is_tx_ready$262 0070                                     ?i1___lwdiv 0070  
                                   ?i1___lwmod 0070                           __end_of_select_digit 05A0  
                    __size_of_end_select_digit 000C                             display_refresh@pos 0030  
                    __end_of_get_display_value 0422                      __end_of_set_display_value 022F  
               ?_EUSART_SetOverrunErrorHandler 0059                       __size_of_TMR1_Initialize 0018  
                               _TMR4_StopTimer 0EB4                     _EUSART_FramingErrorHandler 00AC  
                                     ??___wmul 005D                         _EUSART_SetErrorHandler 0ED2  
                                  __pdataBANK0 0020                                 _g_setted_value 0049  
                ?_TMR2_DefaultInterruptHandler 0070                                    __pbssEEDATA 0000  
                       __end_of_TMR2_StopTimer 0EB1                                      ___latbits 0002  
                                  _g_digit_num 0053                                  __pcstackBANK0 0055  
                                __pcstackBANK1 00AE                       __size_of_TMR2_Initialize 0013  
                               _TMR6_StopTimer 0EBA                                   ??___eecpymem 005B  
                          __size_of_init_digit 004A                     __size_of_EUSART_Initialize 0026  
                                    _g_dahegan 0035                            __end_of_EUSART_Read 0FA8  
                        _TMR6_InterruptHandler 00A0                                      __pnvBANK0 006A  
                                    __pnvBANK1 00A0                         __end_of_TMR4_StopTimer 0EB7  
                                 ??___memcpyee 005B                               ___lwdiv@dividend 005B  
                       _PIN_MANAGER_Initialize 0789                                      _g_sadegan 0031  
                   __end_ofi1_end_select_digit 0F27                   __size_ofi1_set_display_value 0073  
             __end_of_TMR1_SetInterruptHandler 0EF6               __end_of_TMR4_SetInterruptHandler 0F08  
                                     ?___eetoi 005F                                      _g_time_ms 002A  
                                     ?___itoee 005F                                       ?___lwdiv 0059  
                                     ?___lwmod 0059                   ??_INTERRUPT_InterruptManager 007D  
                                  _blink_digit 0733                             __end_of___eecpymem 04F0  
                                _g_memory_mass 003D                              ??_display_refresh 0070  
                      __size_ofi1_select_digit 0037                               i1_increase_digit 06C3  
                              ?_TMR2_StopTimer 0070                         __end_of_TMR6_StopTimer 0EBD  
                    __size_ofi1_TMR4_StopTimer 0003                       __size_of_TMR4_Initialize 0014  
                             ___lwdiv@quotient 005E                                    ??i1___lwdiv 0074  
                                  ??i1___lwmod 0074                             __end_of___memcpyee 03D7  
                       set_display_value@value 0061                                 ___wmul@product 005D  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0059  
                                     _LATBbits 010D                                      clear_ram0 0EC6  
                                     _PIE1bits 0091                                       _PIE3bits 0093  
                            _eusartRxLastError 0054                       __size_of_TMR2_StartTimer 0003  
                              ?_TMR4_StopTimer 0070                     __size_of_get_display_value 004B  
                     __size_of_TMR1_WriteTimer 0011                     __size_of_set_display_value 0073  
          __size_of_INTERRUPT_InterruptManager 0040                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 005B                                       _PIR3bits 0013  
                    __size_ofi1_TMR6_StopTimer 0003                     ??_TMR6_SetInterruptHandler 005B  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 07BA  
                                     _TMR2_ISR 0F5D                                       _TMR4_ISR 0F6C  
                 ??i1_set_display_value_manual 0070                                       _TMR6_ISR 0F8A  
             __end_of_handle_received_commands 01BC                              ??_TMR1_Initialize 005B  
                            ___wmul@multiplier 0059                             select_digit@buffer 005B  
                              ?_TMR6_StopTimer 0070                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0009                          __size_of_select_digit 0037  
                    ?_TMR2_SetInterruptHandler 0059                       __size_of_TMR6_Initialize 0014  
                                  _EUSART_Read 0F99                               ??_increase_digit 0059  
                             _end_select_digit 0F27                               _middle_line_7seg 007D  
                            ??_TMR2_Initialize 005B                                     _EECON1bits 0195  
              increase_num_manual@tmr6_counter 004D                       __size_of_TMR4_StartTimer 0003  
                      ??_OSCILLATOR_Initialize 0059                            _EUSART_ErrorHandler 00A8  
                                 ??_init_digit 0066                                  ?_decrease_num 0070  
                             __size_of___eetoi 0014                               __size_of___itoee 000F  
                                 _select_digit 0569                               __size_of___lwdiv 003D  
                             __size_of___lwmod 0035                         end_select_digit@buffer 005A  
                     _TMR1_SetInterruptHandler 0EED                       _TMR4_SetInterruptHandler 0EFF  
                        _TMR1_InterruptHandler 00A6                               _g_decrease_delay 002E  
                              ___lwdiv@divisor 0059                                ___lwdiv@counter 0060  
                                     __ptext10 0699                                       __ptext11 03D7  
                                     __ptext20 0EAE                                       __ptext12 0713  
                                     __ptext21 0EAB                                       __ptext13 0F27  
                                   _T1GCONbits 0019                                       __ptext30 0EFF  
                                     __ptext22 0FC8                                       __ptext14 0FA8  
                                     __ptext31 0FD9                                       __ptext23 0EC1  
                                     __ptext15 0381                                       __ptext40 0ED2  
                                     __ptext32 0EF6                                       __ptext24 0F99  
                                     __ptext16 0EBA                                       __ptext33 07A2  
                                     __ptext25 0770                                       __ptext17 0EB7  
                                     __ptext50 0F11                                       __ptext42 0F8A  
                                     __ptext34 0EED                                       __ptext26 0EBD  
                                     __ptext18 0EB4                                       __ptext51 0F6C  
                                     __ptext43 0003                                       __ptext35 0789  
                                     __ptext27 07E4                                       __ptext19 0EB1  
                                     __ptext60 066E                                       __ptext52 0002  
                                     __ptext44 02A2                                       __ptext36 07F8  
                                     __ptext28 0F08                                       __ptext61 0F5D  
                                     __ptext53 0314                                       __ptext45 0F41  
                                     __ptext37 06ED                                       __ptext29 0FEC  
                                     __ptext62 0EA4                                       __ptext54 022F  
                                     __ptext46 06C3                                       __ptext38 0EE4  
                                     __ptext63 046C                                       __ptext55 060C  
                                     __ptext47 0EA8                                       __ptext39 0EDB  
                                     __ptext64 07BA                                       __ptext56 052D  
                                     __ptext48 0F33                                       __ptext65 0EA3  
                                     __ptext57 05A0                                       __ptext49 0F7B  
                                     __ptext66 0733                                       __ptext58 0F1B  
                                     __ptext67 0FB7                                       __ptext59 0EA5  
                           i1___lwdiv@dividend 0072                              ??_TMR4_Initialize 005B  
                           __end_of_init_digit 046C                    __size_of_EUSART_is_rx_ready 0005  
                                __size_of_main 002E                    __size_of_EUSART_is_tx_ready 000F  
                      ?_EUSART_SetErrorHandler 0059                       __size_of_TMR6_StartTimer 0003  
EUSART_SetOverrunErrorHandler@interruptHandler 0059                                       int$flags 007E  
                               ??_decrease_num 0057                              ??_TMR2_StartTimer 0059  
           __end_of_INTERRUPT_InterruptManager 0044                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0EE4         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0EDB                              ??_TMR1_WriteTimer 0072  
                               i1_select_digit 05A0                       ??_increase_num_automatic 0057  
                     _set_display_value_manual 0F4F                             i1___lwdiv@quotient 0075  
                              ___eecpymem@from 0059                                ___eecpymem@size 005A  
                                   _INTCONbits 000B                               i1_TMR4_StopTimer 0EA5  
                          i1_set_display_value 022F           __end_of_TMR6_DefaultInterruptHandler 0004  
        __size_of_TMR6_DefaultInterruptHandler 0001                   _TMR6_DefaultInterruptHandler 0003  
                      __size_of_WDT_Initialize 0004                                   _g_7seg_table 0020  
                                     intlevel1 0000                       blink_digit@blink_counter 0051  
                      __size_of_decrease_digit 002B              __size_of_handle_received_commands 015A  
                    ?_handle_received_commands 0070                               ___lwmod@dividend 005B  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 005B  
               __end_of_EUSART_SetErrorHandler 0EDB                       __end_ofi1_increase_digit 06ED  
                             i1_TMR6_StopTimer 0EA8                                _display_refresh 046C  
                         ?i1_set_display_value 0078             __end_ofi1_set_display_value_manual 0F4F  
                   i1_set_display_value_manual 0F41  EUSART_SetFramingErrorHandler@interruptHandler 0059  
                            ??_TMR4_StartTimer 0059                         __end_ofi1_select_digit 05D7  
                             ??_TMR2_StopTimer 0059                                   ?_blink_digit 0070  
                              ___lwmod@divisor 0059                             i1_end_select_digit 0F1B  
                              ___lwmod@counter 005E                                  ___eecpymem@cp 005D  
                                ___eecpymem@to 005E                            ?i1_end_select_digit 0070  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 07A2  
                             ??_TMR4_StopTimer 0059                  ?_TMR6_DefaultInterruptHandler 0070  
                                   _STATUSbits 0003                          _TMR2_InterruptHandler 00A4  
                              _TMR1_Initialize 07A2                          ??i1_set_display_value 007A  
                                 ___eetoi@addr 0063                                   ___eetoi@data 0064  
