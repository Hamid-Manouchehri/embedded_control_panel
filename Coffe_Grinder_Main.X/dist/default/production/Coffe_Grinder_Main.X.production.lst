

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec  8 12:27:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	text64,local,class=CODE,merge=1,delta=2
    86                           	psect	text65,local,class=CODE,merge=1,delta=2
    87                           	psect	text66,local,class=CODE,merge=1,delta=2
    88                           	psect	text67,local,class=CODE,merge=1,delta=2
    89                           	psect	text68,local,class=CODE,merge=1,delta=2
    90                           	psect	text69,local,class=CODE,merge=1,delta=2
    91                           	psect	text70,local,class=CODE,merge=1,delta=2
    92                           	psect	text71,local,class=CODE,merge=1,delta=2
    93                           	psect	text72,local,class=CODE,merge=1,delta=2
    94                           	psect	text73,local,class=CODE,merge=1,delta=2
    95                           	psect	text74,local,class=CODE,merge=1,delta=2
    96                           	psect	text75,local,class=CODE,merge=1,delta=2
    97                           	psect	text76,local,class=CODE,merge=1,delta=2
    98                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text78,local,class=CODE,merge=1,delta=2
   100                           	psect	text79,local,class=CODE,merge=1,delta=2
   101                           	psect	text80,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text81,local,class=CODE,merge=1,delta=2
   103                           	psect	text82,local,class=CODE,merge=1,delta=2
   104                           	psect	text83,local,class=CODE,merge=1,delta=2
   105                           	psect	text84,local,class=CODE,merge=1,delta=2
   106                           	psect	text85,local,class=CODE,merge=1,delta=2
   107                           	psect	text86,local,class=CODE,merge=1,delta=2
   108                           	psect	text87,local,class=CODE,merge=1,delta=2
   109                           	psect	text88,local,class=CODE,merge=1,delta=2
   110                           	psect	text89,local,class=CODE,merge=1,delta=2
   111                           	psect	text90,local,class=CODE,merge=1,delta=2
   112                           	psect	text91,local,class=CODE,merge=1,delta=2
   113                           	psect	text92,local,class=CODE,merge=1,delta=2
   114                           	psect	text93,local,class=CODE,merge=1,delta=2
   115                           	psect	text94,local,class=CODE,merge=1,delta=2
   116                           	psect	text95,local,class=CODE,merge=1,delta=2
   117                           	psect	text96,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text97,local,class=CODE,merge=1,delta=2
   119                           	psect	text98,local,class=CODE,merge=1,delta=2
   120                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text104,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text106,local,class=CODE,merge=1,delta=2
   128                           	psect	text107,local,class=CODE,merge=1,delta=2
   129                           	psect	text108,local,class=CODE,merge=1,delta=2
   130                           	psect	text109,local,class=CODE,merge=1,delta=2
   131                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   132                           	psect	text111,local,class=CODE,merge=1,delta=2
   133                           	psect	text112,local,class=CODE,merge=1,delta=2
   134                           	psect	intentry,global,class=CODE,delta=2
   135                           	psect	text114,local,class=CODE,merge=1,delta=2
   136                           	psect	text115,local,class=CODE,merge=1,delta=2
   137                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   138                           	psect	text117,local,class=CODE,merge=1,delta=2
   139                           	psect	text118,local,class=CODE,merge=1,delta=2
   140                           	psect	text119,local,class=CODE,merge=1,delta=2
   141                           	psect	text120,local,class=CODE,merge=1,delta=2
   142                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   143                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   144                           	dabs	1,0x620,48
   145                           	dabs	1,0x5A0,80
   146                           	dabs	1,0x560,16
   147                           	dabs	1,0x520,64
   148                           	dabs	1,0x4DF,17
   149                           	dabs	1,0x2360,0,_mtouch_button
   150                           	dabs	1,0x230F,0,_mtouch_sensor
   151                           	dabs	1,0x7E,2
   152  0000                     
   153                           ; Version 2.20
   154                           ; Generated 12/02/2020 GMT
   155                           ; 
   156                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   157                           ; All rights reserved.
   158                           ; 
   159                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   160                           ; 
   161                           ; Redistribution and use in source and binary forms, with or without modification, are
   162                           ; permitted provided that the following conditions are met:
   163                           ; 
   164                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   165                           ;        conditions and the following disclaimer.
   166                           ; 
   167                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   168                           ;        of conditions and the following disclaimer in the documentation and/or other
   169                           ;        materials provided with the distribution.
   170                           ; 
   171                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   172                           ;        software without specific prior written permission.
   173                           ; 
   174                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   175                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   176                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   177                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   178                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   179                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   180                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   181                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   182                           ; 
   183                           ; 
   184                           ; Code-generator required, PIC16F1829 Definitions
   185                           ; 
   186                           ; SFR Addresses
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  0111                     	;# 
   239  0112                     	;# 
   240  0113                     	;# 
   241  0114                     	;# 
   242  0115                     	;# 
   243  0116                     	;# 
   244  0117                     	;# 
   245  0118                     	;# 
   246  0119                     	;# 
   247  011A                     	;# 
   248  011B                     	;# 
   249  011D                     	;# 
   250  011E                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  018E                     	;# 
   254  0191                     	;# 
   255  0191                     	;# 
   256  0192                     	;# 
   257  0193                     	;# 
   258  0193                     	;# 
   259  0193                     	;# 
   260  0194                     	;# 
   261  0195                     	;# 
   262  0196                     	;# 
   263  0199                     	;# 
   264  019A                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019D                     	;# 
   269  019E                     	;# 
   270  019F                     	;# 
   271  020C                     	;# 
   272  020D                     	;# 
   273  020E                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0212                     	;# 
   278  0213                     	;# 
   279  0213                     	;# 
   280  0214                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0219                     	;# 
   290  021A                     	;# 
   291  021B                     	;# 
   292  021C                     	;# 
   293  021D                     	;# 
   294  021E                     	;# 
   295  021F                     	;# 
   296  0291                     	;# 
   297  0291                     	;# 
   298  0292                     	;# 
   299  0293                     	;# 
   300  0294                     	;# 
   301  0295                     	;# 
   302  0295                     	;# 
   303  0296                     	;# 
   304  0298                     	;# 
   305  0298                     	;# 
   306  0299                     	;# 
   307  029A                     	;# 
   308  029B                     	;# 
   309  029C                     	;# 
   310  029D                     	;# 
   311  029E                     	;# 
   312  0311                     	;# 
   313  0311                     	;# 
   314  0312                     	;# 
   315  0313                     	;# 
   316  0318                     	;# 
   317  0318                     	;# 
   318  0319                     	;# 
   319  031A                     	;# 
   320  038C                     	;# 
   321  038D                     	;# 
   322  038E                     	;# 
   323  0391                     	;# 
   324  0392                     	;# 
   325  0393                     	;# 
   326  0394                     	;# 
   327  0395                     	;# 
   328  0396                     	;# 
   329  039A                     	;# 
   330  039C                     	;# 
   331  039D                     	;# 
   332  039E                     	;# 
   333  039F                     	;# 
   334  0415                     	;# 
   335  0416                     	;# 
   336  0417                     	;# 
   337  041C                     	;# 
   338  041D                     	;# 
   339  041E                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  0011                     	;# 
   367  0012                     	;# 
   368  0013                     	;# 
   369  0014                     	;# 
   370  0015                     	;# 
   371  0016                     	;# 
   372  0016                     	;# 
   373  0017                     	;# 
   374  0018                     	;# 
   375  0019                     	;# 
   376  001A                     	;# 
   377  001B                     	;# 
   378  001C                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  010C                     	;# 
   400  010D                     	;# 
   401  010E                     	;# 
   402  0111                     	;# 
   403  0112                     	;# 
   404  0113                     	;# 
   405  0114                     	;# 
   406  0115                     	;# 
   407  0116                     	;# 
   408  0117                     	;# 
   409  0118                     	;# 
   410  0119                     	;# 
   411  011A                     	;# 
   412  011B                     	;# 
   413  011D                     	;# 
   414  011E                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  018E                     	;# 
   418  0191                     	;# 
   419  0191                     	;# 
   420  0192                     	;# 
   421  0193                     	;# 
   422  0193                     	;# 
   423  0193                     	;# 
   424  0194                     	;# 
   425  0195                     	;# 
   426  0196                     	;# 
   427  0199                     	;# 
   428  019A                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019C                     	;# 
   432  019D                     	;# 
   433  019E                     	;# 
   434  019F                     	;# 
   435  020C                     	;# 
   436  020D                     	;# 
   437  020E                     	;# 
   438  0211                     	;# 
   439  0211                     	;# 
   440  0212                     	;# 
   441  0212                     	;# 
   442  0213                     	;# 
   443  0213                     	;# 
   444  0214                     	;# 
   445  0214                     	;# 
   446  0215                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0216                     	;# 
   450  0216                     	;# 
   451  0217                     	;# 
   452  0217                     	;# 
   453  0219                     	;# 
   454  021A                     	;# 
   455  021B                     	;# 
   456  021C                     	;# 
   457  021D                     	;# 
   458  021E                     	;# 
   459  021F                     	;# 
   460  0291                     	;# 
   461  0291                     	;# 
   462  0292                     	;# 
   463  0293                     	;# 
   464  0294                     	;# 
   465  0295                     	;# 
   466  0295                     	;# 
   467  0296                     	;# 
   468  0298                     	;# 
   469  0298                     	;# 
   470  0299                     	;# 
   471  029A                     	;# 
   472  029B                     	;# 
   473  029C                     	;# 
   474  029D                     	;# 
   475  029E                     	;# 
   476  0311                     	;# 
   477  0311                     	;# 
   478  0312                     	;# 
   479  0313                     	;# 
   480  0318                     	;# 
   481  0318                     	;# 
   482  0319                     	;# 
   483  031A                     	;# 
   484  038C                     	;# 
   485  038D                     	;# 
   486  038E                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  0394                     	;# 
   491  0395                     	;# 
   492  0396                     	;# 
   493  039A                     	;# 
   494  039C                     	;# 
   495  039D                     	;# 
   496  039E                     	;# 
   497  039F                     	;# 
   498  0415                     	;# 
   499  0416                     	;# 
   500  0417                     	;# 
   501  041C                     	;# 
   502  041D                     	;# 
   503  041E                     	;# 
   504  0FE4                     	;# 
   505  0FE5                     	;# 
   506  0FE6                     	;# 
   507  0FE7                     	;# 
   508  0FE8                     	;# 
   509  0FE9                     	;# 
   510  0FEA                     	;# 
   511  0FEB                     	;# 
   512  0FED                     	;# 
   513  0FEE                     	;# 
   514  0FEF                     	;# 
   515  0000                     	;# 
   516  0001                     	;# 
   517  0002                     	;# 
   518  0003                     	;# 
   519  0004                     	;# 
   520  0005                     	;# 
   521  0006                     	;# 
   522  0007                     	;# 
   523  0008                     	;# 
   524  0009                     	;# 
   525  000A                     	;# 
   526  000B                     	;# 
   527  000C                     	;# 
   528  000D                     	;# 
   529  000E                     	;# 
   530  0011                     	;# 
   531  0012                     	;# 
   532  0013                     	;# 
   533  0014                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  001E                     	;# 
   544  001F                     	;# 
   545  008C                     	;# 
   546  008D                     	;# 
   547  008E                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0094                     	;# 
   552  0095                     	;# 
   553  0096                     	;# 
   554  0097                     	;# 
   555  0098                     	;# 
   556  0099                     	;# 
   557  009A                     	;# 
   558  009B                     	;# 
   559  009B                     	;# 
   560  009C                     	;# 
   561  009D                     	;# 
   562  009E                     	;# 
   563  010C                     	;# 
   564  010D                     	;# 
   565  010E                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0113                     	;# 
   569  0114                     	;# 
   570  0115                     	;# 
   571  0116                     	;# 
   572  0117                     	;# 
   573  0118                     	;# 
   574  0119                     	;# 
   575  011A                     	;# 
   576  011B                     	;# 
   577  011D                     	;# 
   578  011E                     	;# 
   579  018C                     	;# 
   580  018D                     	;# 
   581  018E                     	;# 
   582  0191                     	;# 
   583  0191                     	;# 
   584  0192                     	;# 
   585  0193                     	;# 
   586  0193                     	;# 
   587  0193                     	;# 
   588  0194                     	;# 
   589  0195                     	;# 
   590  0196                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019C                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019F                     	;# 
   599  020C                     	;# 
   600  020D                     	;# 
   601  020E                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  0219                     	;# 
   618  021A                     	;# 
   619  021B                     	;# 
   620  021C                     	;# 
   621  021D                     	;# 
   622  021E                     	;# 
   623  021F                     	;# 
   624  0291                     	;# 
   625  0291                     	;# 
   626  0292                     	;# 
   627  0293                     	;# 
   628  0294                     	;# 
   629  0295                     	;# 
   630  0295                     	;# 
   631  0296                     	;# 
   632  0298                     	;# 
   633  0298                     	;# 
   634  0299                     	;# 
   635  029A                     	;# 
   636  029B                     	;# 
   637  029C                     	;# 
   638  029D                     	;# 
   639  029E                     	;# 
   640  0311                     	;# 
   641  0311                     	;# 
   642  0312                     	;# 
   643  0313                     	;# 
   644  0318                     	;# 
   645  0318                     	;# 
   646  0319                     	;# 
   647  031A                     	;# 
   648  038C                     	;# 
   649  038D                     	;# 
   650  038E                     	;# 
   651  0391                     	;# 
   652  0392                     	;# 
   653  0393                     	;# 
   654  0394                     	;# 
   655  0395                     	;# 
   656  0396                     	;# 
   657  039A                     	;# 
   658  039C                     	;# 
   659  039D                     	;# 
   660  039E                     	;# 
   661  039F                     	;# 
   662  0415                     	;# 
   663  0416                     	;# 
   664  0417                     	;# 
   665  041C                     	;# 
   666  041D                     	;# 
   667  041E                     	;# 
   668  0FE4                     	;# 
   669  0FE5                     	;# 
   670  0FE6                     	;# 
   671  0FE7                     	;# 
   672  0FE8                     	;# 
   673  0FE9                     	;# 
   674  0FEA                     	;# 
   675  0FEB                     	;# 
   676  0FED                     	;# 
   677  0FEE                     	;# 
   678  0FEF                     	;# 
   679  0000                     	;# 
   680  0001                     	;# 
   681  0002                     	;# 
   682  0003                     	;# 
   683  0004                     	;# 
   684  0005                     	;# 
   685  0006                     	;# 
   686  0007                     	;# 
   687  0008                     	;# 
   688  0009                     	;# 
   689  000A                     	;# 
   690  000B                     	;# 
   691  000C                     	;# 
   692  000D                     	;# 
   693  000E                     	;# 
   694  0011                     	;# 
   695  0012                     	;# 
   696  0013                     	;# 
   697  0014                     	;# 
   698  0015                     	;# 
   699  0016                     	;# 
   700  0016                     	;# 
   701  0017                     	;# 
   702  0018                     	;# 
   703  0019                     	;# 
   704  001A                     	;# 
   705  001B                     	;# 
   706  001C                     	;# 
   707  001E                     	;# 
   708  001F                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0091                     	;# 
   713  0092                     	;# 
   714  0093                     	;# 
   715  0094                     	;# 
   716  0095                     	;# 
   717  0096                     	;# 
   718  0097                     	;# 
   719  0098                     	;# 
   720  0099                     	;# 
   721  009A                     	;# 
   722  009B                     	;# 
   723  009B                     	;# 
   724  009C                     	;# 
   725  009D                     	;# 
   726  009E                     	;# 
   727  010C                     	;# 
   728  010D                     	;# 
   729  010E                     	;# 
   730  0111                     	;# 
   731  0112                     	;# 
   732  0113                     	;# 
   733  0114                     	;# 
   734  0115                     	;# 
   735  0116                     	;# 
   736  0117                     	;# 
   737  0118                     	;# 
   738  0119                     	;# 
   739  011A                     	;# 
   740  011B                     	;# 
   741  011D                     	;# 
   742  011E                     	;# 
   743  018C                     	;# 
   744  018D                     	;# 
   745  018E                     	;# 
   746  0191                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0193                     	;# 
   750  0193                     	;# 
   751  0193                     	;# 
   752  0194                     	;# 
   753  0195                     	;# 
   754  0196                     	;# 
   755  0199                     	;# 
   756  019A                     	;# 
   757  019B                     	;# 
   758  019B                     	;# 
   759  019C                     	;# 
   760  019D                     	;# 
   761  019E                     	;# 
   762  019F                     	;# 
   763  020C                     	;# 
   764  020D                     	;# 
   765  020E                     	;# 
   766  0211                     	;# 
   767  0211                     	;# 
   768  0212                     	;# 
   769  0212                     	;# 
   770  0213                     	;# 
   771  0213                     	;# 
   772  0214                     	;# 
   773  0214                     	;# 
   774  0215                     	;# 
   775  0215                     	;# 
   776  0215                     	;# 
   777  0216                     	;# 
   778  0216                     	;# 
   779  0217                     	;# 
   780  0217                     	;# 
   781  0219                     	;# 
   782  021A                     	;# 
   783  021B                     	;# 
   784  021C                     	;# 
   785  021D                     	;# 
   786  021E                     	;# 
   787  021F                     	;# 
   788  0291                     	;# 
   789  0291                     	;# 
   790  0292                     	;# 
   791  0293                     	;# 
   792  0294                     	;# 
   793  0295                     	;# 
   794  0295                     	;# 
   795  0296                     	;# 
   796  0298                     	;# 
   797  0298                     	;# 
   798  0299                     	;# 
   799  029A                     	;# 
   800  029B                     	;# 
   801  029C                     	;# 
   802  029D                     	;# 
   803  029E                     	;# 
   804  0311                     	;# 
   805  0311                     	;# 
   806  0312                     	;# 
   807  0313                     	;# 
   808  0318                     	;# 
   809  0318                     	;# 
   810  0319                     	;# 
   811  031A                     	;# 
   812  038C                     	;# 
   813  038D                     	;# 
   814  038E                     	;# 
   815  0391                     	;# 
   816  0392                     	;# 
   817  0393                     	;# 
   818  0394                     	;# 
   819  0395                     	;# 
   820  0396                     	;# 
   821  039A                     	;# 
   822  039C                     	;# 
   823  039D                     	;# 
   824  039E                     	;# 
   825  039F                     	;# 
   826  0415                     	;# 
   827  0416                     	;# 
   828  0417                     	;# 
   829  041C                     	;# 
   830  041D                     	;# 
   831  041E                     	;# 
   832  0FE4                     	;# 
   833  0FE5                     	;# 
   834  0FE6                     	;# 
   835  0FE7                     	;# 
   836  0FE8                     	;# 
   837  0FE9                     	;# 
   838  0FEA                     	;# 
   839  0FEB                     	;# 
   840  0FED                     	;# 
   841  0FEE                     	;# 
   842  0FEF                     	;# 
   843  0000                     	;# 
   844  0001                     	;# 
   845  0002                     	;# 
   846  0003                     	;# 
   847  0004                     	;# 
   848  0005                     	;# 
   849  0006                     	;# 
   850  0007                     	;# 
   851  0008                     	;# 
   852  0009                     	;# 
   853  000A                     	;# 
   854  000B                     	;# 
   855  000C                     	;# 
   856  000D                     	;# 
   857  000E                     	;# 
   858  0011                     	;# 
   859  0012                     	;# 
   860  0013                     	;# 
   861  0014                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0016                     	;# 
   865  0017                     	;# 
   866  0018                     	;# 
   867  0019                     	;# 
   868  001A                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  001E                     	;# 
   872  001F                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  0091                     	;# 
   877  0092                     	;# 
   878  0093                     	;# 
   879  0094                     	;# 
   880  0095                     	;# 
   881  0096                     	;# 
   882  0097                     	;# 
   883  0098                     	;# 
   884  0099                     	;# 
   885  009A                     	;# 
   886  009B                     	;# 
   887  009B                     	;# 
   888  009C                     	;# 
   889  009D                     	;# 
   890  009E                     	;# 
   891  010C                     	;# 
   892  010D                     	;# 
   893  010E                     	;# 
   894  0111                     	;# 
   895  0112                     	;# 
   896  0113                     	;# 
   897  0114                     	;# 
   898  0115                     	;# 
   899  0116                     	;# 
   900  0117                     	;# 
   901  0118                     	;# 
   902  0119                     	;# 
   903  011A                     	;# 
   904  011B                     	;# 
   905  011D                     	;# 
   906  011E                     	;# 
   907  018C                     	;# 
   908  018D                     	;# 
   909  018E                     	;# 
   910  0191                     	;# 
   911  0191                     	;# 
   912  0192                     	;# 
   913  0193                     	;# 
   914  0193                     	;# 
   915  0193                     	;# 
   916  0194                     	;# 
   917  0195                     	;# 
   918  0196                     	;# 
   919  0199                     	;# 
   920  019A                     	;# 
   921  019B                     	;# 
   922  019B                     	;# 
   923  019C                     	;# 
   924  019D                     	;# 
   925  019E                     	;# 
   926  019F                     	;# 
   927  020C                     	;# 
   928  020D                     	;# 
   929  020E                     	;# 
   930  0211                     	;# 
   931  0211                     	;# 
   932  0212                     	;# 
   933  0212                     	;# 
   934  0213                     	;# 
   935  0213                     	;# 
   936  0214                     	;# 
   937  0214                     	;# 
   938  0215                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0216                     	;# 
   942  0216                     	;# 
   943  0217                     	;# 
   944  0217                     	;# 
   945  0219                     	;# 
   946  021A                     	;# 
   947  021B                     	;# 
   948  021C                     	;# 
   949  021D                     	;# 
   950  021E                     	;# 
   951  021F                     	;# 
   952  0291                     	;# 
   953  0291                     	;# 
   954  0292                     	;# 
   955  0293                     	;# 
   956  0294                     	;# 
   957  0295                     	;# 
   958  0295                     	;# 
   959  0296                     	;# 
   960  0298                     	;# 
   961  0298                     	;# 
   962  0299                     	;# 
   963  029A                     	;# 
   964  029B                     	;# 
   965  029C                     	;# 
   966  029D                     	;# 
   967  029E                     	;# 
   968  0311                     	;# 
   969  0311                     	;# 
   970  0312                     	;# 
   971  0313                     	;# 
   972  0318                     	;# 
   973  0318                     	;# 
   974  0319                     	;# 
   975  031A                     	;# 
   976  038C                     	;# 
   977  038D                     	;# 
   978  038E                     	;# 
   979  0391                     	;# 
   980  0392                     	;# 
   981  0393                     	;# 
   982  0394                     	;# 
   983  0395                     	;# 
   984  0396                     	;# 
   985  039A                     	;# 
   986  039C                     	;# 
   987  039D                     	;# 
   988  039E                     	;# 
   989  039F                     	;# 
   990  0415                     	;# 
   991  0416                     	;# 
   992  0417                     	;# 
   993  041C                     	;# 
   994  041D                     	;# 
   995  041E                     	;# 
   996  0FE4                     	;# 
   997  0FE5                     	;# 
   998  0FE6                     	;# 
   999  0FE7                     	;# 
  1000  0FE8                     	;# 
  1001  0FE9                     	;# 
  1002  0FEA                     	;# 
  1003  0FEB                     	;# 
  1004  0FED                     	;# 
  1005  0FEE                     	;# 
  1006  0FEF                     	;# 
  1007  0000                     	;# 
  1008  0001                     	;# 
  1009  0002                     	;# 
  1010  0003                     	;# 
  1011  0004                     	;# 
  1012  0005                     	;# 
  1013  0006                     	;# 
  1014  0007                     	;# 
  1015  0008                     	;# 
  1016  0009                     	;# 
  1017  000A                     	;# 
  1018  000B                     	;# 
  1019  000C                     	;# 
  1020  000D                     	;# 
  1021  000E                     	;# 
  1022  0011                     	;# 
  1023  0012                     	;# 
  1024  0013                     	;# 
  1025  0014                     	;# 
  1026  0015                     	;# 
  1027  0016                     	;# 
  1028  0016                     	;# 
  1029  0017                     	;# 
  1030  0018                     	;# 
  1031  0019                     	;# 
  1032  001A                     	;# 
  1033  001B                     	;# 
  1034  001C                     	;# 
  1035  001E                     	;# 
  1036  001F                     	;# 
  1037  008C                     	;# 
  1038  008D                     	;# 
  1039  008E                     	;# 
  1040  0091                     	;# 
  1041  0092                     	;# 
  1042  0093                     	;# 
  1043  0094                     	;# 
  1044  0095                     	;# 
  1045  0096                     	;# 
  1046  0097                     	;# 
  1047  0098                     	;# 
  1048  0099                     	;# 
  1049  009A                     	;# 
  1050  009B                     	;# 
  1051  009B                     	;# 
  1052  009C                     	;# 
  1053  009D                     	;# 
  1054  009E                     	;# 
  1055  010C                     	;# 
  1056  010D                     	;# 
  1057  010E                     	;# 
  1058  0111                     	;# 
  1059  0112                     	;# 
  1060  0113                     	;# 
  1061  0114                     	;# 
  1062  0115                     	;# 
  1063  0116                     	;# 
  1064  0117                     	;# 
  1065  0118                     	;# 
  1066  0119                     	;# 
  1067  011A                     	;# 
  1068  011B                     	;# 
  1069  011D                     	;# 
  1070  011E                     	;# 
  1071  018C                     	;# 
  1072  018D                     	;# 
  1073  018E                     	;# 
  1074  0191                     	;# 
  1075  0191                     	;# 
  1076  0192                     	;# 
  1077  0193                     	;# 
  1078  0193                     	;# 
  1079  0193                     	;# 
  1080  0194                     	;# 
  1081  0195                     	;# 
  1082  0196                     	;# 
  1083  0199                     	;# 
  1084  019A                     	;# 
  1085  019B                     	;# 
  1086  019B                     	;# 
  1087  019C                     	;# 
  1088  019D                     	;# 
  1089  019E                     	;# 
  1090  019F                     	;# 
  1091  020C                     	;# 
  1092  020D                     	;# 
  1093  020E                     	;# 
  1094  0211                     	;# 
  1095  0211                     	;# 
  1096  0212                     	;# 
  1097  0212                     	;# 
  1098  0213                     	;# 
  1099  0213                     	;# 
  1100  0214                     	;# 
  1101  0214                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0216                     	;# 
  1106  0216                     	;# 
  1107  0217                     	;# 
  1108  0217                     	;# 
  1109  0219                     	;# 
  1110  021A                     	;# 
  1111  021B                     	;# 
  1112  021C                     	;# 
  1113  021D                     	;# 
  1114  021E                     	;# 
  1115  021F                     	;# 
  1116  0291                     	;# 
  1117  0291                     	;# 
  1118  0292                     	;# 
  1119  0293                     	;# 
  1120  0294                     	;# 
  1121  0295                     	;# 
  1122  0295                     	;# 
  1123  0296                     	;# 
  1124  0298                     	;# 
  1125  0298                     	;# 
  1126  0299                     	;# 
  1127  029A                     	;# 
  1128  029B                     	;# 
  1129  029C                     	;# 
  1130  029D                     	;# 
  1131  029E                     	;# 
  1132  0311                     	;# 
  1133  0311                     	;# 
  1134  0312                     	;# 
  1135  0313                     	;# 
  1136  0318                     	;# 
  1137  0318                     	;# 
  1138  0319                     	;# 
  1139  031A                     	;# 
  1140  038C                     	;# 
  1141  038D                     	;# 
  1142  038E                     	;# 
  1143  0391                     	;# 
  1144  0392                     	;# 
  1145  0393                     	;# 
  1146  0394                     	;# 
  1147  0395                     	;# 
  1148  0396                     	;# 
  1149  039A                     	;# 
  1150  039C                     	;# 
  1151  039D                     	;# 
  1152  039E                     	;# 
  1153  039F                     	;# 
  1154  0415                     	;# 
  1155  0416                     	;# 
  1156  0417                     	;# 
  1157  041C                     	;# 
  1158  041D                     	;# 
  1159  041E                     	;# 
  1160  0FE4                     	;# 
  1161  0FE5                     	;# 
  1162  0FE6                     	;# 
  1163  0FE7                     	;# 
  1164  0FE8                     	;# 
  1165  0FE9                     	;# 
  1166  0FEA                     	;# 
  1167  0FEB                     	;# 
  1168  0FED                     	;# 
  1169  0FEE                     	;# 
  1170  0FEF                     	;# 
  1171  0000                     	;# 
  1172  0001                     	;# 
  1173  0002                     	;# 
  1174  0003                     	;# 
  1175  0004                     	;# 
  1176  0005                     	;# 
  1177  0006                     	;# 
  1178  0007                     	;# 
  1179  0008                     	;# 
  1180  0009                     	;# 
  1181  000A                     	;# 
  1182  000B                     	;# 
  1183  000C                     	;# 
  1184  000D                     	;# 
  1185  000E                     	;# 
  1186  0011                     	;# 
  1187  0012                     	;# 
  1188  0013                     	;# 
  1189  0014                     	;# 
  1190  0015                     	;# 
  1191  0016                     	;# 
  1192  0016                     	;# 
  1193  0017                     	;# 
  1194  0018                     	;# 
  1195  0019                     	;# 
  1196  001A                     	;# 
  1197  001B                     	;# 
  1198  001C                     	;# 
  1199  001E                     	;# 
  1200  001F                     	;# 
  1201  008C                     	;# 
  1202  008D                     	;# 
  1203  008E                     	;# 
  1204  0091                     	;# 
  1205  0092                     	;# 
  1206  0093                     	;# 
  1207  0094                     	;# 
  1208  0095                     	;# 
  1209  0096                     	;# 
  1210  0097                     	;# 
  1211  0098                     	;# 
  1212  0099                     	;# 
  1213  009A                     	;# 
  1214  009B                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  010C                     	;# 
  1220  010D                     	;# 
  1221  010E                     	;# 
  1222  0111                     	;# 
  1223  0112                     	;# 
  1224  0113                     	;# 
  1225  0114                     	;# 
  1226  0115                     	;# 
  1227  0116                     	;# 
  1228  0117                     	;# 
  1229  0118                     	;# 
  1230  0119                     	;# 
  1231  011A                     	;# 
  1232  011B                     	;# 
  1233  011D                     	;# 
  1234  011E                     	;# 
  1235  018C                     	;# 
  1236  018D                     	;# 
  1237  018E                     	;# 
  1238  0191                     	;# 
  1239  0191                     	;# 
  1240  0192                     	;# 
  1241  0193                     	;# 
  1242  0193                     	;# 
  1243  0193                     	;# 
  1244  0194                     	;# 
  1245  0195                     	;# 
  1246  0196                     	;# 
  1247  0199                     	;# 
  1248  019A                     	;# 
  1249  019B                     	;# 
  1250  019B                     	;# 
  1251  019C                     	;# 
  1252  019D                     	;# 
  1253  019E                     	;# 
  1254  019F                     	;# 
  1255  020C                     	;# 
  1256  020D                     	;# 
  1257  020E                     	;# 
  1258  0211                     	;# 
  1259  0211                     	;# 
  1260  0212                     	;# 
  1261  0212                     	;# 
  1262  0213                     	;# 
  1263  0213                     	;# 
  1264  0214                     	;# 
  1265  0214                     	;# 
  1266  0215                     	;# 
  1267  0215                     	;# 
  1268  0215                     	;# 
  1269  0216                     	;# 
  1270  0216                     	;# 
  1271  0217                     	;# 
  1272  0217                     	;# 
  1273  0219                     	;# 
  1274  021A                     	;# 
  1275  021B                     	;# 
  1276  021C                     	;# 
  1277  021D                     	;# 
  1278  021E                     	;# 
  1279  021F                     	;# 
  1280  0291                     	;# 
  1281  0291                     	;# 
  1282  0292                     	;# 
  1283  0293                     	;# 
  1284  0294                     	;# 
  1285  0295                     	;# 
  1286  0295                     	;# 
  1287  0296                     	;# 
  1288  0298                     	;# 
  1289  0298                     	;# 
  1290  0299                     	;# 
  1291  029A                     	;# 
  1292  029B                     	;# 
  1293  029C                     	;# 
  1294  029D                     	;# 
  1295  029E                     	;# 
  1296  0311                     	;# 
  1297  0311                     	;# 
  1298  0312                     	;# 
  1299  0313                     	;# 
  1300  0318                     	;# 
  1301  0318                     	;# 
  1302  0319                     	;# 
  1303  031A                     	;# 
  1304  038C                     	;# 
  1305  038D                     	;# 
  1306  038E                     	;# 
  1307  0391                     	;# 
  1308  0392                     	;# 
  1309  0393                     	;# 
  1310  0394                     	;# 
  1311  0395                     	;# 
  1312  0396                     	;# 
  1313  039A                     	;# 
  1314  039C                     	;# 
  1315  039D                     	;# 
  1316  039E                     	;# 
  1317  039F                     	;# 
  1318  0415                     	;# 
  1319  0416                     	;# 
  1320  0417                     	;# 
  1321  041C                     	;# 
  1322  041D                     	;# 
  1323  041E                     	;# 
  1324  0FE4                     	;# 
  1325  0FE5                     	;# 
  1326  0FE6                     	;# 
  1327  0FE7                     	;# 
  1328  0FE8                     	;# 
  1329  0FE9                     	;# 
  1330  0FEA                     	;# 
  1331  0FEB                     	;# 
  1332  0FED                     	;# 
  1333  0FEE                     	;# 
  1334  0FEF                     	;# 
  1335  0000                     	;# 
  1336  0001                     	;# 
  1337  0002                     	;# 
  1338  0003                     	;# 
  1339  0004                     	;# 
  1340  0005                     	;# 
  1341  0006                     	;# 
  1342  0007                     	;# 
  1343  0008                     	;# 
  1344  0009                     	;# 
  1345  000A                     	;# 
  1346  000B                     	;# 
  1347  000C                     	;# 
  1348  000D                     	;# 
  1349  000E                     	;# 
  1350  0011                     	;# 
  1351  0012                     	;# 
  1352  0013                     	;# 
  1353  0014                     	;# 
  1354  0015                     	;# 
  1355  0016                     	;# 
  1356  0016                     	;# 
  1357  0017                     	;# 
  1358  0018                     	;# 
  1359  0019                     	;# 
  1360  001A                     	;# 
  1361  001B                     	;# 
  1362  001C                     	;# 
  1363  001E                     	;# 
  1364  001F                     	;# 
  1365  008C                     	;# 
  1366  008D                     	;# 
  1367  008E                     	;# 
  1368  0091                     	;# 
  1369  0092                     	;# 
  1370  0093                     	;# 
  1371  0094                     	;# 
  1372  0095                     	;# 
  1373  0096                     	;# 
  1374  0097                     	;# 
  1375  0098                     	;# 
  1376  0099                     	;# 
  1377  009A                     	;# 
  1378  009B                     	;# 
  1379  009B                     	;# 
  1380  009C                     	;# 
  1381  009D                     	;# 
  1382  009E                     	;# 
  1383  010C                     	;# 
  1384  010D                     	;# 
  1385  010E                     	;# 
  1386  0111                     	;# 
  1387  0112                     	;# 
  1388  0113                     	;# 
  1389  0114                     	;# 
  1390  0115                     	;# 
  1391  0116                     	;# 
  1392  0117                     	;# 
  1393  0118                     	;# 
  1394  0119                     	;# 
  1395  011A                     	;# 
  1396  011B                     	;# 
  1397  011D                     	;# 
  1398  011E                     	;# 
  1399  018C                     	;# 
  1400  018D                     	;# 
  1401  018E                     	;# 
  1402  0191                     	;# 
  1403  0191                     	;# 
  1404  0192                     	;# 
  1405  0193                     	;# 
  1406  0193                     	;# 
  1407  0193                     	;# 
  1408  0194                     	;# 
  1409  0195                     	;# 
  1410  0196                     	;# 
  1411  0199                     	;# 
  1412  019A                     	;# 
  1413  019B                     	;# 
  1414  019B                     	;# 
  1415  019C                     	;# 
  1416  019D                     	;# 
  1417  019E                     	;# 
  1418  019F                     	;# 
  1419  020C                     	;# 
  1420  020D                     	;# 
  1421  020E                     	;# 
  1422  0211                     	;# 
  1423  0211                     	;# 
  1424  0212                     	;# 
  1425  0212                     	;# 
  1426  0213                     	;# 
  1427  0213                     	;# 
  1428  0214                     	;# 
  1429  0214                     	;# 
  1430  0215                     	;# 
  1431  0215                     	;# 
  1432  0215                     	;# 
  1433  0216                     	;# 
  1434  0216                     	;# 
  1435  0217                     	;# 
  1436  0217                     	;# 
  1437  0219                     	;# 
  1438  021A                     	;# 
  1439  021B                     	;# 
  1440  021C                     	;# 
  1441  021D                     	;# 
  1442  021E                     	;# 
  1443  021F                     	;# 
  1444  0291                     	;# 
  1445  0291                     	;# 
  1446  0292                     	;# 
  1447  0293                     	;# 
  1448  0294                     	;# 
  1449  0295                     	;# 
  1450  0295                     	;# 
  1451  0296                     	;# 
  1452  0298                     	;# 
  1453  0298                     	;# 
  1454  0299                     	;# 
  1455  029A                     	;# 
  1456  029B                     	;# 
  1457  029C                     	;# 
  1458  029D                     	;# 
  1459  029E                     	;# 
  1460  0311                     	;# 
  1461  0311                     	;# 
  1462  0312                     	;# 
  1463  0313                     	;# 
  1464  0318                     	;# 
  1465  0318                     	;# 
  1466  0319                     	;# 
  1467  031A                     	;# 
  1468  038C                     	;# 
  1469  038D                     	;# 
  1470  038E                     	;# 
  1471  0391                     	;# 
  1472  0392                     	;# 
  1473  0393                     	;# 
  1474  0394                     	;# 
  1475  0395                     	;# 
  1476  0396                     	;# 
  1477  039A                     	;# 
  1478  039C                     	;# 
  1479  039D                     	;# 
  1480  039E                     	;# 
  1481  039F                     	;# 
  1482  0415                     	;# 
  1483  0416                     	;# 
  1484  0417                     	;# 
  1485  041C                     	;# 
  1486  041D                     	;# 
  1487  041E                     	;# 
  1488  0FE4                     	;# 
  1489  0FE5                     	;# 
  1490  0FE6                     	;# 
  1491  0FE7                     	;# 
  1492  0FE8                     	;# 
  1493  0FE9                     	;# 
  1494  0FEA                     	;# 
  1495  0FEB                     	;# 
  1496  0FED                     	;# 
  1497  0FEE                     	;# 
  1498  0FEF                     	;# 
  1499  0000                     	;# 
  1500  0001                     	;# 
  1501  0002                     	;# 
  1502  0003                     	;# 
  1503  0004                     	;# 
  1504  0005                     	;# 
  1505  0006                     	;# 
  1506  0007                     	;# 
  1507  0008                     	;# 
  1508  0009                     	;# 
  1509  000A                     	;# 
  1510  000B                     	;# 
  1511  000C                     	;# 
  1512  000D                     	;# 
  1513  000E                     	;# 
  1514  0011                     	;# 
  1515  0012                     	;# 
  1516  0013                     	;# 
  1517  0014                     	;# 
  1518  0015                     	;# 
  1519  0016                     	;# 
  1520  0016                     	;# 
  1521  0017                     	;# 
  1522  0018                     	;# 
  1523  0019                     	;# 
  1524  001A                     	;# 
  1525  001B                     	;# 
  1526  001C                     	;# 
  1527  001E                     	;# 
  1528  001F                     	;# 
  1529  008C                     	;# 
  1530  008D                     	;# 
  1531  008E                     	;# 
  1532  0091                     	;# 
  1533  0092                     	;# 
  1534  0093                     	;# 
  1535  0094                     	;# 
  1536  0095                     	;# 
  1537  0096                     	;# 
  1538  0097                     	;# 
  1539  0098                     	;# 
  1540  0099                     	;# 
  1541  009A                     	;# 
  1542  009B                     	;# 
  1543  009B                     	;# 
  1544  009C                     	;# 
  1545  009D                     	;# 
  1546  009E                     	;# 
  1547  010C                     	;# 
  1548  010D                     	;# 
  1549  010E                     	;# 
  1550  0111                     	;# 
  1551  0112                     	;# 
  1552  0113                     	;# 
  1553  0114                     	;# 
  1554  0115                     	;# 
  1555  0116                     	;# 
  1556  0117                     	;# 
  1557  0118                     	;# 
  1558  0119                     	;# 
  1559  011A                     	;# 
  1560  011B                     	;# 
  1561  011D                     	;# 
  1562  011E                     	;# 
  1563  018C                     	;# 
  1564  018D                     	;# 
  1565  018E                     	;# 
  1566  0191                     	;# 
  1567  0191                     	;# 
  1568  0192                     	;# 
  1569  0193                     	;# 
  1570  0193                     	;# 
  1571  0193                     	;# 
  1572  0194                     	;# 
  1573  0195                     	;# 
  1574  0196                     	;# 
  1575  0199                     	;# 
  1576  019A                     	;# 
  1577  019B                     	;# 
  1578  019B                     	;# 
  1579  019C                     	;# 
  1580  019D                     	;# 
  1581  019E                     	;# 
  1582  019F                     	;# 
  1583  020C                     	;# 
  1584  020D                     	;# 
  1585  020E                     	;# 
  1586  0211                     	;# 
  1587  0211                     	;# 
  1588  0212                     	;# 
  1589  0212                     	;# 
  1590  0213                     	;# 
  1591  0213                     	;# 
  1592  0214                     	;# 
  1593  0214                     	;# 
  1594  0215                     	;# 
  1595  0215                     	;# 
  1596  0215                     	;# 
  1597  0216                     	;# 
  1598  0216                     	;# 
  1599  0217                     	;# 
  1600  0217                     	;# 
  1601  0219                     	;# 
  1602  021A                     	;# 
  1603  021B                     	;# 
  1604  021C                     	;# 
  1605  021D                     	;# 
  1606  021E                     	;# 
  1607  021F                     	;# 
  1608  0291                     	;# 
  1609  0291                     	;# 
  1610  0292                     	;# 
  1611  0293                     	;# 
  1612  0294                     	;# 
  1613  0295                     	;# 
  1614  0295                     	;# 
  1615  0296                     	;# 
  1616  0298                     	;# 
  1617  0298                     	;# 
  1618  0299                     	;# 
  1619  029A                     	;# 
  1620  029B                     	;# 
  1621  029C                     	;# 
  1622  029D                     	;# 
  1623  029E                     	;# 
  1624  0311                     	;# 
  1625  0311                     	;# 
  1626  0312                     	;# 
  1627  0313                     	;# 
  1628  0318                     	;# 
  1629  0318                     	;# 
  1630  0319                     	;# 
  1631  031A                     	;# 
  1632  038C                     	;# 
  1633  038D                     	;# 
  1634  038E                     	;# 
  1635  0391                     	;# 
  1636  0392                     	;# 
  1637  0393                     	;# 
  1638  0394                     	;# 
  1639  0395                     	;# 
  1640  0396                     	;# 
  1641  039A                     	;# 
  1642  039C                     	;# 
  1643  039D                     	;# 
  1644  039E                     	;# 
  1645  039F                     	;# 
  1646  0415                     	;# 
  1647  0416                     	;# 
  1648  0417                     	;# 
  1649  041C                     	;# 
  1650  041D                     	;# 
  1651  041E                     	;# 
  1652  0FE4                     	;# 
  1653  0FE5                     	;# 
  1654  0FE6                     	;# 
  1655  0FE7                     	;# 
  1656  0FE8                     	;# 
  1657  0FE9                     	;# 
  1658  0FEA                     	;# 
  1659  0FEB                     	;# 
  1660  0FED                     	;# 
  1661  0FEE                     	;# 
  1662  0FEF                     	;# 
  1663  0000                     	;# 
  1664  0001                     	;# 
  1665  0002                     	;# 
  1666  0003                     	;# 
  1667  0004                     	;# 
  1668  0005                     	;# 
  1669  0006                     	;# 
  1670  0007                     	;# 
  1671  0008                     	;# 
  1672  0009                     	;# 
  1673  000A                     	;# 
  1674  000B                     	;# 
  1675  000C                     	;# 
  1676  000D                     	;# 
  1677  000E                     	;# 
  1678  0011                     	;# 
  1679  0012                     	;# 
  1680  0013                     	;# 
  1681  0014                     	;# 
  1682  0015                     	;# 
  1683  0016                     	;# 
  1684  0016                     	;# 
  1685  0017                     	;# 
  1686  0018                     	;# 
  1687  0019                     	;# 
  1688  001A                     	;# 
  1689  001B                     	;# 
  1690  001C                     	;# 
  1691  001E                     	;# 
  1692  001F                     	;# 
  1693  008C                     	;# 
  1694  008D                     	;# 
  1695  008E                     	;# 
  1696  0091                     	;# 
  1697  0092                     	;# 
  1698  0093                     	;# 
  1699  0094                     	;# 
  1700  0095                     	;# 
  1701  0096                     	;# 
  1702  0097                     	;# 
  1703  0098                     	;# 
  1704  0099                     	;# 
  1705  009A                     	;# 
  1706  009B                     	;# 
  1707  009B                     	;# 
  1708  009C                     	;# 
  1709  009D                     	;# 
  1710  009E                     	;# 
  1711  010C                     	;# 
  1712  010D                     	;# 
  1713  010E                     	;# 
  1714  0111                     	;# 
  1715  0112                     	;# 
  1716  0113                     	;# 
  1717  0114                     	;# 
  1718  0115                     	;# 
  1719  0116                     	;# 
  1720  0117                     	;# 
  1721  0118                     	;# 
  1722  0119                     	;# 
  1723  011A                     	;# 
  1724  011B                     	;# 
  1725  011D                     	;# 
  1726  011E                     	;# 
  1727  018C                     	;# 
  1728  018D                     	;# 
  1729  018E                     	;# 
  1730  0191                     	;# 
  1731  0191                     	;# 
  1732  0192                     	;# 
  1733  0193                     	;# 
  1734  0193                     	;# 
  1735  0193                     	;# 
  1736  0194                     	;# 
  1737  0195                     	;# 
  1738  0196                     	;# 
  1739  0199                     	;# 
  1740  019A                     	;# 
  1741  019B                     	;# 
  1742  019B                     	;# 
  1743  019C                     	;# 
  1744  019D                     	;# 
  1745  019E                     	;# 
  1746  019F                     	;# 
  1747  020C                     	;# 
  1748  020D                     	;# 
  1749  020E                     	;# 
  1750  0211                     	;# 
  1751  0211                     	;# 
  1752  0212                     	;# 
  1753  0212                     	;# 
  1754  0213                     	;# 
  1755  0213                     	;# 
  1756  0214                     	;# 
  1757  0214                     	;# 
  1758  0215                     	;# 
  1759  0215                     	;# 
  1760  0215                     	;# 
  1761  0216                     	;# 
  1762  0216                     	;# 
  1763  0217                     	;# 
  1764  0217                     	;# 
  1765  0219                     	;# 
  1766  021A                     	;# 
  1767  021B                     	;# 
  1768  021C                     	;# 
  1769  021D                     	;# 
  1770  021E                     	;# 
  1771  021F                     	;# 
  1772  0291                     	;# 
  1773  0291                     	;# 
  1774  0292                     	;# 
  1775  0293                     	;# 
  1776  0294                     	;# 
  1777  0295                     	;# 
  1778  0295                     	;# 
  1779  0296                     	;# 
  1780  0298                     	;# 
  1781  0298                     	;# 
  1782  0299                     	;# 
  1783  029A                     	;# 
  1784  029B                     	;# 
  1785  029C                     	;# 
  1786  029D                     	;# 
  1787  029E                     	;# 
  1788  0311                     	;# 
  1789  0311                     	;# 
  1790  0312                     	;# 
  1791  0313                     	;# 
  1792  0318                     	;# 
  1793  0318                     	;# 
  1794  0319                     	;# 
  1795  031A                     	;# 
  1796  038C                     	;# 
  1797  038D                     	;# 
  1798  038E                     	;# 
  1799  0391                     	;# 
  1800  0392                     	;# 
  1801  0393                     	;# 
  1802  0394                     	;# 
  1803  0395                     	;# 
  1804  0396                     	;# 
  1805  039A                     	;# 
  1806  039C                     	;# 
  1807  039D                     	;# 
  1808  039E                     	;# 
  1809  039F                     	;# 
  1810  0415                     	;# 
  1811  0416                     	;# 
  1812  0417                     	;# 
  1813  041C                     	;# 
  1814  041D                     	;# 
  1815  041E                     	;# 
  1816  0FE4                     	;# 
  1817  0FE5                     	;# 
  1818  0FE6                     	;# 
  1819  0FE7                     	;# 
  1820  0FE8                     	;# 
  1821  0FE9                     	;# 
  1822  0FEA                     	;# 
  1823  0FEB                     	;# 
  1824  0FED                     	;# 
  1825  0FEE                     	;# 
  1826  0FEF                     	;# 
  1827  0000                     	;# 
  1828  0001                     	;# 
  1829  0002                     	;# 
  1830  0003                     	;# 
  1831  0004                     	;# 
  1832  0005                     	;# 
  1833  0006                     	;# 
  1834  0007                     	;# 
  1835  0008                     	;# 
  1836  0009                     	;# 
  1837  000A                     	;# 
  1838  000B                     	;# 
  1839  000C                     	;# 
  1840  000D                     	;# 
  1841  000E                     	;# 
  1842  0011                     	;# 
  1843  0012                     	;# 
  1844  0013                     	;# 
  1845  0014                     	;# 
  1846  0015                     	;# 
  1847  0016                     	;# 
  1848  0016                     	;# 
  1849  0017                     	;# 
  1850  0018                     	;# 
  1851  0019                     	;# 
  1852  001A                     	;# 
  1853  001B                     	;# 
  1854  001C                     	;# 
  1855  001E                     	;# 
  1856  001F                     	;# 
  1857  008C                     	;# 
  1858  008D                     	;# 
  1859  008E                     	;# 
  1860  0091                     	;# 
  1861  0092                     	;# 
  1862  0093                     	;# 
  1863  0094                     	;# 
  1864  0095                     	;# 
  1865  0096                     	;# 
  1866  0097                     	;# 
  1867  0098                     	;# 
  1868  0099                     	;# 
  1869  009A                     	;# 
  1870  009B                     	;# 
  1871  009B                     	;# 
  1872  009C                     	;# 
  1873  009D                     	;# 
  1874  009E                     	;# 
  1875  010C                     	;# 
  1876  010D                     	;# 
  1877  010E                     	;# 
  1878  0111                     	;# 
  1879  0112                     	;# 
  1880  0113                     	;# 
  1881  0114                     	;# 
  1882  0115                     	;# 
  1883  0116                     	;# 
  1884  0117                     	;# 
  1885  0118                     	;# 
  1886  0119                     	;# 
  1887  011A                     	;# 
  1888  011B                     	;# 
  1889  011D                     	;# 
  1890  011E                     	;# 
  1891  018C                     	;# 
  1892  018D                     	;# 
  1893  018E                     	;# 
  1894  0191                     	;# 
  1895  0191                     	;# 
  1896  0192                     	;# 
  1897  0193                     	;# 
  1898  0193                     	;# 
  1899  0193                     	;# 
  1900  0194                     	;# 
  1901  0195                     	;# 
  1902  0196                     	;# 
  1903  0199                     	;# 
  1904  019A                     	;# 
  1905  019B                     	;# 
  1906  019B                     	;# 
  1907  019C                     	;# 
  1908  019D                     	;# 
  1909  019E                     	;# 
  1910  019F                     	;# 
  1911  020C                     	;# 
  1912  020D                     	;# 
  1913  020E                     	;# 
  1914  0211                     	;# 
  1915  0211                     	;# 
  1916  0212                     	;# 
  1917  0212                     	;# 
  1918  0213                     	;# 
  1919  0213                     	;# 
  1920  0214                     	;# 
  1921  0214                     	;# 
  1922  0215                     	;# 
  1923  0215                     	;# 
  1924  0215                     	;# 
  1925  0216                     	;# 
  1926  0216                     	;# 
  1927  0217                     	;# 
  1928  0217                     	;# 
  1929  0219                     	;# 
  1930  021A                     	;# 
  1931  021B                     	;# 
  1932  021C                     	;# 
  1933  021D                     	;# 
  1934  021E                     	;# 
  1935  021F                     	;# 
  1936  0291                     	;# 
  1937  0291                     	;# 
  1938  0292                     	;# 
  1939  0293                     	;# 
  1940  0294                     	;# 
  1941  0295                     	;# 
  1942  0295                     	;# 
  1943  0296                     	;# 
  1944  0298                     	;# 
  1945  0298                     	;# 
  1946  0299                     	;# 
  1947  029A                     	;# 
  1948  029B                     	;# 
  1949  029C                     	;# 
  1950  029D                     	;# 
  1951  029E                     	;# 
  1952  0311                     	;# 
  1953  0311                     	;# 
  1954  0312                     	;# 
  1955  0313                     	;# 
  1956  0318                     	;# 
  1957  0318                     	;# 
  1958  0319                     	;# 
  1959  031A                     	;# 
  1960  038C                     	;# 
  1961  038D                     	;# 
  1962  038E                     	;# 
  1963  0391                     	;# 
  1964  0392                     	;# 
  1965  0393                     	;# 
  1966  0394                     	;# 
  1967  0395                     	;# 
  1968  0396                     	;# 
  1969  039A                     	;# 
  1970  039C                     	;# 
  1971  039D                     	;# 
  1972  039E                     	;# 
  1973  039F                     	;# 
  1974  0415                     	;# 
  1975  0416                     	;# 
  1976  0417                     	;# 
  1977  041C                     	;# 
  1978  041D                     	;# 
  1979  041E                     	;# 
  1980  0FE4                     	;# 
  1981  0FE5                     	;# 
  1982  0FE6                     	;# 
  1983  0FE7                     	;# 
  1984  0FE8                     	;# 
  1985  0FE9                     	;# 
  1986  0FEA                     	;# 
  1987  0FEB                     	;# 
  1988  0FED                     	;# 
  1989  0FEE                     	;# 
  1990  0FEF                     	;# 
  1991  0000                     	;# 
  1992  0001                     	;# 
  1993  0002                     	;# 
  1994  0003                     	;# 
  1995  0004                     	;# 
  1996  0005                     	;# 
  1997  0006                     	;# 
  1998  0007                     	;# 
  1999  0008                     	;# 
  2000  0009                     	;# 
  2001  000A                     	;# 
  2002  000B                     	;# 
  2003  000C                     	;# 
  2004  000D                     	;# 
  2005  000E                     	;# 
  2006  0011                     	;# 
  2007  0012                     	;# 
  2008  0013                     	;# 
  2009  0014                     	;# 
  2010  0015                     	;# 
  2011  0016                     	;# 
  2012  0016                     	;# 
  2013  0017                     	;# 
  2014  0018                     	;# 
  2015  0019                     	;# 
  2016  001A                     	;# 
  2017  001B                     	;# 
  2018  001C                     	;# 
  2019  001E                     	;# 
  2020  001F                     	;# 
  2021  008C                     	;# 
  2022  008D                     	;# 
  2023  008E                     	;# 
  2024  0091                     	;# 
  2025  0092                     	;# 
  2026  0093                     	;# 
  2027  0094                     	;# 
  2028  0095                     	;# 
  2029  0096                     	;# 
  2030  0097                     	;# 
  2031  0098                     	;# 
  2032  0099                     	;# 
  2033  009A                     	;# 
  2034  009B                     	;# 
  2035  009B                     	;# 
  2036  009C                     	;# 
  2037  009D                     	;# 
  2038  009E                     	;# 
  2039  010C                     	;# 
  2040  010D                     	;# 
  2041  010E                     	;# 
  2042  0111                     	;# 
  2043  0112                     	;# 
  2044  0113                     	;# 
  2045  0114                     	;# 
  2046  0115                     	;# 
  2047  0116                     	;# 
  2048  0117                     	;# 
  2049  0118                     	;# 
  2050  0119                     	;# 
  2051  011A                     	;# 
  2052  011B                     	;# 
  2053  011D                     	;# 
  2054  011E                     	;# 
  2055  018C                     	;# 
  2056  018D                     	;# 
  2057  018E                     	;# 
  2058  0191                     	;# 
  2059  0191                     	;# 
  2060  0192                     	;# 
  2061  0193                     	;# 
  2062  0193                     	;# 
  2063  0193                     	;# 
  2064  0194                     	;# 
  2065  0195                     	;# 
  2066  0196                     	;# 
  2067  0199                     	;# 
  2068  019A                     	;# 
  2069  019B                     	;# 
  2070  019B                     	;# 
  2071  019C                     	;# 
  2072  019D                     	;# 
  2073  019E                     	;# 
  2074  019F                     	;# 
  2075  020C                     	;# 
  2076  020D                     	;# 
  2077  020E                     	;# 
  2078  0211                     	;# 
  2079  0211                     	;# 
  2080  0212                     	;# 
  2081  0212                     	;# 
  2082  0213                     	;# 
  2083  0213                     	;# 
  2084  0214                     	;# 
  2085  0214                     	;# 
  2086  0215                     	;# 
  2087  0215                     	;# 
  2088  0215                     	;# 
  2089  0216                     	;# 
  2090  0216                     	;# 
  2091  0217                     	;# 
  2092  0217                     	;# 
  2093  0219                     	;# 
  2094  021A                     	;# 
  2095  021B                     	;# 
  2096  021C                     	;# 
  2097  021D                     	;# 
  2098  021E                     	;# 
  2099  021F                     	;# 
  2100  0291                     	;# 
  2101  0291                     	;# 
  2102  0292                     	;# 
  2103  0293                     	;# 
  2104  0294                     	;# 
  2105  0295                     	;# 
  2106  0295                     	;# 
  2107  0296                     	;# 
  2108  0298                     	;# 
  2109  0298                     	;# 
  2110  0299                     	;# 
  2111  029A                     	;# 
  2112  029B                     	;# 
  2113  029C                     	;# 
  2114  029D                     	;# 
  2115  029E                     	;# 
  2116  0311                     	;# 
  2117  0311                     	;# 
  2118  0312                     	;# 
  2119  0313                     	;# 
  2120  0318                     	;# 
  2121  0318                     	;# 
  2122  0319                     	;# 
  2123  031A                     	;# 
  2124  038C                     	;# 
  2125  038D                     	;# 
  2126  038E                     	;# 
  2127  0391                     	;# 
  2128  0392                     	;# 
  2129  0393                     	;# 
  2130  0394                     	;# 
  2131  0395                     	;# 
  2132  0396                     	;# 
  2133  039A                     	;# 
  2134  039C                     	;# 
  2135  039D                     	;# 
  2136  039E                     	;# 
  2137  039F                     	;# 
  2138  0415                     	;# 
  2139  0416                     	;# 
  2140  0417                     	;# 
  2141  041C                     	;# 
  2142  041D                     	;# 
  2143  041E                     	;# 
  2144  0FE4                     	;# 
  2145  0FE5                     	;# 
  2146  0FE6                     	;# 
  2147  0FE7                     	;# 
  2148  0FE8                     	;# 
  2149  0FE9                     	;# 
  2150  0FEA                     	;# 
  2151  0FEB                     	;# 
  2152  0FED                     	;# 
  2153  0FEE                     	;# 
  2154  0FEF                     	;# 
  2155  0000                     	;# 
  2156  0001                     	;# 
  2157  0002                     	;# 
  2158  0003                     	;# 
  2159  0004                     	;# 
  2160  0005                     	;# 
  2161  0006                     	;# 
  2162  0007                     	;# 
  2163  0008                     	;# 
  2164  0009                     	;# 
  2165  000A                     	;# 
  2166  000B                     	;# 
  2167  000C                     	;# 
  2168  000D                     	;# 
  2169  000E                     	;# 
  2170  0011                     	;# 
  2171  0012                     	;# 
  2172  0013                     	;# 
  2173  0014                     	;# 
  2174  0015                     	;# 
  2175  0016                     	;# 
  2176  0016                     	;# 
  2177  0017                     	;# 
  2178  0018                     	;# 
  2179  0019                     	;# 
  2180  001A                     	;# 
  2181  001B                     	;# 
  2182  001C                     	;# 
  2183  001E                     	;# 
  2184  001F                     	;# 
  2185  008C                     	;# 
  2186  008D                     	;# 
  2187  008E                     	;# 
  2188  0091                     	;# 
  2189  0092                     	;# 
  2190  0093                     	;# 
  2191  0094                     	;# 
  2192  0095                     	;# 
  2193  0096                     	;# 
  2194  0097                     	;# 
  2195  0098                     	;# 
  2196  0099                     	;# 
  2197  009A                     	;# 
  2198  009B                     	;# 
  2199  009B                     	;# 
  2200  009C                     	;# 
  2201  009D                     	;# 
  2202  009E                     	;# 
  2203  010C                     	;# 
  2204  010D                     	;# 
  2205  010E                     	;# 
  2206  0111                     	;# 
  2207  0112                     	;# 
  2208  0113                     	;# 
  2209  0114                     	;# 
  2210  0115                     	;# 
  2211  0116                     	;# 
  2212  0117                     	;# 
  2213  0118                     	;# 
  2214  0119                     	;# 
  2215  011A                     	;# 
  2216  011B                     	;# 
  2217  011D                     	;# 
  2218  011E                     	;# 
  2219  018C                     	;# 
  2220  018D                     	;# 
  2221  018E                     	;# 
  2222  0191                     	;# 
  2223  0191                     	;# 
  2224  0192                     	;# 
  2225  0193                     	;# 
  2226  0193                     	;# 
  2227  0193                     	;# 
  2228  0194                     	;# 
  2229  0195                     	;# 
  2230  0196                     	;# 
  2231  0199                     	;# 
  2232  019A                     	;# 
  2233  019B                     	;# 
  2234  019B                     	;# 
  2235  019C                     	;# 
  2236  019D                     	;# 
  2237  019E                     	;# 
  2238  019F                     	;# 
  2239  020C                     	;# 
  2240  020D                     	;# 
  2241  020E                     	;# 
  2242  0211                     	;# 
  2243  0211                     	;# 
  2244  0212                     	;# 
  2245  0212                     	;# 
  2246  0213                     	;# 
  2247  0213                     	;# 
  2248  0214                     	;# 
  2249  0214                     	;# 
  2250  0215                     	;# 
  2251  0215                     	;# 
  2252  0215                     	;# 
  2253  0216                     	;# 
  2254  0216                     	;# 
  2255  0217                     	;# 
  2256  0217                     	;# 
  2257  0219                     	;# 
  2258  021A                     	;# 
  2259  021B                     	;# 
  2260  021C                     	;# 
  2261  021D                     	;# 
  2262  021E                     	;# 
  2263  021F                     	;# 
  2264  0291                     	;# 
  2265  0291                     	;# 
  2266  0292                     	;# 
  2267  0293                     	;# 
  2268  0294                     	;# 
  2269  0295                     	;# 
  2270  0295                     	;# 
  2271  0296                     	;# 
  2272  0298                     	;# 
  2273  0298                     	;# 
  2274  0299                     	;# 
  2275  029A                     	;# 
  2276  029B                     	;# 
  2277  029C                     	;# 
  2278  029D                     	;# 
  2279  029E                     	;# 
  2280  0311                     	;# 
  2281  0311                     	;# 
  2282  0312                     	;# 
  2283  0313                     	;# 
  2284  0318                     	;# 
  2285  0318                     	;# 
  2286  0319                     	;# 
  2287  031A                     	;# 
  2288  038C                     	;# 
  2289  038D                     	;# 
  2290  038E                     	;# 
  2291  0391                     	;# 
  2292  0392                     	;# 
  2293  0393                     	;# 
  2294  0394                     	;# 
  2295  0395                     	;# 
  2296  0396                     	;# 
  2297  039A                     	;# 
  2298  039C                     	;# 
  2299  039D                     	;# 
  2300  039E                     	;# 
  2301  039F                     	;# 
  2302  0415                     	;# 
  2303  0416                     	;# 
  2304  0417                     	;# 
  2305  041C                     	;# 
  2306  041D                     	;# 
  2307  041E                     	;# 
  2308  0FE4                     	;# 
  2309  0FE5                     	;# 
  2310  0FE6                     	;# 
  2311  0FE7                     	;# 
  2312  0FE8                     	;# 
  2313  0FE9                     	;# 
  2314  0FEA                     	;# 
  2315  0FEB                     	;# 
  2316  0FED                     	;# 
  2317  0FEE                     	;# 
  2318  0FEF                     	;# 
  2319  0000                     	;# 
  2320  0001                     	;# 
  2321  0002                     	;# 
  2322  0003                     	;# 
  2323  0004                     	;# 
  2324  0005                     	;# 
  2325  0006                     	;# 
  2326  0007                     	;# 
  2327  0008                     	;# 
  2328  0009                     	;# 
  2329  000A                     	;# 
  2330  000B                     	;# 
  2331  000C                     	;# 
  2332  000D                     	;# 
  2333  000E                     	;# 
  2334  0011                     	;# 
  2335  0012                     	;# 
  2336  0013                     	;# 
  2337  0014                     	;# 
  2338  0015                     	;# 
  2339  0016                     	;# 
  2340  0016                     	;# 
  2341  0017                     	;# 
  2342  0018                     	;# 
  2343  0019                     	;# 
  2344  001A                     	;# 
  2345  001B                     	;# 
  2346  001C                     	;# 
  2347  001E                     	;# 
  2348  001F                     	;# 
  2349  008C                     	;# 
  2350  008D                     	;# 
  2351  008E                     	;# 
  2352  0091                     	;# 
  2353  0092                     	;# 
  2354  0093                     	;# 
  2355  0094                     	;# 
  2356  0095                     	;# 
  2357  0096                     	;# 
  2358  0097                     	;# 
  2359  0098                     	;# 
  2360  0099                     	;# 
  2361  009A                     	;# 
  2362  009B                     	;# 
  2363  009B                     	;# 
  2364  009C                     	;# 
  2365  009D                     	;# 
  2366  009E                     	;# 
  2367  010C                     	;# 
  2368  010D                     	;# 
  2369  010E                     	;# 
  2370  0111                     	;# 
  2371  0112                     	;# 
  2372  0113                     	;# 
  2373  0114                     	;# 
  2374  0115                     	;# 
  2375  0116                     	;# 
  2376  0117                     	;# 
  2377  0118                     	;# 
  2378  0119                     	;# 
  2379  011A                     	;# 
  2380  011B                     	;# 
  2381  011D                     	;# 
  2382  011E                     	;# 
  2383  018C                     	;# 
  2384  018D                     	;# 
  2385  018E                     	;# 
  2386  0191                     	;# 
  2387  0191                     	;# 
  2388  0192                     	;# 
  2389  0193                     	;# 
  2390  0193                     	;# 
  2391  0193                     	;# 
  2392  0194                     	;# 
  2393  0195                     	;# 
  2394  0196                     	;# 
  2395  0199                     	;# 
  2396  019A                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019C                     	;# 
  2400  019D                     	;# 
  2401  019E                     	;# 
  2402  019F                     	;# 
  2403  020C                     	;# 
  2404  020D                     	;# 
  2405  020E                     	;# 
  2406  0211                     	;# 
  2407  0211                     	;# 
  2408  0212                     	;# 
  2409  0212                     	;# 
  2410  0213                     	;# 
  2411  0213                     	;# 
  2412  0214                     	;# 
  2413  0214                     	;# 
  2414  0215                     	;# 
  2415  0215                     	;# 
  2416  0215                     	;# 
  2417  0216                     	;# 
  2418  0216                     	;# 
  2419  0217                     	;# 
  2420  0217                     	;# 
  2421  0219                     	;# 
  2422  021A                     	;# 
  2423  021B                     	;# 
  2424  021C                     	;# 
  2425  021D                     	;# 
  2426  021E                     	;# 
  2427  021F                     	;# 
  2428  0291                     	;# 
  2429  0291                     	;# 
  2430  0292                     	;# 
  2431  0293                     	;# 
  2432  0294                     	;# 
  2433  0295                     	;# 
  2434  0295                     	;# 
  2435  0296                     	;# 
  2436  0298                     	;# 
  2437  0298                     	;# 
  2438  0299                     	;# 
  2439  029A                     	;# 
  2440  029B                     	;# 
  2441  029C                     	;# 
  2442  029D                     	;# 
  2443  029E                     	;# 
  2444  0311                     	;# 
  2445  0311                     	;# 
  2446  0312                     	;# 
  2447  0313                     	;# 
  2448  0318                     	;# 
  2449  0318                     	;# 
  2450  0319                     	;# 
  2451  031A                     	;# 
  2452  038C                     	;# 
  2453  038D                     	;# 
  2454  038E                     	;# 
  2455  0391                     	;# 
  2456  0392                     	;# 
  2457  0393                     	;# 
  2458  0394                     	;# 
  2459  0395                     	;# 
  2460  0396                     	;# 
  2461  039A                     	;# 
  2462  039C                     	;# 
  2463  039D                     	;# 
  2464  039E                     	;# 
  2465  039F                     	;# 
  2466  0415                     	;# 
  2467  0416                     	;# 
  2468  0417                     	;# 
  2469  041C                     	;# 
  2470  041D                     	;# 
  2471  041E                     	;# 
  2472  0FE4                     	;# 
  2473  0FE5                     	;# 
  2474  0FE6                     	;# 
  2475  0FE7                     	;# 
  2476  0FE8                     	;# 
  2477  0FE9                     	;# 
  2478  0FEA                     	;# 
  2479  0FEB                     	;# 
  2480  0FED                     	;# 
  2481  0FEE                     	;# 
  2482  0FEF                     	;_mtouch_sensor
  2483                           
  2484 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2485  0000                     
  2486 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2487  0000                     
  2488 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2489  0000                     
  2490                           	psect	idataBIGRAM
  2491  091E                     __pidataBIGRAM:
  2492                           
  2493                           ;initializer for _mtouch_sensor
  2494  091E  3400               	retlw	0
  2495  091F  346F               	retlw	low _MTOUCH_CVD_ScanA_0
  2496  0920  3412               	retlw	high _MTOUCH_CVD_ScanA_0
  2497  0921  348F               	retlw	low _MTOUCH_CVD_ScanB_0
  2498  0922  3413               	retlw	high _MTOUCH_CVD_ScanB_0
  2499  0923  3420               	retlw	32
  2500  0924  3400               	retlw	0
  2501  0925  3400               	retlw	0
  2502  0926  3400               	retlw	0
  2503  0927  3401               	retlw	1
  2504  0928  348F               	retlw	low _MTOUCH_CVD_ScanA_1
  2505  0929  3412               	retlw	high _MTOUCH_CVD_ScanA_1
  2506  092A  34AF               	retlw	low _MTOUCH_CVD_ScanB_1
  2507  092B  3413               	retlw	high _MTOUCH_CVD_ScanB_1
  2508  092C  3420               	retlw	32
  2509  092D  3400               	retlw	0
  2510  092E  3400               	retlw	0
  2511  092F  3400               	retlw	0
  2512  0930  3402               	retlw	2
  2513  0931  34AF               	retlw	low _MTOUCH_CVD_ScanA_2
  2514  0932  3412               	retlw	high _MTOUCH_CVD_ScanA_2
  2515  0933  34CF               	retlw	low _MTOUCH_CVD_ScanB_2
  2516  0934  3413               	retlw	high _MTOUCH_CVD_ScanB_2
  2517  0935  3420               	retlw	32
  2518  0936  3400               	retlw	0
  2519  0937  3400               	retlw	0
  2520  0938  3400               	retlw	0
  2521  0939  3403               	retlw	3
  2522  093A  34CF               	retlw	low _MTOUCH_CVD_ScanA_3
  2523  093B  3412               	retlw	high _MTOUCH_CVD_ScanA_3
  2524  093C  34EF               	retlw	low _MTOUCH_CVD_ScanB_3
  2525  093D  3413               	retlw	high _MTOUCH_CVD_ScanB_3
  2526  093E  3420               	retlw	32
  2527  093F  3400               	retlw	0
  2528  0940  3400               	retlw	0
  2529  0941  3400               	retlw	0
  2530  0942  3404               	retlw	4
  2531  0943  34EF               	retlw	low _MTOUCH_CVD_ScanA_4
  2532  0944  3412               	retlw	high _MTOUCH_CVD_ScanA_4
  2533  0945  340F               	retlw	low _MTOUCH_CVD_ScanB_4
  2534  0946  3414               	retlw	high _MTOUCH_CVD_ScanB_4
  2535  0947  3420               	retlw	32
  2536  0948  3400               	retlw	0
  2537  0949  3400               	retlw	0
  2538  094A  3400               	retlw	0
  2539  094B  3405               	retlw	5
  2540  094C  340F               	retlw	low _MTOUCH_CVD_ScanA_5
  2541  094D  3413               	retlw	high _MTOUCH_CVD_ScanA_5
  2542  094E  342F               	retlw	low _MTOUCH_CVD_ScanB_5
  2543  094F  3414               	retlw	high _MTOUCH_CVD_ScanB_5
  2544  0950  3420               	retlw	32
  2545  0951  3400               	retlw	0
  2546  0952  3400               	retlw	0
  2547  0953  3400               	retlw	0
  2548  0954  3406               	retlw	6
  2549  0955  342F               	retlw	low _MTOUCH_CVD_ScanA_6
  2550  0956  3413               	retlw	high _MTOUCH_CVD_ScanA_6
  2551  0957  344F               	retlw	low _MTOUCH_CVD_ScanB_6
  2552  0958  3414               	retlw	high _MTOUCH_CVD_ScanB_6
  2553  0959  3420               	retlw	32
  2554  095A  3400               	retlw	0
  2555  095B  3400               	retlw	0
  2556  095C  3400               	retlw	0
  2557  095D  3407               	retlw	7
  2558  095E  344F               	retlw	low _MTOUCH_CVD_ScanA_7
  2559  095F  3413               	retlw	high _MTOUCH_CVD_ScanA_7
  2560  0960  346F               	retlw	low _MTOUCH_CVD_ScanB_7
  2561  0961  3414               	retlw	high _MTOUCH_CVD_ScanB_7
  2562  0962  3420               	retlw	32
  2563  0963  3400               	retlw	0
  2564  0964  3400               	retlw	0
  2565  0965  3400               	retlw	0
  2566  0966  3408               	retlw	8
  2567  0967  344F               	retlw	low _MTOUCH_CVD_ScanA_8
  2568  0968  3412               	retlw	high _MTOUCH_CVD_ScanA_8
  2569  0969  346F               	retlw	low _MTOUCH_CVD_ScanB_8
  2570  096A  3413               	retlw	high _MTOUCH_CVD_ScanB_8
  2571  096B  3420               	retlw	32
  2572  096C  3400               	retlw	0
  2573  096D  3400               	retlw	0
  2574  096E  3400               	retlw	0
  2575                           
  2576                           	psect	idataBANK0
  2577  0002                     __pidataBANK0:
  2578                           
  2579                           ;initializer for _g_time_ms
  2580  0002  3464               	retlw	100
  2581  0003  3400               	retlw	0
  2582                           
  2583                           	psect	idataBANK1
  2584  1F5D                     __pidataBANK1:
  2585                           
  2586                           ;initializer for _Button_StateMachine
  2587  1F5D  3474               	retlw	low _Button_State_Initializing
  2588  1F5E  340B               	retlw	high _Button_State_Initializing
  2589  1F5F  3478               	retlw	low _Button_State_NotPressed
  2590  1F60  340E               	retlw	high _Button_State_NotPressed
  2591  1F61  342D               	retlw	low _Button_State_Pressed
  2592  1F62  340A               	retlw	high _Button_State_Pressed
  2593                           
  2594                           ;initializer for _callback_notPressed
  2595  1F63  3458               	retlw	low _Button_DefaultCallback
  2596  1F64  341E               	retlw	high _Button_DefaultCallback
  2597                           
  2598                           ;initializer for _callback_pressed
  2599  1F65  3458               	retlw	low _Button_DefaultCallback
  2600  1F66  341E               	retlw	high _Button_DefaultCallback
  2601                           
  2602                           ;initializer for _Sensor_scanB
  2603  1F67  348F               	retlw	low _MTOUCH_CVD_ScanB_0
  2604  1F68  3413               	retlw	high _MTOUCH_CVD_ScanB_0
  2605                           
  2606                           ;initializer for _Sensor_scanA
  2607  1F69  346F               	retlw	low _MTOUCH_CVD_ScanA_0
  2608  1F6A  3412               	retlw	high _MTOUCH_CVD_ScanA_0
  2609                           
  2610                           ;initializer for _callback_sampled
  2611  1F6B  345A               	retlw	low _Sensor_DefaultCallback
  2612  1F6C  341E               	retlw	high _Sensor_DefaultCallback
  2613                           
  2614                           	psect	stringtext1
  2615  1000                     __pstringtext1:
  2616  1000                     _mtouch_button_init:
  2617  1000  3400               	retlw	0
  2618  1001  3400               	retlw	0
  2619  1002  3400               	retlw	0
  2620  1003  3400               	retlw	0
  2621  1004  3400               	retlw	0
  2622  1005  3400               	retlw	0
  2623  1006  3400               	retlw	0
  2624  1007  3400               	retlw	0
  2625  1008  3400               	retlw	0
  2626  1009  3400               	retlw	0
  2627  100A  3400               	retlw	0
  2628  100B  3400               	retlw	0
  2629  100C  3400               	retlw	0
  2630  100D  3400               	retlw	0
  2631  100E  3464               	retlw	100
  2632  100F  3401               	retlw	1
  2633  1010  3401               	retlw	1
  2634  1011  3401               	retlw	1
  2635  1012  3400               	retlw	0
  2636  1013  3400               	retlw	0
  2637  1014  3400               	retlw	0
  2638  1015  3400               	retlw	0
  2639  1016  3400               	retlw	0
  2640  1017  3400               	retlw	0
  2641  1018  3400               	retlw	0
  2642  1019  3400               	retlw	0
  2643  101A  3400               	retlw	0
  2644  101B  3400               	retlw	0
  2645  101C  3400               	retlw	0
  2646  101D  3400               	retlw	0
  2647  101E  3464               	retlw	100
  2648  101F  3401               	retlw	1
  2649  1020  3402               	retlw	2
  2650  1021  3402               	retlw	2
  2651  1022  3400               	retlw	0
  2652  1023  3400               	retlw	0
  2653  1024  3400               	retlw	0
  2654  1025  3400               	retlw	0
  2655  1026  3400               	retlw	0
  2656  1027  3400               	retlw	0
  2657  1028  3400               	retlw	0
  2658  1029  3400               	retlw	0
  2659  102A  3400               	retlw	0
  2660  102B  3400               	retlw	0
  2661  102C  3400               	retlw	0
  2662  102D  3400               	retlw	0
  2663  102E  3464               	retlw	100
  2664  102F  3401               	retlw	1
  2665  1030  3403               	retlw	3
  2666  1031  3403               	retlw	3
  2667  1032  3400               	retlw	0
  2668  1033  3400               	retlw	0
  2669  1034  3400               	retlw	0
  2670  1035  3400               	retlw	0
  2671  1036  3400               	retlw	0
  2672  1037  3400               	retlw	0
  2673  1038  3400               	retlw	0
  2674  1039  3400               	retlw	0
  2675  103A  3400               	retlw	0
  2676  103B  3400               	retlw	0
  2677  103C  3400               	retlw	0
  2678  103D  3400               	retlw	0
  2679  103E  3464               	retlw	100
  2680  103F  3401               	retlw	1
  2681  1040  3404               	retlw	4
  2682  1041  3404               	retlw	4
  2683  1042  3400               	retlw	0
  2684  1043  3400               	retlw	0
  2685  1044  3400               	retlw	0
  2686  1045  3400               	retlw	0
  2687  1046  3400               	retlw	0
  2688  1047  3400               	retlw	0
  2689  1048  3400               	retlw	0
  2690  1049  3400               	retlw	0
  2691  104A  3400               	retlw	0
  2692  104B  3400               	retlw	0
  2693  104C  3400               	retlw	0
  2694  104D  3400               	retlw	0
  2695  104E  3464               	retlw	100
  2696  104F  3401               	retlw	1
  2697  1050  3405               	retlw	5
  2698  1051  3405               	retlw	5
  2699  1052  3400               	retlw	0
  2700  1053  3400               	retlw	0
  2701  1054  3400               	retlw	0
  2702  1055  3400               	retlw	0
  2703  1056  3400               	retlw	0
  2704  1057  3400               	retlw	0
  2705  1058  3400               	retlw	0
  2706  1059  3400               	retlw	0
  2707  105A  3400               	retlw	0
  2708  105B  3400               	retlw	0
  2709  105C  3400               	retlw	0
  2710  105D  3400               	retlw	0
  2711  105E  3464               	retlw	100
  2712  105F  3401               	retlw	1
  2713  1060  3406               	retlw	6
  2714  1061  3406               	retlw	6
  2715  1062  3400               	retlw	0
  2716  1063  3400               	retlw	0
  2717  1064  3400               	retlw	0
  2718  1065  3400               	retlw	0
  2719  1066  3400               	retlw	0
  2720  1067  3400               	retlw	0
  2721  1068  3400               	retlw	0
  2722  1069  3400               	retlw	0
  2723  106A  3400               	retlw	0
  2724  106B  3400               	retlw	0
  2725  106C  3400               	retlw	0
  2726  106D  3400               	retlw	0
  2727  106E  3464               	retlw	100
  2728  106F  3401               	retlw	1
  2729  1070  3407               	retlw	7
  2730  1071  3407               	retlw	7
  2731  1072  3400               	retlw	0
  2732  1073  3400               	retlw	0
  2733  1074  3400               	retlw	0
  2734  1075  3400               	retlw	0
  2735  1076  3400               	retlw	0
  2736  1077  3400               	retlw	0
  2737  1078  3400               	retlw	0
  2738  1079  3400               	retlw	0
  2739  107A  3400               	retlw	0
  2740  107B  3400               	retlw	0
  2741  107C  3400               	retlw	0
  2742  107D  3400               	retlw	0
  2743  107E  3464               	retlw	100
  2744  107F  3401               	retlw	1
  2745  1080  3408               	retlw	8
  2746  1081  3408               	retlw	8
  2747  1082  3400               	retlw	0
  2748  1083  3400               	retlw	0
  2749  1084  3400               	retlw	0
  2750  1085  3400               	retlw	0
  2751  1086  3400               	retlw	0
  2752  1087  3400               	retlw	0
  2753  1088  3400               	retlw	0
  2754  1089  3400               	retlw	0
  2755  108A  3400               	retlw	0
  2756  108B  3400               	retlw	0
  2757  108C  3400               	retlw	0
  2758  108D  3400               	retlw	0
  2759  108E  3464               	retlw	100
  2760  108F  3401               	retlw	1
  2761  1090                     __end_of_mtouch_button_init:
  2762                           
  2763                           	psect	nvBANK1
  2764  00C7                     __pnvBANK1:
  2765  00C7                     _TMR1_InterruptHandler:
  2766  00C7                     	ds	2
  2767  00C9                     _timer1ReloadVal:
  2768  00C9                     	ds	2
  2769  00CB                     _TMR0_InterruptHandler:
  2770  00CB                     	ds	2
  2771  00CD                     _EUSART_ErrorHandler:
  2772  00CD                     	ds	2
  2773  00CF                     _EUSART_OverrunErrorHandler:
  2774  00CF                     	ds	2
  2775  00D1                     _EUSART_FramingErrorHandler:
  2776  00D1                     	ds	2
  2777  0003                     _STATUSbits	set	3
  2778  000D                     _PORTBbits	set	13
  2779  000C                     _PORTAbits	set	12
  2780  0019                     _T1GCONbits	set	25
  2781  0018                     _T1CONbits	set	24
  2782  0018                     _T1CON	set	24
  2783  0016                     _TMR1L	set	22
  2784  0017                     _TMR1H	set	23
  2785  0019                     _T1GCON	set	25
  2786  0015                     _TMR0	set	21
  2787  0011                     _PIR1bits	set	17
  2788  000B                     _INTCONbits	set	11
  2789  005F                     _GIE	set	95
  2790  009B                     _ADRES	set	155
  2791  0095                     _OPTION_REG	set	149
  2792  0091                     _PIE1bits	set	145
  2793  0095                     _OPTION_REGbits	set	149
  2794  008E                     _TRISC	set	142
  2795  008D                     _TRISB	set	141
  2796  008C                     _TRISA	set	140
  2797  0097                     _WDTCON	set	151
  2798  0098                     _OSCTUNE	set	152
  2799  0099                     _OSCCON	set	153
  2800  009D                     _ADCON0bits	set	157
  2801  009E                     _ADCON1	set	158
  2802  009D                     _ADCON0	set	157
  2803  010E                     _LATCbits	set	270
  2804  010C                     _LATAbits	set	268
  2805  010D                     _LATBbits	set	269
  2806  011E                     _APFCON1	set	286
  2807  011D                     _APFCON0	set	285
  2808  010E                     _LATC	set	270
  2809  010D                     _LATB	set	269
  2810  010C                     _LATA	set	268
  2811  0116                     _BORCON	set	278
  2812  0191                     _EEADR	set	401
  2813  0196                     _EECON2	set	406
  2814  0193                     _EEDATA	set	403
  2815  0195                     _EECON1	set	405
  2816  0195                     _EECON1bits	set	405
  2817  019A                     _TXREG	set	410
  2818  0199                     _RCREG	set	409
  2819  019D                     _RCSTAbits	set	413
  2820  019E                     _TXSTAbits	set	414
  2821  019C                     _SPBRGH	set	412
  2822  019B                     _SPBRGL	set	411
  2823  019E                     _TXSTA	set	414
  2824  019D                     _RCSTA	set	413
  2825  019F                     _BAUDCON	set	415
  2826  018C                     _ANSELA	set	396
  2827  018D                     _ANSELB	set	397
  2828  018E                     _ANSELC	set	398
  2829  020E                     _WPUC	set	526
  2830  020C                     _WPUA	set	524
  2831  020D                     _WPUB	set	525
  2832                           
  2833                           	psect	cinit
  2834  0028                     start_initialization:	
  2835                           ; #config settings
  2836                           
  2837  0028                     __initialization:	;BIGRAM
  2838                           
  2839                           ; Initialize objects allocated to BIGRAM
  2840  0028  301E               	movlw	low __pidataBIGRAM
  2841  0029  0084               	movwf	4
  2842  002A  3089               	movlw	(high __pidataBIGRAM)| (0+128)
  2843  002B  0085               	movwf	5
  2844  002C  300F               	movlw	low (0+8975)
  2845  002D  0086               	movwf	6
  2846  002E  3023               	movlw	high (0+8975)
  2847  002F  0087               	movwf	7
  2848  0030  3000               	movlw	0
  2849  0031  00FF               	movwf	btemp+1
  2850  0032  3051               	movlw	81
  2851  0033  3187  27F4  3180   	fcall	init_ram
  2852                           
  2853                           ; Initialize objects allocated to BANK0
  2854  0036  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  2855  0039  00EA               	movwf	__pdataBANK0& (0+127)
  2856  003A  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  2857  003D  00EB               	movwf	(__pdataBANK0+1)& (0+127)
  2858                           
  2859                           ; Initialize objects allocated to BANK1
  2860  003E  305D               	movlw	low __pidataBANK1
  2861  003F  0084               	movwf	4
  2862  0040  309F               	movlw	(high __pidataBANK1)| (0+128)
  2863  0041  0085               	movwf	5
  2864  0042  30B7               	movlw	low __pdataBANK1
  2865  0043  0086               	movwf	6
  2866  0044  3000               	movlw	high __pdataBANK1
  2867  0045  0087               	movwf	7
  2868  0046  3000               	movlw	0
  2869  0047  00FF               	movwf	btemp+1
  2870  0048  3010               	movlw	16
  2871  0049  3187  27F4  3180   	fcall	init_ram
  2872                           
  2873                           ; Clear objects allocated to BIGRAM
  2874  004C  3060               	movlw	low (0+9056)
  2875  004D  0084               	movwf	4
  2876  004E  3023               	movlw	high (0+9056)
  2877  004F  0085               	movwf	5
  2878  0050  3090               	movlw	144
  2879  0051  00FE               	movwf	btemp
  2880  0052  3000               	movlw	0
  2881  0053  00FF               	movwf	btemp+1
  2882  0054  319E  26C8  3180   	fcall	clear_ram0
  2883                           
  2884                           ; Clear objects allocated to COMMON
  2885  0057  01FA               	clrf	__pbssCOMMON& (0+127)
  2886  0058  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2887                           
  2888                           ; Clear objects allocated to BANK0
  2889  0059  3053               	movlw	low __pbssBANK0
  2890  005A  0084               	movwf	4
  2891  005B  3000               	movlw	high __pbssBANK0
  2892  005C  0085               	movwf	5
  2893  005D  3017               	movlw	23
  2894  005E  00FE               	movwf	btemp
  2895  005F  3000               	movlw	0
  2896  0060  00FF               	movwf	btemp+1
  2897  0061  319E  26C8  3180   	fcall	clear_ram0
  2898                           
  2899                           ; Clear objects allocated to BANK1
  2900  0064  30A0               	movlw	low __pbssBANK1
  2901  0065  0084               	movwf	4
  2902  0066  3000               	movlw	high __pbssBANK1
  2903  0067  0085               	movwf	5
  2904  0068  3017               	movlw	23
  2905  0069  00FE               	movwf	btemp
  2906  006A  3000               	movlw	0
  2907  006B  00FF               	movwf	btemp+1
  2908  006C  319E  26C8  3180   	fcall	clear_ram0
  2909  006F                     end_of_initialization:	
  2910                           ;End of C runtime variable initialization code
  2911                           
  2912  006F                     __end_of__initialization:
  2913  006F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2914  0070  0020               	movlb	0
  2915  0071  3192  2A30         	ljmp	_main	;jump to C main() function
  2916                           
  2917                           	psect	bssEEDATA
  2918  0000                     __pbssEEDATA:
  2919  0000                     _ge_memory_mass:
  2920  0000  0000               	db	0
  2921  0001  0000               	db	0
  2922  0002  0000               	db	0
  2923  0003  0000               	db	0
  2924  0004  0000               	db	0
  2925  0005  0000               	db	0
  2926  0006  0000               	db	0
  2927  0007  0000               	db	0
  2928  0008                     _ge_time_ms:
  2929  0008  0000               	db	0
  2930  0009  0000               	db	0
  2931                           
  2932                           	psect	bssCOMMON
  2933  007A                     __pbssCOMMON:
  2934  007A                     _g_digit_status:
  2935  007A                     	ds	1
  2936  007B                     MTOUCH_Random@seed:
  2937  007B                     	ds	1
  2938                           
  2939                           	psect	bssBANK0
  2940  0053                     __pbssBANK0:
  2941  0053                     _g_mass_calc:
  2942  0053                     	ds	3
  2943  0056                     _g_time_calc:
  2944  0056                     	ds	3
  2945  0059                     _g_mass:
  2946  0059                     	ds	2
  2947  005B                     _g_tmr0_longpress_duration_counter:
  2948  005B                     	ds	2
  2949  005D                     _gb_motor_timer_off:
  2950  005D                     	ds	1
  2951  005E                     _g_power_event:
  2952  005E                     	ds	1
  2953  005F                     _g_status:
  2954  005F                     	ds	1
  2955  0060                     _g_mode_status:
  2956  0060                     	ds	1
  2957  0061                     _g_sss_status:
  2958  0061                     	ds	1
  2959  0062                     _timer0ReloadVal:
  2960  0062                     	ds	1
  2961  0063                     _mtouch_request_init:
  2962  0063                     	ds	1
  2963  0064                     _mtouch_time_toScan:
  2964  0064                     	ds	1
  2965  0065                     _lowpowerActivated:
  2966  0065                     	ds	1
  2967  0066                     _sample_delay:
  2968  0066                     	ds	1
  2969  0067                     _packet_counter:
  2970  0067                     	ds	1
  2971  0068                     _currentScannSensor:
  2972  0068                     	ds	1
  2973  0069                     _sensor_globalFlags:
  2974  0069                     	ds	1
  2975                           
  2976                           	psect	dataBANK0
  2977  006A                     __pdataBANK0:
  2978  006A                     _g_time_ms:
  2979  006A                     	ds	2
  2980                           
  2981                           	psect	bssBANK1
  2982  00A0                     __pbssBANK1:
  2983  00A0                     _g_memory_mass:
  2984  00A0                     	ds	8
  2985  00A8                     _g_tmr1_motor_counter:
  2986  00A8                     	ds	2
  2987  00AA                     _g_time_ms_backup:
  2988  00AA                     	ds	2
  2989  00AC                     _g_mass_backup:
  2990  00AC                     	ds	2
  2991  00AE                     _g_7seg_change_digit_duration:
  2992  00AE                     	ds	2
  2993  00B0                     _g_motor_on_duration_ms:
  2994  00B0                     	ds	2
  2995  00B2                     _packet_sample:
  2996  00B2                     	ds	2
  2997  00B4                     _g_touch_status:
  2998  00B4                     	ds	1
  2999  00B5                     _SOUND_MODE_e:
  3000  00B5                     	ds	1
  3001  00B6                     _eusartRxLastError:
  3002  00B6                     	ds	1
  3003                           
  3004                           	psect	dataBANK1
  3005  00B7                     __pdataBANK1:
  3006  00B7                     _Button_StateMachine:
  3007  00B7                     	ds	6
  3008  00BD                     _callback_notPressed:
  3009  00BD                     	ds	2
  3010  00BF                     _callback_pressed:
  3011  00BF                     	ds	2
  3012  00C1                     _Sensor_scanB:
  3013  00C1                     	ds	2
  3014  00C3                     _Sensor_scanA:
  3015  00C3                     	ds	2
  3016  00C5                     _callback_sampled:
  3017  00C5                     	ds	2
  3018                           
  3019                           	psect	inittext
  3020  07F4                     init_ram:
  3021  07F4  00FE               	movwf	btemp
  3022  07F5                     initloop:
  3023  07F5  0012               	moviw fsr0++
  3024  07F6  001E               	movwi fsr1++
  3025  07F7  3001               	movlw	1
  3026  07F8  02FE               	subwf	btemp,f
  3027  07F9  3000               	movlw	0
  3028  07FA  3BFF               	subwfb	btemp+1,f
  3029  07FB  087F               	movf	btemp+1,w
  3030  07FC  047E               	iorwf	btemp,w
  3031  07FD  1D03               	skipz
  3032  07FE  2FF5               	goto	initloop
  3033  07FF  3400               	retlw	0
  3034                           
  3035                           	psect	clrtext
  3036  1EC8                     clear_ram0:	
  3037                           ;	Called with FSR0 containing the base address, and
  3038                           ;	btemp/btemp+1 has the size to clear
  3039                           
  3040  1EC8  0064               	clrwdt	;clear the watchdog before getting into this loop
  3041  1EC9                     clrloop0:
  3042  1EC9  0180               	clrf	0	;clear RAM location pointed to by FSR
  3043  1ECA  3101               	addfsr 0,1
  3044  1ECB  3001               	movlw	1
  3045  1ECC  02FE               	subwf	btemp,f
  3046  1ECD  3000               	movlw	0
  3047  1ECE  3BFF               	subwfb	btemp+1,f
  3048  1ECF  087F               	movf	btemp+1,w
  3049  1ED0  047E               	iorwf	btemp,w
  3050  1ED1  1D03               	skipz
  3051  1ED2  2EC9               	goto	clrloop0	;have we reached the end yet?
  3052  1ED3  3400               	retlw	0	;all done for this memory range, return
  3053                           
  3054                           	psect	cstackBANK1
  3055  00D3                     __pcstackBANK1:
  3056  00D3                     Automatic_Mode@motor_on_time_ms:
  3057                           
  3058                           ; 3 bytes @ 0x0
  3059  00D3                     	ds	3
  3060  00D6                     Automatic_Mode@buffer:
  3061                           
  3062                           ; 2 bytes @ 0x3
  3063  00D6                     	ds	2
  3064                           
  3065                           	psect	cstackCOMMON
  3066  0070                     __pcstackCOMMON:
  3067  0070                     ?_MTOUCH_Service_Mainloop:
  3068  0070                     ?_MTOUCH_Button_isPressed:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071  0070                     ?_MTOUCH_CVD_ScanA_0:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074  0070                     ?_MTOUCH_CVD_ScanB_0:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  0070                     ?_MTOUCH_CVD_ScanA_1:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080  0070                     ?_MTOUCH_CVD_ScanB_1:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083  0070                     ?_MTOUCH_CVD_ScanA_2:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086  0070                     ?_MTOUCH_CVD_ScanB_2:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  0070                     ?_MTOUCH_CVD_ScanA_3:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  0070                     ?_MTOUCH_CVD_ScanB_3:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095  0070                     ?_MTOUCH_CVD_ScanA_4:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098  0070                     ?_MTOUCH_CVD_ScanB_4:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101  0070                     ?_MTOUCH_CVD_ScanA_5:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104  0070                     ?_MTOUCH_CVD_ScanB_5:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107  0070                     ?_MTOUCH_CVD_ScanA_6:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110  0070                     ?_MTOUCH_CVD_ScanB_6:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113  0070                     ?_MTOUCH_CVD_ScanA_7:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116  0070                     ?_MTOUCH_CVD_ScanB_7:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119  0070                     ?_MTOUCH_CVD_ScanA_8:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122  0070                     ?_MTOUCH_CVD_ScanB_8:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125  0070                     ?_MTOUCH_Sensor_Enable:	
  3126                           ; 1 bytes @ 0x0
  3127                           
  3128  0070                     ?_Sensor_Service:	
  3129                           ; 1 bytes @ 0x0
  3130                           
  3131  0070                     ?_MTOUCH_Random:	
  3132                           ; 1 bytes @ 0x0
  3133                           
  3134  0070                     ?_Sensor_Acq_ExecuteScan:	
  3135                           ; 1 bytes @ 0x0
  3136                           
  3137  0070                     ?_MTOUCH_Delay:	
  3138                           ; 1 bytes @ 0x0
  3139                           
  3140  0070                     ?_MTOUCH_Button_InitializeAll:	
  3141                           ; 1 bytes @ 0x0
  3142                           
  3143  0070                     ?_MTOUCH_Button_ServiceAll:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  0070                     ?_MTOUCH_needReburst:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  0070                     ?_MTOUCH_Tick:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  0070                     ?_MTOUCH_Button_Tick:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155  0070                     ?_Button_Service:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158  0070                     ?_PIN_MANAGER_Initialize:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161  0070                     ?_OSCILLATOR_Initialize:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164  0070                     ?_WDT_Initialize:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167  0070                     ?_TMR1_Initialize:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170  0070                     ?_TMR0_Initialize:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173  0070                     ?_EUSART_Initialize:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176  0070                     ?_TMR0_ISR:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179  0070                     ??_TMR0_ISR:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182  0070                     ?_TMR1_ISR:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185  0070                     ?_TMR0_DefaultInterruptHandler:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188  0070                     ??_TMR0_DefaultInterruptHandler:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191  0070                     ?_TMR1_DefaultInterruptHandler:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194  0070                     ??_TMR1_DefaultInterruptHandler:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197  0070                     ?_EEPROM_init:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200  0070                     ?_init_panel:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203  0070                     ?_tmr0_long_press_duration:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206  0070                     ??_tmr0_long_press_duration:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209  0070                     ?_tmr1_motor_on_duration:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212  0070                     ??_tmr1_motor_on_duration:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215  0070                     ?_Main_Routine:	
  3216                           ; 1 bytes @ 0x0
  3217                           
  3218  0070                     ?_Toggle_OFFLED:	
  3219                           ; 1 bytes @ 0x0
  3220                           
  3221  0070                     ?_Toggle_Touch_LEDs:	
  3222                           ; 1 bytes @ 0x0
  3223                           
  3224  0070                     ?_Toggle_7seg:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227  0070                     ?_Reset_Digit_Value:	
  3228                           ; 1 bytes @ 0x0
  3229                           
  3230  0070                     ?_TX_Command:	
  3231                           ; 1 bytes @ 0x0
  3232                           
  3233  0070                     ?_Toggle_Touches:	
  3234                           ; 1 bytes @ 0x0
  3235                           
  3236  0070                     ?_Toggle_PushButton:	
  3237                           ; 1 bytes @ 0x0
  3238                           
  3239  0070                     ?_Automatic_Mode:	
  3240                           ; 1 bytes @ 0x0
  3241                           
  3242  0070                     ?_MTOUCH_Sensor_Initialize:	
  3243                           ; 1 bytes @ 0x0
  3244                           
  3245  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251  0070                     ?_MTOUCH_Sensor_SampleAll:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257  0070                     ?_MTOUCH_Sensor_Calibrate:	
  3258                           ; 1 bytes @ 0x0
  3259                           
  3260  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  3261                           ; 1 bytes @ 0x0
  3262                           
  3263  0070                     ?_MTOUCH_Sensor_wasSampled:	
  3264                           ; 1 bytes @ 0x0
  3265                           
  3266  0070                     ?_MTOUCH_Initialize:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269  0070                     ?_MTOUCH_Button_Initialize:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272  0070                     ?_SYSTEM_Initialize:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275  0070                     ?_INTERRUPT_InterruptManager:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278  0070                     ?_EUSART_is_tx_ready:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0070                     ?_EUSART_is_rx_ready:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284  0070                     ?_EUSART_Read:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0070                     ?_EUSART_Write:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290  0070                     ?_TMR1_StartTimer:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293  0070                     ?_TMR1_StopTimer:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296  0070                     ?_TMR1_WriteTimer:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299  0070                     ?_SET_SOUND_MODE:	
  3300                           ; 1 bytes @ 0x0
  3301                           
  3302  0070                     ?_main:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305  0070                     ?_FCN_NEXT:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0070                     ?_FCN_UP:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0070                     ?_FCN_POWER:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314  0070                     ?_RX_Command:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317  0070                     ?_Manual_Mode:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320  0070                     ?_Timer_Mode:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323  0070                     ?i1_TMR1_StopTimer:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326  0070                     ??i1_TMR1_StopTimer:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335  0070                     TMR1_WriteTimer@timerVal:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338                           
  3339                           ; 2 bytes @ 0x0
  3340  0070                     	ds	2
  3341  0072                     ??_MTOUCH_Button_isPressed:
  3342  0072                     ?_Sensor_DefaultCallback:	
  3343                           ; 1 bytes @ 0x2
  3344                           
  3345  0072                     ??_MTOUCH_CVD_ScanA_0:	
  3346                           ; 1 bytes @ 0x2
  3347                           
  3348  0072                     ??_MTOUCH_CVD_ScanB_0:	
  3349                           ; 1 bytes @ 0x2
  3350                           
  3351  0072                     ??_MTOUCH_CVD_ScanA_1:	
  3352                           ; 1 bytes @ 0x2
  3353                           
  3354  0072                     ??_MTOUCH_CVD_ScanB_1:	
  3355                           ; 1 bytes @ 0x2
  3356                           
  3357  0072                     ??_MTOUCH_CVD_ScanA_2:	
  3358                           ; 1 bytes @ 0x2
  3359                           
  3360  0072                     ??_MTOUCH_CVD_ScanB_2:	
  3361                           ; 1 bytes @ 0x2
  3362                           
  3363  0072                     ??_MTOUCH_CVD_ScanA_3:	
  3364                           ; 1 bytes @ 0x2
  3365                           
  3366  0072                     ??_MTOUCH_CVD_ScanB_3:	
  3367                           ; 1 bytes @ 0x2
  3368                           
  3369  0072                     ??_MTOUCH_CVD_ScanA_4:	
  3370                           ; 1 bytes @ 0x2
  3371                           
  3372  0072                     ??_MTOUCH_CVD_ScanB_4:	
  3373                           ; 1 bytes @ 0x2
  3374                           
  3375  0072                     ??_MTOUCH_CVD_ScanA_5:	
  3376                           ; 1 bytes @ 0x2
  3377                           
  3378  0072                     ??_MTOUCH_CVD_ScanB_5:	
  3379                           ; 1 bytes @ 0x2
  3380                           
  3381  0072                     ??_MTOUCH_CVD_ScanA_6:	
  3382                           ; 1 bytes @ 0x2
  3383                           
  3384  0072                     ??_MTOUCH_CVD_ScanB_6:	
  3385                           ; 1 bytes @ 0x2
  3386                           
  3387  0072                     ??_MTOUCH_CVD_ScanA_7:	
  3388                           ; 1 bytes @ 0x2
  3389                           
  3390  0072                     ??_MTOUCH_CVD_ScanB_7:	
  3391                           ; 1 bytes @ 0x2
  3392                           
  3393  0072                     ??_MTOUCH_CVD_ScanA_8:	
  3394                           ; 1 bytes @ 0x2
  3395                           
  3396  0072                     ??_MTOUCH_CVD_ScanB_8:	
  3397                           ; 1 bytes @ 0x2
  3398                           
  3399  0072                     ?_Sensor_isEnabled:	
  3400                           ; 1 bytes @ 0x2
  3401                           
  3402  0072                     ?_Sensor_RawSample_Update:	
  3403                           ; 1 bytes @ 0x2
  3404                           
  3405  0072                     ?_Sensor_setSampled:	
  3406                           ; 1 bytes @ 0x2
  3407                           
  3408  0072                     ?_Sensor_setActive:	
  3409                           ; 1 bytes @ 0x2
  3410                           
  3411  0072                     ?_Sensor_setInactive:	
  3412                           ; 1 bytes @ 0x2
  3413                           
  3414  0072                     ?_Sensor_setScanFunction:	
  3415                           ; 1 bytes @ 0x2
  3416                           
  3417  0072                     ??_MTOUCH_Random:	
  3418                           ; 1 bytes @ 0x2
  3419                           
  3420  0072                     ??_MTOUCH_Delay:	
  3421                           ; 1 bytes @ 0x2
  3422                           
  3423  0072                     ??_MTOUCH_needReburst:	
  3424                           ; 1 bytes @ 0x2
  3425                           
  3426  0072                     ?_Button_DefaultCallback:	
  3427                           ; 1 bytes @ 0x2
  3428                           
  3429  0072                     ?_Button_Deviation_Update:	
  3430                           ; 1 bytes @ 0x2
  3431                           
  3432  0072                     ?_Button_Baseline_Update:	
  3433                           ; 1 bytes @ 0x2
  3434                           
  3435  0072                     ?_Button_Tick_helper:	
  3436                           ; 1 bytes @ 0x2
  3437                           
  3438  0072                     ??_PIN_MANAGER_Initialize:	
  3439                           ; 1 bytes @ 0x2
  3440                           
  3441  0072                     ??_OSCILLATOR_Initialize:	
  3442                           ; 1 bytes @ 0x2
  3443                           
  3444  0072                     ??_WDT_Initialize:	
  3445                           ; 1 bytes @ 0x2
  3446                           
  3447  0072                     ??_TMR1_ISR:	
  3448                           ; 1 bytes @ 0x2
  3449                           
  3450  0072                     ?_EUSART_SetFramingErrorHandler:	
  3451                           ; 1 bytes @ 0x2
  3452                           
  3453  0072                     ?_EUSART_SetOverrunErrorHandler:	
  3454                           ; 1 bytes @ 0x2
  3455                           
  3456  0072                     ?_EUSART_SetErrorHandler:	
  3457                           ; 1 bytes @ 0x2
  3458                           
  3459  0072                     ?_TMR0_SetInterruptHandler:	
  3460                           ; 1 bytes @ 0x2
  3461                           
  3462  0072                     ?_TMR1_SetInterruptHandler:	
  3463                           ; 1 bytes @ 0x2
  3464                           
  3465  0072                     ?_GENERATE_PULSE:	
  3466                           ; 1 bytes @ 0x2
  3467                           
  3468  0072                     ??_Toggle_OFFLED:	
  3469                           ; 1 bytes @ 0x2
  3470                           
  3471  0072                     ??_Toggle_Touch_LEDs:	
  3472                           ; 1 bytes @ 0x2
  3473                           
  3474  0072                     ??_Reset_Digit_Value:	
  3475                           ; 1 bytes @ 0x2
  3476                           
  3477  0072                     ??_Toggle_Touches:	
  3478                           ; 1 bytes @ 0x2
  3479                           
  3480  0072                     ??_Toggle_PushButton:	
  3481                           ; 1 bytes @ 0x2
  3482                           
  3483  0072                     ??_MTOUCH_Sensor_Scan_Initialize:	
  3484                           ; 1 bytes @ 0x2
  3485                           
  3486  0072                     ??_MTOUCH_Sensor_isCalibrated:	
  3487                           ; 1 bytes @ 0x2
  3488                           
  3489  0072                     ??_MTOUCH_Sensor_Calibrate:	
  3490                           ; 1 bytes @ 0x2
  3491                           
  3492  0072                     ??_MTOUCH_Button_Initialize:	
  3493                           ; 1 bytes @ 0x2
  3494                           
  3495  0072                     ??_INTERRUPT_InterruptManager:	
  3496                           ; 1 bytes @ 0x2
  3497                           
  3498  0072                     ??_EUSART_is_tx_ready:	
  3499                           ; 1 bytes @ 0x2
  3500                           
  3501  0072                     ??_EUSART_is_rx_ready:	
  3502                           ; 1 bytes @ 0x2
  3503                           
  3504  0072                     ??_EUSART_Read:	
  3505                           ; 1 bytes @ 0x2
  3506                           
  3507  0072                     ??_EUSART_Write:	
  3508                           ; 1 bytes @ 0x2
  3509                           
  3510  0072                     ??_TMR1_StartTimer:	
  3511                           ; 1 bytes @ 0x2
  3512                           
  3513  0072                     ??_TMR1_StopTimer:	
  3514                           ; 1 bytes @ 0x2
  3515                           
  3516  0072                     ??_TMR1_WriteTimer:	
  3517                           ; 1 bytes @ 0x2
  3518                           
  3519  0072                     ??_RX_Command:	
  3520                           ; 1 bytes @ 0x2
  3521                           
  3522  0072                     ?___eecpymem:	
  3523                           ; 1 bytes @ 0x2
  3524                           
  3525  0072                     ?___memcpyee:	
  3526                           ; 1 bytes @ 0x2
  3527                           
  3528  0072                     ?_abs:	
  3529                           ; 1 bytes @ 0x2
  3530                           
  3531  0072                     ?_memcpy:	
  3532                           ; 2 bytes @ 0x2
  3533                           
  3534  0072                     ?___wmul:	
  3535                           ; 2 bytes @ 0x2
  3536                           
  3537  0072                     ?___lwdiv:	
  3538                           ; 2 bytes @ 0x2
  3539                           
  3540  0072                     ?___lwmod:	
  3541                           ; 2 bytes @ 0x2
  3542                           
  3543  0072                     ?___tmul:	
  3544                           ; 2 bytes @ 0x2
  3545                           
  3546  0072                     ?___ltdiv:	
  3547                           ; 3 bytes @ 0x2
  3548                           
  3549  0072                     Sensor_DefaultCallback@sensor:	
  3550                           ; 3 bytes @ 0x2
  3551                           
  3552  0072                     Button_DefaultCallback@button:	
  3553                           ; 1 bytes @ 0x2
  3554                           
  3555  0072                     _EUSART_is_tx_ready$1214:	
  3556                           ; 1 bytes @ 0x2
  3557                           
  3558  0072                     EUSART_Write@txData:	
  3559                           ; 1 bytes @ 0x2
  3560                           
  3561  0072                     ___eecpymem@from:	
  3562                           ; 1 bytes @ 0x2
  3563                           
  3564  0072                     ___memcpyee@from:	
  3565                           ; 1 bytes @ 0x2
  3566                           
  3567  0072                     Sensor_RawSample_Update@sensor:	
  3568                           ; 1 bytes @ 0x2
  3569                           
  3570  0072                     Sensor_setScanFunction@sensor:	
  3571                           ; 2 bytes @ 0x2
  3572                           
  3573  0072                     Sensor_isEnabled@sensor:	
  3574                           ; 2 bytes @ 0x2
  3575                           
  3576  0072                     Sensor_setActive@sensor:	
  3577                           ; 2 bytes @ 0x2
  3578                           
  3579  0072                     Sensor_setInactive@sensor:	
  3580                           ; 2 bytes @ 0x2
  3581                           
  3582  0072                     Sensor_setSampled@sensor:	
  3583                           ; 2 bytes @ 0x2
  3584                           
  3585  0072                     Button_Tick_helper@button:	
  3586                           ; 2 bytes @ 0x2
  3587                           
  3588  0072                     Button_Deviation_Update@button:	
  3589                           ; 2 bytes @ 0x2
  3590                           
  3591  0072                     Button_Baseline_Update@button:	
  3592                           ; 2 bytes @ 0x2
  3593                           
  3594  0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3595                           ; 2 bytes @ 0x2
  3596                           
  3597  0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3598                           ; 2 bytes @ 0x2
  3599                           
  3600  0072                     EUSART_SetErrorHandler@interruptHandler:	
  3601                           ; 2 bytes @ 0x2
  3602                           
  3603  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  3604                           ; 2 bytes @ 0x2
  3605                           
  3606  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3607                           ; 2 bytes @ 0x2
  3608                           
  3609  0072                     GENERATE_PULSE@NUMBER_OF_PULSE:	
  3610                           ; 2 bytes @ 0x2
  3611                           
  3612  0072                     ___wmul@multiplier:	
  3613                           ; 2 bytes @ 0x2
  3614                           
  3615  0072                     ___lwdiv@divisor:	
  3616                           ; 2 bytes @ 0x2
  3617                           
  3618  0072                     ___lwmod@divisor:	
  3619                           ; 2 bytes @ 0x2
  3620                           
  3621  0072                     abs@a:	
  3622                           ; 2 bytes @ 0x2
  3623                           
  3624  0072                     memcpy@d1:	
  3625                           ; 2 bytes @ 0x2
  3626                           
  3627  0072                     ___tmul@multiplier:	
  3628                           ; 2 bytes @ 0x2
  3629                           
  3630  0072                     ___ltdiv@divisor:	
  3631                           ; 3 bytes @ 0x2
  3632                           
  3633                           
  3634                           ; 3 bytes @ 0x2
  3635  0072                     	ds	1
  3636  0073                     ??_Sensor_DefaultCallback:
  3637  0073                     ??_Button_DefaultCallback:	
  3638                           ; 1 bytes @ 0x3
  3639                           
  3640  0073                     ??_TX_Command:	
  3641                           ; 1 bytes @ 0x3
  3642                           
  3643  0073                     MTOUCH_Delay@i:	
  3644                           ; 1 bytes @ 0x3
  3645                           
  3646  0073                     TX_Command@txData:	
  3647                           ; 1 bytes @ 0x3
  3648                           
  3649  0073                     RX_Command@buffer:	
  3650                           ; 1 bytes @ 0x3
  3651                           
  3652  0073                     ___eecpymem@size:	
  3653                           ; 1 bytes @ 0x3
  3654                           
  3655  0073                     ___memcpyee@size:	
  3656                           ; 1 bytes @ 0x3
  3657                           
  3658                           
  3659                           ; 1 bytes @ 0x3
  3660  0073                     	ds	1
  3661  0074                     ??_Sensor_isEnabled:
  3662  0074                     ??_Sensor_RawSample_Update:	
  3663                           ; 1 bytes @ 0x4
  3664                           
  3665  0074                     ??_Sensor_setSampled:	
  3666                           ; 1 bytes @ 0x4
  3667                           
  3668  0074                     ??_abs:	
  3669                           ; 1 bytes @ 0x4
  3670                           
  3671  0074                     ??_Sensor_setActive:	
  3672                           ; 1 bytes @ 0x4
  3673                           
  3674  0074                     ??_Sensor_setInactive:	
  3675                           ; 1 bytes @ 0x4
  3676                           
  3677  0074                     ??_Sensor_setScanFunction:	
  3678                           ; 1 bytes @ 0x4
  3679                           
  3680  0074                     ??_Button_Baseline_Update:	
  3681                           ; 1 bytes @ 0x4
  3682                           
  3683  0074                     ??_Button_Tick_helper:	
  3684                           ; 1 bytes @ 0x4
  3685                           
  3686  0074                     ??_TMR1_Initialize:	
  3687                           ; 1 bytes @ 0x4
  3688                           
  3689  0074                     ??_TMR0_Initialize:	
  3690                           ; 1 bytes @ 0x4
  3691                           
  3692  0074                     ??_EUSART_Initialize:	
  3693                           ; 1 bytes @ 0x4
  3694                           
  3695  0074                     ??_EUSART_SetFramingErrorHandler:	
  3696                           ; 1 bytes @ 0x4
  3697                           
  3698  0074                     ??_EUSART_SetOverrunErrorHandler:	
  3699                           ; 1 bytes @ 0x4
  3700                           
  3701  0074                     ??_EUSART_SetErrorHandler:	
  3702                           ; 1 bytes @ 0x4
  3703                           
  3704  0074                     ??_TMR0_SetInterruptHandler:	
  3705                           ; 1 bytes @ 0x4
  3706                           
  3707  0074                     ??_TMR1_SetInterruptHandler:	
  3708                           ; 1 bytes @ 0x4
  3709                           
  3710  0074                     ??_Toggle_7seg:	
  3711                           ; 1 bytes @ 0x4
  3712                           
  3713  0074                     ??_FCN_NEXT:	
  3714                           ; 1 bytes @ 0x4
  3715                           
  3716  0074                     ??_FCN_UP:	
  3717                           ; 1 bytes @ 0x4
  3718                           
  3719  0074                     ??___eecpymem:	
  3720                           ; 1 bytes @ 0x4
  3721                           
  3722  0074                     ??___memcpyee:	
  3723                           ; 1 bytes @ 0x4
  3724                           
  3725  0074                     GENERATE_PULSE@PULSE_PERIODE:	
  3726                           ; 1 bytes @ 0x4
  3727                           
  3728  0074                     ___wmul@multiplicand:	
  3729                           ; 2 bytes @ 0x4
  3730                           
  3731  0074                     ___lwdiv@dividend:	
  3732                           ; 2 bytes @ 0x4
  3733                           
  3734  0074                     ___lwmod@dividend:	
  3735                           ; 2 bytes @ 0x4
  3736                           
  3737  0074                     memcpy@s1:	
  3738                           ; 2 bytes @ 0x4
  3739                           
  3740  0074                     Button_Deviation_Update@deviation:	
  3741                           ; 2 bytes @ 0x4
  3742                           
  3743                           
  3744                           ; 4 bytes @ 0x4
  3745  0074                     	ds	1
  3746  0075                     ??_init_panel:
  3747  0075                     ___tmul@multiplicand:	
  3748                           ; 1 bytes @ 0x5
  3749                           
  3750  0075                     ___ltdiv@dividend:	
  3751                           ; 3 bytes @ 0x5
  3752                           
  3753                           
  3754                           ; 3 bytes @ 0x5
  3755  0075                     	ds	1
  3756  0076                     ??_MTOUCH_Button_Tick:
  3757  0076                     ??_GENERATE_PULSE:	
  3758                           ; 1 bytes @ 0x6
  3759                           
  3760  0076                     ??___wmul:	
  3761                           ; 1 bytes @ 0x6
  3762                           
  3763  0076                     ??___lwdiv:	
  3764                           ; 1 bytes @ 0x6
  3765                           
  3766  0076                     ??___lwmod:	
  3767                           ; 1 bytes @ 0x6
  3768                           
  3769  0076                     MTOUCH_Button_Initialize@name:	
  3770                           ; 1 bytes @ 0x6
  3771                           
  3772  0076                     MTOUCH_Button_isPressed@name:	
  3773                           ; 1 bytes @ 0x6
  3774                           
  3775  0076                     ___eecpymem@cp:	
  3776                           ; 1 bytes @ 0x6
  3777                           
  3778  0076                     ___memcpyee@ptr:	
  3779                           ; 1 bytes @ 0x6
  3780                           
  3781  0076                     GENERATE_PULSE@counter:	
  3782                           ; 1 bytes @ 0x6
  3783                           
  3784  0076                     ___wmul@product:	
  3785                           ; 2 bytes @ 0x6
  3786                           
  3787  0076                     memcpy@n:	
  3788                           ; 2 bytes @ 0x6
  3789                           
  3790                           
  3791                           ; 2 bytes @ 0x6
  3792  0076                     	ds	1
  3793  0077                     ___eecpymem@to:
  3794  0077                     ___memcpyee@to:	
  3795                           ; 1 bytes @ 0x7
  3796                           
  3797  0077                     ___lwdiv@counter:	
  3798                           ; 1 bytes @ 0x7
  3799                           
  3800  0077                     ___lwmod@counter:	
  3801                           ; 1 bytes @ 0x7
  3802                           
  3803  0077                     MTOUCH_Button_Initialize@button:	
  3804                           ; 1 bytes @ 0x7
  3805                           
  3806                           
  3807                           ; 2 bytes @ 0x7
  3808  0077                     	ds	1
  3809  0078                     ?_Sensor_Sampled_Reset:
  3810  0078                     ??_memcpy:	
  3811                           ; 1 bytes @ 0x8
  3812                           
  3813  0078                     ??_SET_SOUND_MODE:	
  3814                           ; 1 bytes @ 0x8
  3815                           
  3816  0078                     ??___tmul:	
  3817                           ; 1 bytes @ 0x8
  3818                           
  3819  0078                     ??___ltdiv:	
  3820                           ; 1 bytes @ 0x8
  3821                           
  3822  0078                     ?_MTOUCH_Sensor_RawSample_Get:	
  3823                           ; 1 bytes @ 0x8
  3824                           
  3825  0078                     ?___eetoi:	
  3826                           ; 2 bytes @ 0x8
  3827                           
  3828  0078                     ?___itoee:	
  3829                           ; 2 bytes @ 0x8
  3830                           
  3831  0078                     MTOUCH_Sensor_Enable@sensor:	
  3832                           ; 2 bytes @ 0x8
  3833                           
  3834  0078                     MTOUCH_Sensor_wasSampled@sensor:	
  3835                           ; 1 bytes @ 0x8
  3836                           
  3837  0078                     Sensor_Acq_ExecuteScan@result:	
  3838                           ; 1 bytes @ 0x8
  3839                           
  3840  0078                     Sensor_Sampled_Reset@sensor:	
  3841                           ; 2 bytes @ 0x8
  3842                           
  3843  0078                     ___itoee@data:	
  3844                           ; 2 bytes @ 0x8
  3845                           
  3846  0078                     ___lwdiv@quotient:	
  3847                           ; 2 bytes @ 0x8
  3848                           
  3849                           
  3850                           ; 2 bytes @ 0x8
  3851  0078                     	ds	1
  3852  0079                     ??_MTOUCH_Button_InitializeAll:
  3853  0079                     ??_Motor_ON:	
  3854                           ; 1 bytes @ 0x9
  3855                           
  3856                           
  3857                           ; 1 bytes @ 0x9
  3858  0079                     	ds	1
  3859  007A                     ??_Sensor_Sampled_Reset:
  3860  007A                     ??_MTOUCH_Tick:	
  3861                           ; 1 bytes @ 0xA
  3862                           
  3863  007A                     ??_Button_Reading_Update:	
  3864                           ; 1 bytes @ 0xA
  3865                           
  3866  007A                     ??_Main_Routine:	
  3867                           ; 1 bytes @ 0xA
  3868                           
  3869  007A                     ??_MTOUCH_Initialize:	
  3870                           ; 1 bytes @ 0xA
  3871                           
  3872  007A                     ??_SYSTEM_Initialize:	
  3873                           ; 1 bytes @ 0xA
  3874                           
  3875  007A                     ??_main:	
  3876                           ; 1 bytes @ 0xA
  3877                           
  3878  007A                     ??_FCN_POWER:	
  3879                           ; 1 bytes @ 0xA
  3880                           
  3881                           
  3882                           	psect	cstackBANK0
  3883  0020                     __pcstackBANK0:	
  3884                           ; 1 bytes @ 0xA
  3885                           
  3886  0020                     ??_MTOUCH_Sensor_Enable:
  3887  0020                     ??_Sensor_Acq_ExecuteScan:	
  3888                           ; 1 bytes @ 0x0
  3889                           
  3890  0020                     ??_Button_Deviation_Update:	
  3891                           ; 1 bytes @ 0x0
  3892                           
  3893  0020                     ?_set_digit_counters:	
  3894                           ; 1 bytes @ 0x0
  3895                           
  3896  0020                     ??_MTOUCH_Sensor_RawSample_Get:	
  3897                           ; 1 bytes @ 0x0
  3898                           
  3899  0020                     ??_MTOUCH_Sensor_Sampled_ResetAll:	
  3900                           ; 1 bytes @ 0x0
  3901                           
  3902  0020                     ??_MTOUCH_Sensor_wasSampled:	
  3903                           ; 1 bytes @ 0x0
  3904                           
  3905  0020                     ??___eetoi:	
  3906                           ; 1 bytes @ 0x0
  3907                           
  3908  0020                     ??___itoee:	
  3909                           ; 1 bytes @ 0x0
  3910                           
  3911  0020                     MTOUCH_Button_Tick@i:	
  3912                           ; 1 bytes @ 0x0
  3913                           
  3914  0020                     SET_SOUND_MODE@MODE:	
  3915                           ; 1 bytes @ 0x0
  3916                           
  3917  0020                     memcpy@tmp:	
  3918                           ; 1 bytes @ 0x0
  3919                           
  3920  0020                     set_digit_counters@mass:	
  3921                           ; 1 bytes @ 0x0
  3922                           
  3923  0020                     ___tmul@product:	
  3924                           ; 2 bytes @ 0x0
  3925                           
  3926  0020                     ___ltdiv@quotient:	
  3927                           ; 3 bytes @ 0x0
  3928                           
  3929                           
  3930                           ; 3 bytes @ 0x0
  3931  0020                     	ds	1
  3932  0021                     memcpy@d:
  3933                           
  3934                           ; 2 bytes @ 0x1
  3935  0021                     	ds	1
  3936  0022                     ___itoee@addr:
  3937  0022                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  3938                           ; 1 bytes @ 0x2
  3939                           
  3940  0022                     set_digit_counters@time:	
  3941                           ; 2 bytes @ 0x2
  3942                           
  3943  0022                     ___eetoi@data:	
  3944                           ; 2 bytes @ 0x2
  3945                           
  3946                           
  3947                           ; 2 bytes @ 0x2
  3948  0022                     	ds	1
  3949  0023                     ___ltdiv@counter:
  3950  0023                     memcpy@s:	
  3951                           ; 1 bytes @ 0x3
  3952                           
  3953                           
  3954                           ; 2 bytes @ 0x3
  3955  0023                     	ds	1
  3956  0024                     ?_Sensor_Acq_ExecutePacket:
  3957  0024                     ??_set_digit_counters:	
  3958                           ; 1 bytes @ 0x4
  3959                           
  3960  0024                     ??_MTOUCH_Sensor_Initialize:	
  3961                           ; 1 bytes @ 0x4
  3962                           
  3963  0024                     ?_Motor_ON:	
  3964                           ; 1 bytes @ 0x4
  3965                           
  3966  0024                     MTOUCH_Sensor_RawSample_Get@name:	
  3967                           ; 1 bytes @ 0x4
  3968                           
  3969  0024                     ___eetoi@addr:	
  3970                           ; 1 bytes @ 0x4
  3971                           
  3972  0024                     Sensor_Acq_ExecutePacket@sensor:	
  3973                           ; 1 bytes @ 0x4
  3974                           
  3975  0024                     Motor_ON@motor_on_time_ms:	
  3976                           ; 2 bytes @ 0x4
  3977                           
  3978                           
  3979                           ; 3 bytes @ 0x4
  3980  0024                     	ds	1
  3981  0025                     ?_Button_Baseline_Initialize:
  3982  0025                     ?_Button_Reading_Update_Helper:	
  3983                           ; 1 bytes @ 0x5
  3984                           
  3985  0025                     ??_EEPROM_init:	
  3986                           ; 1 bytes @ 0x5
  3987                           
  3988  0025                     MTOUCH_Button_InitializeAll@button:	
  3989                           ; 1 bytes @ 0x5
  3990                           
  3991  0025                     Button_Reading_Update_Helper@button:	
  3992                           ; 1 bytes @ 0x5
  3993                           
  3994  0025                     Button_Baseline_Initialize@button:	
  3995                           ; 2 bytes @ 0x5
  3996                           
  3997  0025                     set_digit_counters@buffer:	
  3998                           ; 2 bytes @ 0x5
  3999                           
  4000                           
  4001                           ; 2 bytes @ 0x5
  4002  0025                     	ds	1
  4003  0026                     ??_Sensor_Acq_ExecutePacket:
  4004  0026                     EEPROM_init@i:	
  4005                           ; 1 bytes @ 0x6
  4006                           
  4007                           
  4008                           ; 1 bytes @ 0x6
  4009  0026                     	ds	1
  4010  0027                     ??_Button_Baseline_Initialize:
  4011  0027                     ??_Button_Reading_Update_Helper:	
  4012                           ; 1 bytes @ 0x7
  4013                           
  4014  0027                     Sensor_Acq_ExecutePacket@ADCON0_temp:	
  4015                           ; 1 bytes @ 0x7
  4016                           
  4017                           
  4018                           ; 1 bytes @ 0x7
  4019  0027                     	ds	1
  4020  0028                     MTOUCH_Sensor_Initialize@sensor:
  4021  0028                     Sensor_Acq_ExecutePacket@ADCON1_temp:	
  4022                           ; 1 bytes @ 0x8
  4023                           
  4024                           
  4025                           ; 1 bytes @ 0x8
  4026  0028                     	ds	1
  4027  0029                     ?_Button_Reading_Update:
  4028  0029                     ??_MTOUCH_Sensor_InitializeAll:	
  4029                           ; 1 bytes @ 0x9
  4030                           
  4031  0029                     Sensor_Acq_ExecutePacket@GIE_state:	
  4032                           ; 1 bytes @ 0x9
  4033                           
  4034  0029                     Button_Reading_Update@button:	
  4035                           ; 1 bytes @ 0x9
  4036                           
  4037                           
  4038                           ; 2 bytes @ 0x9
  4039  0029                     	ds	1
  4040  002A                     MTOUCH_Sensor_InitializeAll@sensor:
  4041  002A                     Sensor_Acq_ExecutePacket@error:	
  4042                           ; 1 bytes @ 0xA
  4043                           
  4044                           
  4045                           ; 1 bytes @ 0xA
  4046  002A                     	ds	1
  4047  002B                     ?_Sensor_Acquisition:
  4048  002B                     ?_Button_State_Initializing:	
  4049                           ; 1 bytes @ 0xB
  4050                           
  4051  002B                     ?_Button_State_NotPressed:	
  4052                           ; 1 bytes @ 0xB
  4053                           
  4054  002B                     ?_Button_State_Pressed:	
  4055                           ; 1 bytes @ 0xB
  4056                           
  4057  002B                     Sensor_Acquisition@sensor:	
  4058                           ; 1 bytes @ 0xB
  4059                           
  4060  002B                     Button_State_Initializing@button:	
  4061                           ; 2 bytes @ 0xB
  4062                           
  4063  002B                     Button_State_NotPressed@button:	
  4064                           ; 2 bytes @ 0xB
  4065                           
  4066  002B                     Button_State_Pressed@button:	
  4067                           ; 2 bytes @ 0xB
  4068                           
  4069                           
  4070                           ; 2 bytes @ 0xB
  4071  002B                     	ds	2
  4072  002D                     ??_Sensor_Acquisition:
  4073  002D                     ??_Button_State_Initializing:	
  4074                           ; 1 bytes @ 0xD
  4075                           
  4076  002D                     ??_Button_State_NotPressed:	
  4077                           ; 1 bytes @ 0xD
  4078                           
  4079  002D                     ??_Button_State_Pressed:	
  4080                           ; 1 bytes @ 0xD
  4081                           
  4082                           
  4083                           ; 1 bytes @ 0xD
  4084  002D                     	ds	1
  4085  002E                     Sensor_Acquisition@retry:
  4086                           
  4087                           ; 1 bytes @ 0xE
  4088  002E                     	ds	1
  4089  002F                     ??_Sensor_Service:
  4090                           
  4091                           ; 1 bytes @ 0xF
  4092  002F                     	ds	2
  4093  0031                     ??_Button_Service:
  4094                           
  4095                           ; 1 bytes @ 0x11
  4096  0031                     	ds	2
  4097  0033                     Sensor_Service@name:
  4098                           
  4099                           ; 1 bytes @ 0x13
  4100  0033                     	ds	1
  4101  0034                     Sensor_Service@error:
  4102                           
  4103                           ; 1 bytes @ 0x14
  4104  0034                     	ds	1
  4105  0035                     Button_Service@name:
  4106  0035                     Sensor_Service@sensor:	
  4107                           ; 1 bytes @ 0x15
  4108                           
  4109                           
  4110                           ; 2 bytes @ 0x15
  4111  0035                     	ds	1
  4112  0036                     Button_Service@button:
  4113                           
  4114                           ; 2 bytes @ 0x16
  4115  0036                     	ds	1
  4116  0037                     ??_MTOUCH_Sensor_SampleAll:
  4117                           
  4118                           ; 1 bytes @ 0x17
  4119  0037                     	ds	1
  4120  0038                     ??_MTOUCH_Button_ServiceAll:
  4121  0038                     MTOUCH_Sensor_SampleAll@sensor:	
  4122                           ; 1 bytes @ 0x18
  4123                           
  4124                           
  4125                           ; 1 bytes @ 0x18
  4126  0038                     	ds	1
  4127  0039                     MTOUCH_Button_ServiceAll@button:
  4128                           
  4129                           ; 1 bytes @ 0x19
  4130  0039                     	ds	1
  4131  003A                     ??_MTOUCH_Service_Mainloop:
  4132                           
  4133                           ; 1 bytes @ 0x1A
  4134  003A                     	ds	1
  4135  003B                     ??_Manual_Mode:
  4136  003B                     ??_Timer_Mode:	
  4137                           ; 1 bytes @ 0x1B
  4138                           
  4139                           
  4140                           ; 1 bytes @ 0x1B
  4141  003B                     	ds	1
  4142  003C                     Manual_Mode@received_command:
  4143                           
  4144                           ; 1 bytes @ 0x1C
  4145  003C                     	ds	1
  4146  003D                     Manual_Mode@b_mode_touched:
  4147                           
  4148                           ; 1 bytes @ 0x1D
  4149  003D                     	ds	1
  4150  003E                     Manual_Mode@b_power_touched:
  4151                           
  4152                           ; 1 bytes @ 0x1E
  4153  003E                     	ds	1
  4154  003F                     Manual_Mode@Flag:
  4155                           
  4156                           ; 1 bytes @ 0x1F
  4157  003F                     	ds	1
  4158  0040                     Manual_Mode@Flag_sound:
  4159                           
  4160                           ; 1 bytes @ 0x20
  4161  0040                     	ds	5
  4162  0045                     Timer_Mode@b_mode_touched:
  4163                           
  4164                           ; 1 bytes @ 0x25
  4165  0045                     	ds	1
  4166  0046                     Timer_Mode@b_power_touched:
  4167                           
  4168                           ; 1 bytes @ 0x26
  4169  0046                     	ds	1
  4170  0047                     Timer_Mode@buffer:
  4171                           
  4172                           ; 2 bytes @ 0x27
  4173  0047                     	ds	2
  4174  0049                     ??_Automatic_Mode:
  4175                           
  4176                           ; 1 bytes @ 0x29
  4177  0049                     	ds	10
  4178                           
  4179                           	psect	maintext
  4180  1230                     __pmaintext:	
  4181 ;;
  4182 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4183 ;;
  4184 ;; *************** function _main *****************
  4185 ;; Defined at:
  4186 ;;		line 214 in file "main.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : B1F/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels required when called: 14
  4206 ;; This function calls:
  4207 ;;		_EEPROM_init
  4208 ;;		_Main_Routine
  4209 ;;		_SYSTEM_Initialize
  4210 ;;		_TMR0_SetInterruptHandler
  4211 ;;		_TMR1_SetInterruptHandler
  4212 ;;		_init_panel
  4213 ;; This function is called by:
  4214 ;;		Startup code after reset
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function _main
  4220  1230                     _main:
  4221  1230                     l7891:	
  4222                           ;incstack = 0
  4223                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4224                           
  4225                           
  4226                           ;main.c: 216:     SYSTEM_Initialize();
  4227  1230  3190  20C2  3192   	fcall	_SYSTEM_Initialize
  4228  1233                     l7893:
  4229                           
  4230                           ;main.c: 217:     EEPROM_init();
  4231  1233  3194  24F6  3192   	fcall	_EEPROM_init
  4232  1236                     l7895:
  4233                           
  4234                           ;main.c: 218:     init_panel();
  4235  1236  3195  25B1  3192   	fcall	_init_panel
  4236  1239                     l7897:
  4237                           
  4238                           ;main.c: 220:     (INTCONbits.GIE = 1);
  4239  1239  178B               	bsf	11,7	;volatile
  4240  123A                     l7899:
  4241                           
  4242                           ;main.c: 221:     (INTCONbits.PEIE = 1);
  4243  123A  170B               	bsf	11,6	;volatile
  4244  123B                     l7901:
  4245                           
  4246                           ;main.c: 223:     TMR0_SetInterruptHandler(tmr0_long_press_duration);
  4247  123B  3075               	movlw	low _tmr0_long_press_duration
  4248  123C  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4249  123D  301E               	movlw	high _tmr0_long_press_duration
  4250  123E  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4251  123F  319E  268D  3192   	fcall	_TMR0_SetInterruptHandler
  4252  1242                     l7903:
  4253                           
  4254                           ;main.c: 224:     TMR1_SetInterruptHandler(tmr1_motor_on_duration);
  4255  1242  30F3               	movlw	low _tmr1_motor_on_duration
  4256  1243  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4257  1244  3011               	movlw	high _tmr1_motor_on_duration
  4258  1245  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4259  1246  319E  2693  3192   	fcall	_TMR1_SetInterruptHandler
  4260  1249                     l7905:
  4261                           
  4262                           ;main.c: 229:         Main_Routine();
  4263  1249  3197  2766  3192   	fcall	_Main_Routine
  4264  124C  2A49               	goto	l7905
  4265  124D  3180  2826         	ljmp	start
  4266  124F                     __end_of_main:
  4267                           
  4268                           	psect	text1
  4269  15B1                     __ptext1:	
  4270 ;; *************** function _init_panel *****************
  4271 ;; Defined at:
  4272 ;;		line 241 in file "main.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0, pclath, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;Total ram usage:        1 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 7
  4293 ;; This function calls:
  4294 ;;		_Reset_Digit_Value
  4295 ;;		_Toggle_7seg
  4296 ;;		_Toggle_OFFLED
  4297 ;;		_Toggle_Touch_LEDs
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _init_panel
  4305  15B1                     _init_panel:
  4306  15B1                     l7793:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _init_panel: [wreg+status,2+status,0+pclath+cstack]
  4309                           
  4310                           
  4311                           ;main.c: 243:     g_mass = 0;
  4312  15B1  0020               	movlb	0	; select bank0
  4313  15B2  01D9               	clrf	_g_mass	;volatile
  4314  15B3  01DA               	clrf	_g_mass+1	;volatile
  4315  15B4                     l7795:
  4316                           
  4317                           ;main.c: 246:     g_status.off_led = 1;
  4318  15B4  145F               	bsf	_g_status,0
  4319  15B5                     l7797:
  4320                           
  4321                           ;main.c: 247:     Toggle_OFFLED();
  4322  15B5  3190  20AC  3195   	fcall	_Toggle_OFFLED
  4323  15B8                     l7799:
  4324                           
  4325                           ;main.c: 249:     g_status.touch_leds = 0;
  4326  15B8  0020               	movlb	0	; select bank0
  4327  15B9  10DF               	bcf	_g_status,1
  4328  15BA                     l7801:
  4329                           
  4330                           ;main.c: 250:     Toggle_Touch_LEDs();
  4331  15BA  3190  20EF  3195   	fcall	_Toggle_Touch_LEDs
  4332  15BD                     l7803:
  4333                           
  4334                           ;main.c: 252:     g_status.touches = 0;
  4335  15BD  0020               	movlb	0	; select bank0
  4336  15BE  115F               	bcf	_g_status,2
  4337  15BF                     l7805:
  4338                           
  4339                           ;main.c: 254:     g_status._7segment = 0;
  4340  15BF  125F               	bcf	_g_status,4
  4341  15C0                     l7807:
  4342                           
  4343                           ;main.c: 255:     Toggle_7seg();
  4344  15C0  3191  219F  3195   	fcall	_Toggle_7seg
  4345  15C3                     l7809:
  4346                           
  4347                           ;main.c: 257:     g_status.PushButton = 0;
  4348  15C3  0020               	movlb	0	; select bank0
  4349  15C4  12DF               	bcf	_g_status,5
  4350  15C5                     l7811:
  4351  15C5  0022               	movlb	2	; select bank2
  4352  15C6  128C               	bcf	12,5	;volatile
  4353  15C7                     l7813:
  4354                           
  4355                           ;main.c: 261:     g_touch_status.next = 1;
  4356  15C7  0021               	movlb	1	; select bank1
  4357  15C8  1534               	bsf	_g_touch_status^(0+128),2
  4358  15C9                     l7815:
  4359                           
  4360                           ;main.c: 262:     g_touch_status.up = 1;
  4361  15C9  14B4               	bsf	_g_touch_status^(0+128),1
  4362  15CA                     l7817:
  4363                           
  4364                           ;main.c: 263:     g_touch_status.memories = 1;
  4365  15CA  15B4               	bsf	_g_touch_status^(0+128),3
  4366  15CB                     l7819:
  4367                           
  4368                           ;main.c: 265:     Reset_Digit_Value();
  4369  15CB  319E  26B5  3195   	fcall	_Reset_Digit_Value
  4370  15CE                     l7821:
  4371                           
  4372                           ;main.c: 267:     g_sss_status = set_e;
  4373  15CE  3003               	movlw	3
  4374  15CF  00F5               	movwf	??_init_panel
  4375  15D0  0875               	movf	??_init_panel,w
  4376  15D1  0020               	movlb	0	; select bank0
  4377  15D2  00E1               	movwf	_g_sss_status
  4378  15D3                     l7823:
  4379                           
  4380                           ;main.c: 268:     g_mode_status = automatic_e;
  4381  15D3  01E0               	clrf	_g_mode_status
  4382  15D4  0AE0               	incf	_g_mode_status,f
  4383  15D5                     l7825:
  4384                           
  4385                           ;main.c: 269:     g_digit_status = yekan_e;
  4386  15D5  01FA               	clrf	_g_digit_status
  4387  15D6  0AFA               	incf	_g_digit_status,f
  4388  15D7                     l1017:
  4389  15D7  0008               	return
  4390  15D8                     __end_of_init_panel:
  4391                           
  4392                           	psect	text2
  4393  1EB5                     __ptext2:	
  4394 ;; *************** function _Reset_Digit_Value *****************
  4395 ;; Defined at:
  4396 ;;		line 1180 in file "main.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		status,2
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;Total ram usage:        0 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 4
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_init_panel
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function _Reset_Digit_Value
  4426  1EB5                     _Reset_Digit_Value:
  4427  1EB5                     l5413:	
  4428                           ;incstack = 0
  4429                           ; Regs used in _Reset_Digit_Value: [status,2]
  4430                           
  4431                           
  4432                           ;main.c: 1182:     g_mass_calc.yekan = 0;
  4433  1EB5  0020               	movlb	0	; select bank0
  4434  1EB6  01D3               	clrf	_g_mass_calc
  4435                           
  4436                           ;main.c: 1183:     g_mass_calc.dahegan = 0;
  4437  1EB7  01D4               	clrf	_g_mass_calc+1
  4438                           
  4439                           ;main.c: 1184:     g_mass_calc.sadegan = 0;
  4440  1EB8  01D5               	clrf	_g_mass_calc+2
  4441                           
  4442                           ;main.c: 1186:     g_time_calc.yekan = 0;
  4443  1EB9  01D6               	clrf	_g_time_calc
  4444                           
  4445                           ;main.c: 1187:     g_time_calc.dahegan = 0;
  4446  1EBA  01D7               	clrf	_g_time_calc+1
  4447  1EBB                     l5415:
  4448                           
  4449                           ;main.c: 1188:     g_time_calc.sadegan = 1;
  4450  1EBB  01D8               	clrf	_g_time_calc+2
  4451  1EBC  0AD8               	incf	_g_time_calc+2,f
  4452  1EBD                     l1314:
  4453  1EBD  0008               	return
  4454  1EBE                     __end_of_Reset_Digit_Value:
  4455                           
  4456                           	psect	text3
  4457  10C2                     __ptext3:	
  4458 ;; *************** function _SYSTEM_Initialize *****************
  4459 ;; Defined at:
  4460 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 9
  4481 ;; This function calls:
  4482 ;;		_EUSART_Initialize
  4483 ;;		_MTOUCH_Initialize
  4484 ;;		_OSCILLATOR_Initialize
  4485 ;;		_PIN_MANAGER_Initialize
  4486 ;;		_TMR0_Initialize
  4487 ;;		_TMR1_Initialize
  4488 ;;		_WDT_Initialize
  4489 ;; This function is called by:
  4490 ;;		_main
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           
  4495                           ;psect for function _SYSTEM_Initialize
  4496  10C2                     _SYSTEM_Initialize:
  4497  10C2                     l7789:	
  4498                           ;incstack = 0
  4499                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4500                           
  4501                           
  4502                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4503  10C2  3191  216B  3190   	fcall	_PIN_MANAGER_Initialize
  4504                           
  4505                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4506  10C5  3190  2090  3190   	fcall	_OSCILLATOR_Initialize
  4507                           
  4508                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4509  10C8  319E  266C  3190   	fcall	_WDT_Initialize
  4510                           
  4511                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  4512  10CB  3191  2185  3190   	fcall	_TMR1_Initialize
  4513                           
  4514                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4515  10CE  319F  27B3  3190   	fcall	_TMR0_Initialize
  4516                           
  4517                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4518  10D1  3194  24D3  3190   	fcall	_EUSART_Initialize
  4519  10D4                     l7791:
  4520                           
  4521                           ;mcc_generated_files/mcc.c: 59:     MTOUCH_Initialize();
  4522  10D4  319E  26D4  3190   	fcall	_MTOUCH_Initialize
  4523  10D7                     l602:
  4524  10D7  0008               	return
  4525  10D8                     __end_of_SYSTEM_Initialize:
  4526                           
  4527                           	psect	text4
  4528  1E6C                     __ptext4:	
  4529 ;; *************** function _WDT_Initialize *****************
  4530 ;; Defined at:
  4531 ;;		line 72 in file "mcc_generated_files/mcc.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      void 
  4538 ;; Registers used:
  4539 ;;		wreg
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; Hardware stack levels required when called: 4
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_SYSTEM_Initialize
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           
  4560                           ;psect for function _WDT_Initialize
  4561  1E6C                     _WDT_Initialize:
  4562  1E6C                     l3203:	
  4563                           ;incstack = 0
  4564                           ; Regs used in _WDT_Initialize: [wreg]
  4565                           
  4566                           
  4567                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  4568  1E6C  3016               	movlw	22
  4569  1E6D  0021               	movlb	1	; select bank1
  4570  1E6E  0097               	movwf	23	;volatile
  4571  1E6F                     l608:
  4572  1E6F  0008               	return
  4573  1E70                     __end_of_WDT_Initialize:
  4574                           
  4575                           	psect	text5
  4576  1185                     __ptext5:	
  4577 ;; *************** function _TMR1_Initialize *****************
  4578 ;; Defined at:
  4579 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 5
  4600 ;; This function calls:
  4601 ;;		_TMR1_SetInterruptHandler
  4602 ;; This function is called by:
  4603 ;;		_SYSTEM_Initialize
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _TMR1_Initialize
  4609  1185                     _TMR1_Initialize:
  4610  1185                     l5361:	
  4611                           ;incstack = 0
  4612                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4613                           
  4614                           
  4615                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4616  1185  0020               	movlb	0	; select bank0
  4617  1186  0199               	clrf	25	;volatile
  4618  1187                     l5363:
  4619                           
  4620                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xD8;
  4621  1187  30D8               	movlw	216
  4622  1188  0097               	movwf	23	;volatile
  4623  1189                     l5365:
  4624                           
  4625                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xF0;
  4626  1189  30F0               	movlw	240
  4627  118A  0096               	movwf	22	;volatile
  4628  118B                     l5367:
  4629                           
  4630                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  4631  118B  1011               	bcf	17,0	;volatile
  4632  118C                     l5369:
  4633                           
  4634                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4635  118C  0817               	movf	23,w	;volatile
  4636  118D  0021               	movlb	1	; select bank1
  4637  118E  00CA               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  4638  118F  0020               	movlb	0	; select bank0
  4639  1190  0816               	movf	22,w	;volatile
  4640  1191  0021               	movlb	1	; select bank1
  4641  1192  00C9               	movwf	_timer1ReloadVal^(0+128)	;volatile
  4642  1193                     l5371:
  4643                           
  4644                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4645  1193  1411               	bsf	17,0	;volatile
  4646  1194                     l5373:
  4647                           
  4648                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4649  1194  3057               	movlw	low _TMR1_DefaultInterruptHandler
  4650  1195  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4651  1196  301E               	movlw	high _TMR1_DefaultInterruptHandler
  4652  1197  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4653  1198  319E  2693  3191   	fcall	_TMR1_SetInterruptHandler
  4654  119B                     l5375:
  4655                           
  4656                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x24;
  4657  119B  3024               	movlw	36
  4658  119C  0020               	movlb	0	; select bank0
  4659  119D  0098               	movwf	24	;volatile
  4660  119E                     l816:
  4661  119E  0008               	return
  4662  119F                     __end_of_TMR1_Initialize:
  4663                           
  4664                           	psect	text6
  4665  1E93                     __ptext6:	
  4666 ;; *************** function _TMR1_SetInterruptHandler *****************
  4667 ;; Defined at:
  4668 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4671 ;;		 -> tmr1_motor_on_duration(1), TMR1_DefaultInterruptHandler(1), 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;Total ram usage:        2 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 4
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_TMR1_Initialize
  4694 ;;		_main
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function _TMR1_SetInterruptHandler
  4700  1E93                     _TMR1_SetInterruptHandler:
  4701  1E93                     l5159:	
  4702                           ;incstack = 0
  4703                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4704                           
  4705                           
  4706                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  4707  1E93  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4708  1E94  0021               	movlb	1	; select bank1
  4709  1E95  00C8               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  4710  1E96  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4711  1E97  00C7               	movwf	_TMR1_InterruptHandler^(0+128)
  4712  1E98                     l846:
  4713  1E98  0008               	return
  4714  1E99                     __end_of_TMR1_SetInterruptHandler:
  4715                           
  4716                           	psect	text7
  4717  1FB3                     __ptext7:	
  4718 ;; *************** function _TMR0_Initialize *****************
  4719 ;; Defined at:
  4720 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0, pclath, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;Total ram usage:        0 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 5
  4741 ;; This function calls:
  4742 ;;		_TMR0_SetInterruptHandler
  4743 ;; This function is called by:
  4744 ;;		_SYSTEM_Initialize
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function _TMR0_Initialize
  4750  1FB3                     _TMR0_Initialize:
  4751  1FB3                     l5377:	
  4752                           ;incstack = 0
  4753                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4754                           
  4755                           
  4756                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4757  1FB3  0021               	movlb	1	; select bank1
  4758  1FB4  0815               	movf	21,w	;volatile
  4759  1FB5  39C0               	andlw	192
  4760  1FB6  3817               	iorlw	23
  4761  1FB7  0095               	movwf	21	;volatile
  4762  1FB8                     l5379:
  4763                           
  4764                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x00;
  4765  1FB8  0020               	movlb	0	; select bank0
  4766  1FB9  0195               	clrf	21	;volatile
  4767  1FBA                     l5381:
  4768                           
  4769                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 0;
  4770  1FBA  01E2               	clrf	_timer0ReloadVal	;volatile
  4771  1FBB                     l5383:
  4772                           
  4773                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  4774  1FBB  110B               	bcf	11,2	;volatile
  4775  1FBC                     l5385:
  4776                           
  4777                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  4778  1FBC  168B               	bsf	11,5	;volatile
  4779  1FBD                     l5387:
  4780                           
  4781                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4782  1FBD  3056               	movlw	low _TMR0_DefaultInterruptHandler
  4783  1FBE  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4784  1FBF  301E               	movlw	high _TMR0_DefaultInterruptHandler
  4785  1FC0  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4786  1FC1  319E  268D  319F   	fcall	_TMR0_SetInterruptHandler
  4787  1FC4                     l770:
  4788  1FC4  0008               	return
  4789  1FC5                     __end_of_TMR0_Initialize:
  4790                           
  4791                           	psect	text8
  4792  1E8D                     __ptext8:	
  4793 ;; *************** function _TMR0_SetInterruptHandler *****************
  4794 ;; Defined at:
  4795 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4798 ;;		 -> tmr0_long_press_duration(1), TMR0_DefaultInterruptHandler(1), 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;Total ram usage:        2 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; Hardware stack levels required when called: 4
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_TMR0_Initialize
  4821 ;;		_main
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           
  4826                           ;psect for function _TMR0_SetInterruptHandler
  4827  1E8D                     _TMR0_SetInterruptHandler:
  4828  1E8D                     l5157:	
  4829                           ;incstack = 0
  4830                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4831                           
  4832                           
  4833                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  4834  1E8D  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4835  1E8E  0021               	movlb	1	; select bank1
  4836  1E8F  00CC               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  4837  1E90  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4838  1E91  00CB               	movwf	_TMR0_InterruptHandler^(0+128)
  4839  1E92                     l786:
  4840  1E92  0008               	return
  4841  1E93                     __end_of_TMR0_SetInterruptHandler:
  4842                           
  4843                           	psect	text9
  4844  116B                     __ptext9:	
  4845 ;; *************** function _PIN_MANAGER_Initialize *****************
  4846 ;; Defined at:
  4847 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg, status,2
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;Total ram usage:        0 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; Hardware stack levels required when called: 4
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_SYSTEM_Initialize
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _PIN_MANAGER_Initialize
  4877  116B                     _PIN_MANAGER_Initialize:
  4878  116B                     l3185:	
  4879                           ;incstack = 0
  4880                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4881                           
  4882                           
  4883                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4884  116B  0022               	movlb	2	; select bank2
  4885  116C  018C               	clrf	12	;volatile
  4886                           
  4887                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4888  116D  018D               	clrf	13	;volatile
  4889                           
  4890                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4891  116E  018E               	clrf	14	;volatile
  4892  116F                     l3187:
  4893                           
  4894                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x08;
  4895  116F  3008               	movlw	8
  4896  1170  0021               	movlb	1	; select bank1
  4897  1171  008C               	movwf	12	;volatile
  4898  1172                     l3189:
  4899                           
  4900                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  4901  1172  3030               	movlw	48
  4902  1173  008D               	movwf	13	;volatile
  4903  1174                     l3191:
  4904                           
  4905                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x80;
  4906  1174  3080               	movlw	128
  4907  1175  008E               	movwf	14	;volatile
  4908  1176                     l3193:
  4909                           
  4910                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x80;
  4911  1176  3080               	movlw	128
  4912  1177  0023               	movlb	3	; select bank3
  4913  1178  008E               	movwf	14	;volatile
  4914                           
  4915                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  4916  1179  018D               	clrf	13	;volatile
  4917                           
  4918                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  4919  117A  018C               	clrf	12	;volatile
  4920                           
  4921                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4922  117B  0024               	movlb	4	; select bank4
  4923  117C  018D               	clrf	13	;volatile
  4924                           
  4925                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4926  117D  018C               	clrf	12	;volatile
  4927                           
  4928                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4929  117E  018E               	clrf	14	;volatile
  4930  117F                     l3195:
  4931                           
  4932                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  4933  117F  0021               	movlb	1	; select bank1
  4934  1180  1795               	bsf	21,7	;volatile
  4935                           
  4936                           ;mcc_generated_files/pin_manager.c: 90:     APFCON0 = 0x00;
  4937  1181  0022               	movlb	2	; select bank2
  4938  1182  019D               	clrf	29	;volatile
  4939                           
  4940                           ;mcc_generated_files/pin_manager.c: 91:     APFCON1 = 0x00;
  4941  1183  019E               	clrf	30	;volatile
  4942  1184                     l641:
  4943  1184  0008               	return
  4944  1185                     __end_of_PIN_MANAGER_Initialize:
  4945                           
  4946                           	psect	text10
  4947  1090                     __ptext10:	
  4948 ;; *************** function _OSCILLATOR_Initialize *****************
  4949 ;; Defined at:
  4950 ;;		line 62 in file "mcc_generated_files/mcc.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used: 1
  4970 ;; Hardware stack levels required when called: 4
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_SYSTEM_Initialize
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           
  4979                           ;psect for function _OSCILLATOR_Initialize
  4980  1090                     _OSCILLATOR_Initialize:
  4981  1090                     l3197:	
  4982                           ;incstack = 0
  4983                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4984                           
  4985                           
  4986                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  4987  1090  3078               	movlw	120
  4988  1091  0021               	movlb	1	; select bank1
  4989  1092  0099               	movwf	25	;volatile
  4990  1093                     l3199:
  4991                           
  4992                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4993  1093  0198               	clrf	24	;volatile
  4994  1094                     l3201:
  4995                           
  4996                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  4997  1094  0022               	movlb	2	; select bank2
  4998  1095  0196               	clrf	22	;volatile
  4999  1096                     l605:
  5000  1096  0008               	return
  5001  1097                     __end_of_OSCILLATOR_Initialize:
  5002                           
  5003                           	psect	text11
  5004  14D3                     __ptext11:	
  5005 ;; *************** function _EUSART_Initialize *****************
  5006 ;; Defined at:
  5007 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0, pclath, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used: 1
  5027 ;; Hardware stack levels required when called: 5
  5028 ;; This function calls:
  5029 ;;		_EUSART_SetErrorHandler
  5030 ;;		_EUSART_SetFramingErrorHandler
  5031 ;;		_EUSART_SetOverrunErrorHandler
  5032 ;; This function is called by:
  5033 ;;		_SYSTEM_Initialize
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           
  5038                           ;psect for function _EUSART_Initialize
  5039  14D3                     _EUSART_Initialize:
  5040  14D3                     l5389:	
  5041                           ;incstack = 0
  5042                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5043                           
  5044                           
  5045                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5046  14D3  3008               	movlw	8
  5047  14D4  0023               	movlb	3	; select bank3
  5048  14D5  009F               	movwf	31	;volatile
  5049                           
  5050                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5051  14D6  3090               	movlw	144
  5052  14D7  009D               	movwf	29	;volatile
  5053                           
  5054                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5055  14D8  3024               	movlw	36
  5056  14D9  009E               	movwf	30	;volatile
  5057                           
  5058                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xA0;
  5059  14DA  30A0               	movlw	160
  5060  14DB  009B               	movwf	27	;volatile
  5061                           
  5062                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  5063  14DC  3001               	movlw	1
  5064  14DD  009C               	movwf	28	;volatile
  5065  14DE                     l5391:
  5066                           
  5067                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5068  14DE  3000               	movlw	0
  5069  14DF  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5070  14E0  3000               	movlw	0
  5071  14E1  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5072  14E2  319E  2681  3194   	fcall	_EUSART_SetFramingErrorHandler
  5073  14E5                     l5393:
  5074                           
  5075                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5076  14E5  3000               	movlw	0
  5077  14E6  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5078  14E7  3000               	movlw	0
  5079  14E8  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5080  14E9  319E  2687  3194   	fcall	_EUSART_SetOverrunErrorHandler
  5081  14EC                     l5395:
  5082                           
  5083                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5084  14EC  3000               	movlw	0
  5085  14ED  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
  5086  14EE  3000               	movlw	0
  5087  14EF  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5088  14F0  319E  267B  3194   	fcall	_EUSART_SetErrorHandler
  5089  14F3                     l5397:
  5090                           
  5091                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5092  14F3  0021               	movlb	1	; select bank1
  5093  14F4  01B6               	clrf	_eusartRxLastError^(0+128)	;volatile
  5094  14F5                     l708:
  5095  14F5  0008               	return
  5096  14F6                     __end_of_EUSART_Initialize:
  5097                           
  5098                           	psect	text12
  5099  1E87                     __ptext12:	
  5100 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5101 ;; Defined at:
  5102 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5105 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;Total ram usage:        2 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; Hardware stack levels required when called: 4
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_EUSART_Initialize
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           
  5132                           ;psect for function _EUSART_SetOverrunErrorHandler
  5133  1E87                     _EUSART_SetOverrunErrorHandler:
  5134  1E87                     l5153:	
  5135                           ;incstack = 0
  5136                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5137                           
  5138                           
  5139                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5140  1E87  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5141  1E88  0021               	movlb	1	; select bank1
  5142  1E89  00D0               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5143  1E8A  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5144  1E8B  00CF               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5145  1E8C                     l750:
  5146  1E8C  0008               	return
  5147  1E8D                     __end_of_EUSART_SetOverrunErrorHandler:
  5148                           
  5149                           	psect	text13
  5150  1E81                     __ptext13:	
  5151 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5152 ;; Defined at:
  5153 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5156 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;Total ram usage:        2 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; Hardware stack levels required when called: 4
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_EUSART_Initialize
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           
  5183                           ;psect for function _EUSART_SetFramingErrorHandler
  5184  1E81                     _EUSART_SetFramingErrorHandler:
  5185  1E81                     l5151:	
  5186                           ;incstack = 0
  5187                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5188                           
  5189                           
  5190                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5191  1E81  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5192  1E82  0021               	movlb	1	; select bank1
  5193  1E83  00D2               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5194  1E84  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5195  1E85  00D1               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5196  1E86                     l747:
  5197  1E86  0008               	return
  5198  1E87                     __end_of_EUSART_SetFramingErrorHandler:
  5199                           
  5200                           	psect	text14
  5201  1E7B                     __ptext14:	
  5202 ;; *************** function _EUSART_SetErrorHandler *****************
  5203 ;; Defined at:
  5204 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5207 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;Total ram usage:        2 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; Hardware stack levels required when called: 4
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_EUSART_Initialize
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           
  5234                           ;psect for function _EUSART_SetErrorHandler
  5235  1E7B                     _EUSART_SetErrorHandler:
  5236  1E7B                     l5155:	
  5237                           ;incstack = 0
  5238                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5239                           
  5240                           
  5241                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  5242  1E7B  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5243  1E7C  0021               	movlb	1	; select bank1
  5244  1E7D  00CE               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5245  1E7E  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5246  1E7F  00CD               	movwf	_EUSART_ErrorHandler^(0+128)
  5247  1E80                     l753:
  5248  1E80  0008               	return
  5249  1E81                     __end_of_EUSART_SetErrorHandler:
  5250                           
  5251                           	psect	text15
  5252  1766                     __ptext15:	
  5253 ;; *************** function _Main_Routine *****************
  5254 ;; Defined at:
  5255 ;;		line 522 in file "main.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;		None
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        0 bytes
  5274 ;; Hardware stack levels used: 1
  5275 ;; Hardware stack levels required when called: 13
  5276 ;; This function calls:
  5277 ;;		_Automatic_Mode
  5278 ;;		_FCN_POWER
  5279 ;;		_MTOUCH_Button_isPressed
  5280 ;;		_MTOUCH_Service_Mainloop
  5281 ;; This function is called by:
  5282 ;;		_main
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function _Main_Routine
  5288  1766                     _Main_Routine:
  5289  1766                     l7827:	
  5290                           ;incstack = 0
  5291                           ; Regs used in _Main_Routine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5292                           
  5293                           
  5294                           ;main.c: 524:     if (1 == MTOUCH_Service_Mainloop()) {
  5295  1766  3196  2629  3197   	fcall	_MTOUCH_Service_Mainloop
  5296  1769  3A01               	xorlw	1
  5297  176A  1D03               	skipz
  5298  176B  2F6D               	goto	u6421
  5299  176C  2F6E               	goto	u6420
  5300  176D                     u6421:
  5301  176D  2F97               	goto	l1122
  5302  176E                     u6420:
  5303  176E                     l7829:
  5304                           
  5305                           ;main.c: 526:         if (1 == MTOUCH_Button_isPressed(T_6)) {
  5306  176E  3006               	movlw	6
  5307  176F  3195  25D8  3197   	fcall	_MTOUCH_Button_isPressed
  5308  1772  3A01               	xorlw	1
  5309  1773  1D03               	skipz
  5310  1774  2F76               	goto	u6431
  5311  1775  2F77               	goto	u6430
  5312  1776                     u6431:
  5313  1776  2F97               	goto	l1122
  5314  1777                     u6430:
  5315  1777  2F7B               	goto	l7835
  5316  1778                     l7833:
  5317                           
  5318                           ;main.c: 529:                 MTOUCH_Service_Mainloop();
  5319  1778  3196  2629  3197   	fcall	_MTOUCH_Service_Mainloop
  5320  177B                     l7835:
  5321                           
  5322                           ;main.c: 528:             while (1 == MTOUCH_Button_isPressed(T_6)) {
  5323  177B  3006               	movlw	6
  5324  177C  3195  25D8  3197   	fcall	_MTOUCH_Button_isPressed
  5325  177F  3A01               	xorlw	1
  5326  1780  1903               	skipnz
  5327  1781  2F83               	goto	u6441
  5328  1782  2F84               	goto	u6440
  5329  1783                     u6441:
  5330  1783  2F78               	goto	l7833
  5331  1784                     u6440:
  5332  1784                     l7837:
  5333                           
  5334                           ;main.c: 532:             FCN_POWER();
  5335  1784  3191  211E  3197   	fcall	_FCN_POWER
  5336                           
  5337                           ;main.c: 534:             Automatic_Mode();
  5338  1787  3180  2073  3197   	fcall	_Automatic_Mode
  5339                           
  5340                           ;main.c: 536:             while (1 == MTOUCH_Button_isPressed(T_6)) {
  5341  178A  2F8E               	goto	l7841
  5342  178B                     l7839:
  5343                           
  5344                           ;main.c: 537:                 MTOUCH_Service_Mainloop();
  5345  178B  3196  2629  3197   	fcall	_MTOUCH_Service_Mainloop
  5346  178E                     l7841:
  5347                           
  5348                           ;main.c: 536:             while (1 == MTOUCH_Button_isPressed(T_6)) {
  5349  178E  3006               	movlw	6
  5350  178F  3195  25D8  3197   	fcall	_MTOUCH_Button_isPressed
  5351  1792  3A01               	xorlw	1
  5352  1793  1903               	skipnz
  5353  1794  2F96               	goto	u6451
  5354  1795  2F97               	goto	u6450
  5355  1796                     u6451:
  5356  1796  2F8B               	goto	l7839
  5357  1797                     u6450:
  5358  1797                     l1122:
  5359  1797  0008               	return
  5360  1798                     __end_of_Main_Routine:
  5361                           
  5362                           	psect	text16
  5363  0073                     __ptext16:	
  5364 ;; *************** function _Automatic_Mode *****************
  5365 ;; Defined at:
  5366 ;;		line 767 in file "main.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  motor_on_tim    3    0[BANK1 ] unsigned um
  5371 ;;  buffer          2    3[BANK1 ] unsigned short 
  5372 ;;  memory_touch    1    0        _Bool 
  5373 ;;  b_mode_short    1    0        _Bool 
  5374 ;;  b_mode_longp    1    0        _Bool 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Totals:         0      10       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;Total ram usage:       15 bytes
  5389 ;; Hardware stack levels used: 1
  5390 ;; Hardware stack levels required when called: 12
  5391 ;; This function calls:
  5392 ;;		_FCN_NEXT
  5393 ;;		_FCN_POWER
  5394 ;;		_FCN_UP
  5395 ;;		_MTOUCH_Button_isPressed
  5396 ;;		_MTOUCH_Service_Mainloop
  5397 ;;		_Manual_Mode
  5398 ;;		_Motor_ON
  5399 ;;		_SET_SOUND_MODE
  5400 ;;		_TMR1_StopTimer
  5401 ;;		_TX_Command
  5402 ;;		_Timer_Mode
  5403 ;;		___eetoi
  5404 ;;		___itoee
  5405 ;;		___lwdiv
  5406 ;;		___lwmod
  5407 ;;		___tmul
  5408 ;;		___wmul
  5409 ;;		_set_digit_counters
  5410 ;; This function is called by:
  5411 ;;		_Main_Routine
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function _Automatic_Mode
  5417  0073                     _Automatic_Mode:
  5418  0073                     l7391:	
  5419                           ;incstack = 0
  5420                           ; Regs used in _Automatic_Mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5421                           
  5422                           
  5423                           ;main.c: 769:     MTOUCH_Service_Mainloop();
  5424  0073  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  5425  0076                     l7393:
  5426  0076                     l7395:
  5427  0076                     l7397:
  5428  0076                     l7399:
  5429                           
  5430                           ;main.c: 777:     g_digit_status = sadegan_e;
  5431  0076  3003               	movlw	3
  5432  0077  0020               	movlb	0	; select bank0
  5433  0078  00C9               	movwf	??_Automatic_Mode
  5434  0079  0849               	movf	??_Automatic_Mode,w
  5435  007A  00FA               	movwf	_g_digit_status
  5436  007B                     l7401:
  5437                           
  5438                           ;main.c: 779:     if (0 != g_mass) {
  5439  007B  0859               	movf	_g_mass,w	;volatile
  5440  007C  045A               	iorwf	_g_mass+1,w	;volatile
  5441  007D  1903               	btfsc	3,2
  5442  007E  2880               	goto	u5951
  5443  007F  2881               	goto	u5950
  5444  0080                     u5951:
  5445  0080  2884               	goto	l7405
  5446  0081                     u5950:
  5447  0081                     l7403:
  5448                           
  5449                           ;main.c: 781:         g_sss_status = start_e;
  5450  0081  01E1               	clrf	_g_sss_status
  5451  0082  0AE1               	incf	_g_sss_status,f
  5452                           
  5453                           ;main.c: 782:     } else {
  5454  0083  2888               	goto	l7407
  5455  0084                     l7405:
  5456                           
  5457                           ;main.c: 784:         g_sss_status = set_e;
  5458  0084  3003               	movlw	3
  5459  0085  00C9               	movwf	??_Automatic_Mode
  5460  0086  0849               	movf	??_Automatic_Mode,w
  5461  0087  00E1               	movwf	_g_sss_status
  5462  0088                     l7407:
  5463                           
  5464                           ;main.c: 787:     TX_Command(TX_7SEG_ON);
  5465  0088  300B               	movlw	11
  5466  0089  319E  26E1  3180   	fcall	_TX_Command
  5467  008C                     l7409:
  5468                           
  5469                           ;main.c: 788:     TX_Command(TX_7SEG_SHOW_MASS);
  5470  008C  3042               	movlw	66
  5471  008D  319E  26E1  3180   	fcall	_TX_Command
  5472  0090                     l7411:
  5473                           
  5474                           ;main.c: 790:     g_mass_calc.sadegan = g_mass / 100;
  5475  0090  3064               	movlw	100
  5476  0091  00F2               	movwf	___lwdiv@divisor
  5477  0092  3000               	movlw	0
  5478  0093  00F3               	movwf	___lwdiv@divisor+1
  5479  0094  0020               	movlb	0	; select bank0
  5480  0095  085A               	movf	_g_mass+1,w	;volatile
  5481  0096  00F5               	movwf	___lwdiv@dividend+1
  5482  0097  0859               	movf	_g_mass,w	;volatile
  5483  0098  00F4               	movwf	___lwdiv@dividend
  5484  0099  3188  2005  3180   	fcall	___lwdiv
  5485  009C  0872               	movf	?___lwdiv,w
  5486  009D  0020               	movlb	0	; select bank0
  5487  009E  00C9               	movwf	??_Automatic_Mode
  5488  009F  0849               	movf	??_Automatic_Mode,w
  5489  00A0  00D5               	movwf	_g_mass_calc+2
  5490  00A1                     l7413:
  5491                           
  5492                           ;main.c: 791:     buffer = g_mass % 100;
  5493  00A1  3064               	movlw	100
  5494  00A2  00F2               	movwf	___lwmod@divisor
  5495  00A3  3000               	movlw	0
  5496  00A4  00F3               	movwf	___lwmod@divisor+1
  5497  00A5  085A               	movf	_g_mass+1,w	;volatile
  5498  00A6  00F5               	movwf	___lwmod@dividend+1
  5499  00A7  0859               	movf	_g_mass,w	;volatile
  5500  00A8  00F4               	movwf	___lwmod@dividend
  5501  00A9  3197  27CC  3180   	fcall	___lwmod
  5502  00AC  0873               	movf	?___lwmod+1,w
  5503  00AD  0021               	movlb	1	; select bank1
  5504  00AE  00D7               	movwf	(Automatic_Mode@buffer+1)^(0+128)
  5505  00AF  0872               	movf	?___lwmod,w
  5506  00B0  00D6               	movwf	Automatic_Mode@buffer^(0+128)
  5507  00B1                     l7415:
  5508                           
  5509                           ;main.c: 792:     g_mass_calc.dahegan = buffer / 10;
  5510  00B1  300A               	movlw	10
  5511  00B2  00F2               	movwf	___lwdiv@divisor
  5512  00B3  3000               	movlw	0
  5513  00B4  00F3               	movwf	___lwdiv@divisor+1
  5514  00B5  0857               	movf	(Automatic_Mode@buffer+1)^(0+128),w
  5515  00B6  00F5               	movwf	___lwdiv@dividend+1
  5516  00B7  0856               	movf	Automatic_Mode@buffer^(0+128),w
  5517  00B8  00F4               	movwf	___lwdiv@dividend
  5518  00B9  3188  2005  3180   	fcall	___lwdiv
  5519  00BC  0872               	movf	?___lwdiv,w
  5520  00BD  0020               	movlb	0	; select bank0
  5521  00BE  00C9               	movwf	??_Automatic_Mode
  5522  00BF  0849               	movf	??_Automatic_Mode,w
  5523  00C0  00D4               	movwf	_g_mass_calc+1
  5524  00C1                     l7417:
  5525                           
  5526                           ;main.c: 793:     g_mass_calc.yekan = buffer % 10;
  5527  00C1  300A               	movlw	10
  5528  00C2  00F2               	movwf	___lwmod@divisor
  5529  00C3  3000               	movlw	0
  5530  00C4  00F3               	movwf	___lwmod@divisor+1
  5531  00C5  0021               	movlb	1	; select bank1
  5532  00C6  0857               	movf	(Automatic_Mode@buffer+1)^(0+128),w
  5533  00C7  00F5               	movwf	___lwmod@dividend+1
  5534  00C8  0856               	movf	Automatic_Mode@buffer^(0+128),w
  5535  00C9  00F4               	movwf	___lwmod@dividend
  5536  00CA  3197  27CC  3180   	fcall	___lwmod
  5537  00CD  0872               	movf	?___lwmod,w
  5538  00CE  0020               	movlb	0	; select bank0
  5539  00CF  00C9               	movwf	??_Automatic_Mode
  5540  00D0  0849               	movf	??_Automatic_Mode,w
  5541  00D1  00D3               	movwf	_g_mass_calc
  5542  00D2                     l7419:
  5543                           
  5544                           ;main.c: 797:         if (1 == MTOUCH_Service_Mainloop()) {
  5545  00D2  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  5546  00D5  3A01               	xorlw	1
  5547  00D6  1D03               	skipz
  5548  00D7  28D9               	goto	u5961
  5549  00D8  28DA               	goto	u5960
  5550  00D9                     u5961:
  5551  00D9  28D2               	goto	l7419
  5552  00DA                     u5960:
  5553  00DA                     l7421:
  5554                           
  5555                           ;main.c: 799:             if (1 == MTOUCH_Button_isPressed(T_7)) {
  5556  00DA  3005               	movlw	5
  5557  00DB  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  5558  00DE  3A01               	xorlw	1
  5559  00DF  1D03               	skipz
  5560  00E0  28E2               	goto	u5971
  5561  00E1  28E3               	goto	u5970
  5562  00E2                     u5971:
  5563  00E2  2959               	goto	l7473
  5564  00E3                     u5970:
  5565  00E3                     l7423:
  5566                           
  5567                           ;main.c: 801:                 TX_Command(TX_END_SELECT_DIGIT);
  5568  00E3  302A               	movlw	42
  5569  00E4  319E  26E1  3180   	fcall	_TX_Command
  5570                           
  5571                           ;main.c: 802:                 TX_Command(TX_STOP_DECREASE);
  5572  00E7  303F               	movlw	63
  5573  00E8  319E  26E1  3180   	fcall	_TX_Command
  5574  00EB                     l7425:
  5575                           
  5576                           ;main.c: 803:                 TMR1_StopTimer();
  5577  00EB  319E  2665  3180   	fcall	_TMR1_StopTimer
  5578  00EE                     l7427:
  5579  00EE  0022               	movlb	2	; select bank2
  5580  00EF  128C               	bcf	12,5	;volatile
  5581  00F0                     l7429:
  5582                           
  5583                           ;main.c: 806:                 g_tmr0_longpress_duration_counter = 0;
  5584  00F0  0020               	movlb	0	; select bank0
  5585  00F1  01DB               	clrf	_g_tmr0_longpress_duration_counter
  5586  00F2  01DC               	clrf	_g_tmr0_longpress_duration_counter+1
  5587                           
  5588                           ;main.c: 808:                 while ((1 == MTOUCH_Button_isPressed(T_7)) &&
  5589  00F3  28F7               	goto	l7433
  5590  00F4                     l7431:
  5591                           
  5592                           ;main.c: 809:                         (g_tmr0_longpress_duration_counter < 80)) {;main.c
      +                          : 810:                     MTOUCH_Service_Mainloop();
  5593  00F4  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  5594  00F7                     l7433:
  5595                           
  5596                           ;main.c: 808:                 while ((1 == MTOUCH_Button_isPressed(T_7)) &&
  5597  00F7  3005               	movlw	5
  5598  00F8  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  5599  00FB  3A01               	xorlw	1
  5600  00FC  1D03               	skipz
  5601  00FD  28FF               	goto	u5981
  5602  00FE  2900               	goto	u5980
  5603  00FF                     u5981:
  5604  00FF  290A               	goto	l7437
  5605  0100                     u5980:
  5606  0100                     l7435:
  5607  0100  3000               	movlw	0
  5608  0101  0020               	movlb	0	; select bank0
  5609  0102  025C               	subwf	_g_tmr0_longpress_duration_counter+1,w
  5610  0103  3050               	movlw	80
  5611  0104  1903               	skipnz
  5612  0105  025B               	subwf	_g_tmr0_longpress_duration_counter,w
  5613  0106  1C03               	skipc
  5614  0107  2909               	goto	u5991
  5615  0108  290A               	goto	u5990
  5616  0109                     u5991:
  5617  0109  28F4               	goto	l7431
  5618  010A                     u5990:
  5619  010A                     l7437:
  5620                           
  5621                           ;main.c: 813:                 if (1 == MTOUCH_Button_isPressed(T_7)) {
  5622  010A  3005               	movlw	5
  5623  010B  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  5624  010E  3A01               	xorlw	1
  5625  010F  1D03               	skipz
  5626  0110  2912               	goto	u6001
  5627  0111  2913               	goto	u6000
  5628  0112                     u6001:
  5629  0112  293F               	goto	l7459
  5630  0113                     u6000:
  5631  0113                     l7439:
  5632                           
  5633                           ;main.c: 815:                     SET_SOUND_MODE(dimmer_is_min);
  5634  0113  3008               	movlw	8
  5635  0114  3186  268E  3180   	fcall	_SET_SOUND_MODE
  5636  0117                     l7441:
  5637                           
  5638                           ;main.c: 816:                     TX_Command(TX_7SEG_ON);
  5639  0117  300B               	movlw	11
  5640  0118  319E  26E1  3180   	fcall	_TX_Command
  5641  011B                     l7443:
  5642                           
  5643                           ;main.c: 817:                     TX_Command(TX_7SEG_SHOW_TIME);
  5644  011B  3020               	movlw	32
  5645  011C  319E  26E1  3180   	fcall	_TX_Command
  5646                           
  5647                           ;main.c: 820:                     while (1 == MTOUCH_Button_isPressed(T_7)) {
  5648  011F  2923               	goto	l7447
  5649  0120                     l7445:
  5650                           
  5651                           ;main.c: 821:                         MTOUCH_Service_Mainloop();
  5652  0120  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  5653  0123                     l7447:
  5654                           
  5655                           ;main.c: 820:                     while (1 == MTOUCH_Button_isPressed(T_7)) {
  5656  0123  3005               	movlw	5
  5657  0124  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  5658  0127  3A01               	xorlw	1
  5659  0128  1903               	skipnz
  5660  0129  292B               	goto	u6011
  5661  012A  292C               	goto	u6010
  5662  012B                     u6011:
  5663  012B  2920               	goto	l7445
  5664  012C                     u6010:
  5665  012C                     l7449:
  5666                           
  5667                           ;main.c: 825:                     Timer_Mode();
  5668  012C  3185  2543  3180   	fcall	_Timer_Mode
  5669  012F                     l7451:
  5670                           
  5671                           ;main.c: 827:                     if (g_power_event.timer) {
  5672  012F  0020               	movlb	0	; select bank0
  5673  0130  1D5E               	btfss	_g_power_event,2
  5674  0131  2933               	goto	u6021
  5675  0132  2934               	goto	u6020
  5676  0133                     u6021:
  5677  0133  2937               	goto	l7455
  5678  0134                     u6020:
  5679  0134                     l7453:
  5680                           
  5681                           ;main.c: 829:                         g_power_event.timer = 0;
  5682  0134  115E               	bcf	_g_power_event,2
  5683                           
  5684                           ;main.c: 830:                         g_power_event.automatic = 1;
  5685  0135  145E               	bsf	_g_power_event,0
  5686                           
  5687                           ;main.c: 831:                         break;
  5688  0136  2D2F               	goto	l1212
  5689  0137                     l7455:
  5690                           
  5691                           ;main.c: 834:                     g_digit_status = sadegan_e;
  5692  0137  3003               	movlw	3
  5693  0138  00C9               	movwf	??_Automatic_Mode
  5694  0139  0849               	movf	??_Automatic_Mode,w
  5695  013A  00FA               	movwf	_g_digit_status
  5696                           
  5697                           ;main.c: 835:                 } else {
  5698  013B  2957               	goto	l7471
  5699  013C                     l7457:
  5700                           
  5701                           ;main.c: 838:                         MTOUCH_Service_Mainloop();
  5702  013C  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  5703  013F                     l7459:
  5704                           
  5705                           ;main.c: 837:                     while (1 == MTOUCH_Button_isPressed(T_7)) {
  5706  013F  3005               	movlw	5
  5707  0140  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  5708  0143  3A01               	xorlw	1
  5709  0144  1903               	skipnz
  5710  0145  2947               	goto	u6031
  5711  0146  2948               	goto	u6030
  5712  0147                     u6031:
  5713  0147  293C               	goto	l7457
  5714  0148                     u6030:
  5715  0148                     l7461:
  5716                           
  5717                           ;main.c: 840:                     SET_SOUND_MODE(learn_rf_code_is_start);
  5718  0148  3000               	movlw	0
  5719  0149  3186  268E  3180   	fcall	_SET_SOUND_MODE
  5720  014C                     l7463:
  5721                           
  5722                           ;main.c: 842:                     Manual_Mode();
  5723  014C  318F  2728  3180   	fcall	_Manual_Mode
  5724  014F                     l7465:
  5725                           
  5726                           ;main.c: 844:                     if (g_power_event.manual) {
  5727  014F  0020               	movlb	0	; select bank0
  5728  0150  1CDE               	btfss	_g_power_event,1
  5729  0151  2953               	goto	u6041
  5730  0152  2954               	goto	u6040
  5731  0153                     u6041:
  5732  0153  2937               	goto	l7455
  5733  0154                     u6040:
  5734  0154                     l7467:
  5735                           
  5736                           ;main.c: 846:                         g_power_event.manual = 0;
  5737  0154  10DE               	bcf	_g_power_event,1
  5738                           
  5739                           ;main.c: 847:                         g_power_event.automatic = 1;
  5740  0155  145E               	bsf	_g_power_event,0
  5741                           
  5742                           ;main.c: 848:                         break;
  5743  0156  2D2F               	goto	l1212
  5744  0157                     l7471:
  5745                           
  5746                           ;main.c: 854:                 g_sss_status = start_e;
  5747  0157  01E1               	clrf	_g_sss_status
  5748  0158  0AE1               	incf	_g_sss_status,f
  5749  0159                     l7473:
  5750                           
  5751                           ;main.c: 858:             if (1 == MTOUCH_Button_isPressed(T_6)) {
  5752  0159  3006               	movlw	6
  5753  015A  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  5754  015D  3A01               	xorlw	1
  5755  015E  1D03               	skipz
  5756  015F  2961               	goto	u6051
  5757  0160  2962               	goto	u6050
  5758  0161                     u6051:
  5759  0161  2972               	goto	l7481
  5760  0162                     u6050:
  5761  0162                     l7475:
  5762                           
  5763                           ;main.c: 860:                 g_power_event.automatic = 1;
  5764  0162  0020               	movlb	0	; select bank0
  5765  0163  145E               	bsf	_g_power_event,0
  5766                           
  5767                           ;main.c: 862:                 while (1 == MTOUCH_Button_isPressed(T_6)) {
  5768  0164  2968               	goto	l7479
  5769  0165                     l7477:
  5770                           
  5771                           ;main.c: 863:                     MTOUCH_Service_Mainloop();
  5772  0165  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  5773  0168                     l7479:
  5774                           
  5775                           ;main.c: 862:                 while (1 == MTOUCH_Button_isPressed(T_6)) {
  5776  0168  3006               	movlw	6
  5777  0169  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  5778  016C  3A01               	xorlw	1
  5779  016D  1903               	skipnz
  5780  016E  2970               	goto	u6061
  5781  016F  2971               	goto	u6060
  5782  0170                     u6061:
  5783  0170  2965               	goto	l7477
  5784  0171                     u6060:
  5785  0171  2D2F               	goto	l1212
  5786  0172                     l7481:
  5787                           
  5788                           ;main.c: 869:             if (1 == MTOUCH_Button_isPressed(T_8)) {
  5789  0172  3004               	movlw	4
  5790  0173  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  5791  0176  3A01               	xorlw	1
  5792  0177  1D03               	skipz
  5793  0178  297A               	goto	u6071
  5794  0179  297B               	goto	u6070
  5795  017A                     u6071:
  5796  017A  2A41               	goto	l7531
  5797  017B                     u6070:
  5798  017B  2A21               	goto	l7525
  5799  017C                     l1224:	
  5800                           ;main.c: 873:                     case set_e:
  5801                           
  5802                           
  5803                           ;main.c: 875:                         g_sss_status = start_e;
  5804  017C  01E1               	clrf	_g_sss_status
  5805  017D  0AE1               	incf	_g_sss_status,f
  5806  017E                     l7485:
  5807                           
  5808                           ;main.c: 876:                         g_digit_status = sadegan_e;
  5809  017E  3003               	movlw	3
  5810  017F  00C9               	movwf	??_Automatic_Mode
  5811  0180  0849               	movf	??_Automatic_Mode,w
  5812  0181  00FA               	movwf	_g_digit_status
  5813  0182                     l7487:
  5814                           
  5815                           ;main.c: 878:                         g_mass = (g_mass_calc.yekan +
  5816  0182  0853               	movf	_g_mass_calc,w
  5817  0183  00C9               	movwf	??_Automatic_Mode
  5818  0184  01CA               	clrf	??_Automatic_Mode+1
  5819  0185  0855               	movf	_g_mass_calc+2,w
  5820  0186  00CB               	movwf	??_Automatic_Mode+2
  5821  0187  01CC               	clrf	??_Automatic_Mode+3
  5822  0188  084B               	movf	??_Automatic_Mode+2,w
  5823  0189  00F2               	movwf	___wmul@multiplier
  5824  018A  084C               	movf	??_Automatic_Mode+3,w
  5825  018B  00F3               	movwf	___wmul@multiplier+1
  5826  018C  3064               	movlw	100
  5827  018D  00F4               	movwf	___wmul@multiplicand
  5828  018E  3000               	movlw	0
  5829  018F  00F5               	movwf	___wmul@multiplicand+1
  5830  0190  3192  2211  3180   	fcall	___wmul
  5831  0193  0872               	movf	?___wmul,w
  5832  0194  0020               	movlb	0	; select bank0
  5833  0195  00CD               	movwf	??_Automatic_Mode+4
  5834  0196  0873               	movf	?___wmul+1,w
  5835  0197  00CE               	movwf	??_Automatic_Mode+5
  5836  0198  0854               	movf	_g_mass_calc+1,w
  5837  0199  00CF               	movwf	??_Automatic_Mode+6
  5838  019A  01D0               	clrf	??_Automatic_Mode+7
  5839  019B  084F               	movf	??_Automatic_Mode+6,w
  5840  019C  00F2               	movwf	___wmul@multiplier
  5841  019D  0850               	movf	??_Automatic_Mode+7,w
  5842  019E  00F3               	movwf	___wmul@multiplier+1
  5843  019F  300A               	movlw	10
  5844  01A0  00F4               	movwf	___wmul@multiplicand
  5845  01A1  3000               	movlw	0
  5846  01A2  00F5               	movwf	___wmul@multiplicand+1
  5847  01A3  3192  2211  3180   	fcall	___wmul
  5848  01A6  0872               	movf	?___wmul,w
  5849  01A7  0020               	movlb	0	; select bank0
  5850  01A8  074D               	addwf	??_Automatic_Mode+4,w
  5851  01A9  00D1               	movwf	??_Automatic_Mode+8
  5852  01AA  0873               	movf	?___wmul+1,w
  5853  01AB  3D4E               	addwfc	??_Automatic_Mode+5,w
  5854  01AC  00D2               	movwf	??_Automatic_Mode+9
  5855  01AD  0849               	movf	??_Automatic_Mode,w
  5856  01AE  0751               	addwf	??_Automatic_Mode+8,w
  5857  01AF  00D9               	movwf	_g_mass	;volatile
  5858  01B0  084A               	movf	??_Automatic_Mode+1,w
  5859  01B1  3D52               	addwfc	??_Automatic_Mode+9,w
  5860  01B2  00DA               	movwf	_g_mass+1	;volatile
  5861  01B3                     l7489:
  5862                           
  5863                           ;main.c: 883:                         TX_Command(TX_7SEG_STORE_MASS);
  5864  01B3  3043               	movlw	67
  5865  01B4  319E  26E1  3180   	fcall	_TX_Command
  5866  01B7                     l7491:
  5867                           
  5868                           ;main.c: 884:                         TX_Command(TX_END_SELECT_DIGIT);
  5869  01B7  302A               	movlw	42
  5870  01B8  319E  26E1  3180   	fcall	_TX_Command
  5871  01BB                     l7493:
  5872                           
  5873                           ;main.c: 885:                         SET_SOUND_MODE(learn_rf_code_is_start);
  5874  01BB  3000               	movlw	0
  5875  01BC  3186  268E  3180   	fcall	_SET_SOUND_MODE
  5876                           
  5877                           ;main.c: 886:                         break;
  5878  01BF  2A38               	goto	l7529
  5879  01C0                     l7495:
  5880                           
  5881                           ;main.c: 890:                         g_digit_status = sadegan_e;
  5882  01C0  3003               	movlw	3
  5883  01C1  00C9               	movwf	??_Automatic_Mode
  5884  01C2  0849               	movf	??_Automatic_Mode,w
  5885  01C3  00FA               	movwf	_g_digit_status
  5886  01C4                     l7497:
  5887                           
  5888                           ;main.c: 892:                         motor_on_time_ms = (uint24_t) g_mass * g_time_ms;
  5889  01C4  0859               	movf	_g_mass,w	;volatile
  5890  01C5  00F2               	movwf	___tmul@multiplier
  5891  01C6  085A               	movf	_g_mass+1,w	;volatile
  5892  01C7  00F3               	movwf	___tmul@multiplier+1
  5893  01C8  01F4               	clrf	___tmul@multiplier+2
  5894  01C9  086A               	movf	_g_time_ms,w	;volatile
  5895  01CA  00F5               	movwf	___tmul@multiplicand
  5896  01CB  086B               	movf	_g_time_ms+1,w	;volatile
  5897  01CC  00F6               	movwf	___tmul@multiplicand+1
  5898  01CD  01F7               	clrf	___tmul@multiplicand+2
  5899  01CE  3196  26A9  3180   	fcall	___tmul
  5900  01D1  0872               	movf	?___tmul,w
  5901  01D2  0021               	movlb	1	; select bank1
  5902  01D3  00D3               	movwf	Automatic_Mode@motor_on_time_ms^(0+128)
  5903  01D4  0873               	movf	?___tmul+1,w
  5904  01D5  00D4               	movwf	(Automatic_Mode@motor_on_time_ms+1)^(0+128)
  5905  01D6  0874               	movf	?___tmul+2,w
  5906  01D7  00D5               	movwf	(Automatic_Mode@motor_on_time_ms+2)^(0+128)
  5907  01D8                     l7499:
  5908                           
  5909                           ;main.c: 894:                         if (0 != motor_on_time_ms) {
  5910  01D8  0855               	movf	(Automatic_Mode@motor_on_time_ms+2)^(0+128),w
  5911  01D9  0454               	iorwf	(Automatic_Mode@motor_on_time_ms+1)^(0+128),w
  5912  01DA  0453               	iorwf	Automatic_Mode@motor_on_time_ms^(0+128),w
  5913  01DB  1903               	skipnz
  5914  01DC  29DE               	goto	u6081
  5915  01DD  29DF               	goto	u6080
  5916  01DE                     u6081:
  5917  01DE  2A00               	goto	l7509
  5918  01DF                     u6080:
  5919  01DF                     l7501:
  5920                           
  5921                           ;main.c: 896:                             TX_Command(TX_7SEG_STORE_INITIAL_VALUE);
  5922  01DF  3023               	movlw	35
  5923  01E0  319E  26E1  3180   	fcall	_TX_Command
  5924                           
  5925                           ;main.c: 897:                             TX_Command(TX_START_DECREASE);
  5926  01E3  303E               	movlw	62
  5927  01E4  319E  26E1  3180   	fcall	_TX_Command
  5928  01E7                     l7503:
  5929                           
  5930                           ;main.c: 898:                             g_sss_status = stop_e;
  5931  01E7  3002               	movlw	2
  5932  01E8  0020               	movlb	0	; select bank0
  5933  01E9  00C9               	movwf	??_Automatic_Mode
  5934  01EA  0849               	movf	??_Automatic_Mode,w
  5935  01EB  00E1               	movwf	_g_sss_status
  5936  01EC                     l7505:
  5937                           
  5938                           ;main.c: 899:                             Motor_ON(motor_on_time_ms);
  5939  01EC  0021               	movlb	1	; select bank1
  5940  01ED  0853               	movf	Automatic_Mode@motor_on_time_ms^(0+128),w
  5941  01EE  0020               	movlb	0	; select bank0
  5942  01EF  00A4               	movwf	Motor_ON@motor_on_time_ms
  5943  01F0  0021               	movlb	1	; select bank1
  5944  01F1  0854               	movf	(Automatic_Mode@motor_on_time_ms+1)^(0+128),w
  5945  01F2  0020               	movlb	0	; select bank0
  5946  01F3  00A5               	movwf	Motor_ON@motor_on_time_ms+1
  5947  01F4  0021               	movlb	1	; select bank1
  5948  01F5  0855               	movf	(Automatic_Mode@motor_on_time_ms+2)^(0+128),w
  5949  01F6  0020               	movlb	0	; select bank0
  5950  01F7  00A6               	movwf	Motor_ON@motor_on_time_ms+2
  5951  01F8  3191  21D6  3180   	fcall	_Motor_ON
  5952  01FB                     l7507:
  5953                           
  5954                           ;main.c: 900:                             SET_SOUND_MODE(learn_rf_code_is_start);
  5955  01FB  3000               	movlw	0
  5956  01FC  3186  268E  3180   	fcall	_SET_SOUND_MODE
  5957                           
  5958                           ;main.c: 901:                         } else {
  5959  01FF  2A38               	goto	l7529
  5960  0200                     l7509:
  5961                           
  5962                           ;main.c: 903:                             g_sss_status = set_e;
  5963  0200  3003               	movlw	3
  5964  0201  0020               	movlb	0	; select bank0
  5965  0202  00C9               	movwf	??_Automatic_Mode
  5966  0203  0849               	movf	??_Automatic_Mode,w
  5967  0204  00E1               	movwf	_g_sss_status
  5968  0205                     l7511:
  5969                           
  5970                           ;main.c: 904:                             SET_SOUND_MODE(memory_is_full);
  5971  0205  3004               	movlw	4
  5972  0206  3186  268E  3180   	fcall	_SET_SOUND_MODE
  5973  0209  2A38               	goto	l7529
  5974  020A                     l1229:	
  5975                           ;main.c: 909:                     case stop_e:
  5976                           
  5977                           
  5978                           ;main.c: 911:                         g_sss_status = start_e;
  5979  020A  01E1               	clrf	_g_sss_status
  5980  020B  0AE1               	incf	_g_sss_status,f
  5981  020C                     l1230:	
  5982                           ;main.c: 912:                         do { LATAbits.LATA5 = 0; } while(0);
  5983                           
  5984  020C  0022               	movlb	2	; select bank2
  5985  020D  128C               	bcf	12,5	;volatile
  5986  020E                     l7513:
  5987                           
  5988                           ;main.c: 913:                         TMR1_StopTimer();
  5989  020E  319E  2665  3180   	fcall	_TMR1_StopTimer
  5990  0211                     l7515:
  5991                           
  5992                           ;main.c: 914:                         g_tmr1_motor_counter = 0;
  5993  0211  0021               	movlb	1	; select bank1
  5994  0212  01A8               	clrf	_g_tmr1_motor_counter^(0+128)
  5995  0213  01A9               	clrf	(_g_tmr1_motor_counter+1)^(0+128)
  5996  0214                     l7517:
  5997                           
  5998                           ;main.c: 915:                         TX_Command(TX_STOP_DECREASE);
  5999  0214  303F               	movlw	63
  6000  0215  319E  26E1  3180   	fcall	_TX_Command
  6001  0218                     l7519:
  6002                           
  6003                           ;main.c: 916:                         TX_Command(TX_7SEG_SHOW_MASS);
  6004  0218  3042               	movlw	66
  6005  0219  319E  26E1  3180   	fcall	_TX_Command
  6006  021C                     l7521:
  6007                           
  6008                           ;main.c: 918:                         SET_SOUND_MODE(learn_rf_code_is_start);
  6009  021C  3000               	movlw	0
  6010  021D  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6011                           
  6012                           ;main.c: 919:                         break;
  6013  0220  2A38               	goto	l7529
  6014  0221                     l7525:
  6015  0221  0020               	movlb	0	; select bank0
  6016  0222  0861               	movf	_g_sss_status,w
  6017  0223  00C9               	movwf	??_Automatic_Mode
  6018  0224  01CA               	clrf	??_Automatic_Mode+1
  6019                           
  6020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6021                           ; Switch size 1, requested type "simple"
  6022                           ; Number of cases is 1, Range of values is 0 to 0
  6023                           ; switch strategies available:
  6024                           ; Name         Instructions Cycles
  6025                           ; simple_byte            4     3 (average)
  6026                           ; direct_byte            8     6 (fixed)
  6027                           ; jumptable            260     6 (fixed)
  6028                           ;	Chosen strategy is simple_byte
  6029  0225  084A               	movf	??_Automatic_Mode+1,w
  6030  0226  3A00               	xorlw	0	; case 0
  6031  0227  1903               	skipnz
  6032  0228  2A2A               	goto	l8067
  6033  0229  2A38               	goto	l7529
  6034  022A                     l8067:
  6035                           
  6036                           ; Switch size 1, requested type "simple"
  6037                           ; Number of cases is 3, Range of values is 1 to 3
  6038                           ; switch strategies available:
  6039                           ; Name         Instructions Cycles
  6040                           ; simple_byte           10     6 (average)
  6041                           ; direct_byte           15     9 (fixed)
  6042                           ; jumptable            263     9 (fixed)
  6043                           ;	Chosen strategy is simple_byte
  6044  022A  0849               	movf	??_Automatic_Mode,w
  6045  022B  3A01               	xorlw	1	; case 1
  6046  022C  1903               	skipnz
  6047  022D  29C0               	goto	l7495
  6048  022E  3A03               	xorlw	3	; case 2
  6049  022F  1903               	skipnz
  6050  0230  2A0A               	goto	l1229
  6051  0231  3A01               	xorlw	1	; case 3
  6052  0232  1903               	skipnz
  6053  0233  297C               	goto	l1224
  6054  0234  2A38               	goto	l7529
  6055  0235                     l7527:
  6056                           
  6057                           ;main.c: 927:                     MTOUCH_Service_Mainloop();
  6058  0235  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6059  0238                     l7529:
  6060                           
  6061                           ;main.c: 926:                 while (1 == MTOUCH_Button_isPressed(T_8)) {
  6062  0238  3004               	movlw	4
  6063  0239  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6064  023C  3A01               	xorlw	1
  6065  023D  1903               	skipnz
  6066  023E  2A40               	goto	u6091
  6067  023F  2A41               	goto	u6090
  6068  0240                     u6091:
  6069  0240  2A35               	goto	l7527
  6070  0241                     u6090:
  6071  0241                     l7531:
  6072                           
  6073                           ;main.c: 933:             if (1 == MTOUCH_Button_isPressed(T_9)) {
  6074  0241  3008               	movlw	8
  6075  0242  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6076  0245  3A01               	xorlw	1
  6077  0246  1D03               	skipz
  6078  0247  2A49               	goto	u6101
  6079  0248  2A4A               	goto	u6100
  6080  0249                     u6101:
  6081  0249  2A61               	goto	l7543
  6082  024A                     u6100:
  6083  024A                     l7533:
  6084                           
  6085                           ;main.c: 935:                 g_mode_status = automatic_e;
  6086  024A  0020               	movlb	0	; select bank0
  6087  024B  01E0               	clrf	_g_mode_status
  6088  024C  0AE0               	incf	_g_mode_status,f
  6089  024D                     l7535:
  6090                           
  6091                           ;main.c: 936:                 g_sss_status = set_e;
  6092  024D  3003               	movlw	3
  6093  024E  00C9               	movwf	??_Automatic_Mode
  6094  024F  0849               	movf	??_Automatic_Mode,w
  6095  0250  00E1               	movwf	_g_sss_status
  6096  0251                     l7537:
  6097                           
  6098                           ;main.c: 937:                 FCN_UP();
  6099  0251  318C  2456  3180   	fcall	_FCN_UP
  6100                           
  6101                           ;main.c: 939:                 while (1 == MTOUCH_Button_isPressed(T_9)) {
  6102  0254  2A58               	goto	l7541
  6103  0255                     l7539:
  6104                           
  6105                           ;main.c: 940:                     MTOUCH_Service_Mainloop();
  6106  0255  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6107  0258                     l7541:
  6108                           
  6109                           ;main.c: 939:                 while (1 == MTOUCH_Button_isPressed(T_9)) {
  6110  0258  3008               	movlw	8
  6111  0259  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6112  025C  3A01               	xorlw	1
  6113  025D  1903               	skipnz
  6114  025E  2A60               	goto	u6111
  6115  025F  2A61               	goto	u6110
  6116  0260                     u6111:
  6117  0260  2A55               	goto	l7539
  6118  0261                     u6110:
  6119  0261                     l7543:
  6120                           
  6121                           ;main.c: 945:             if (1 == MTOUCH_Button_isPressed(T_5)) {
  6122  0261  3007               	movlw	7
  6123  0262  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6124  0265  3A01               	xorlw	1
  6125  0266  1D03               	skipz
  6126  0267  2A69               	goto	u6121
  6127  0268  2A6A               	goto	u6120
  6128  0269                     u6121:
  6129  0269  2A7F               	goto	l7553
  6130  026A                     u6120:
  6131  026A                     l7545:
  6132                           
  6133                           ;main.c: 947:                 g_sss_status = set_e;
  6134  026A  3003               	movlw	3
  6135  026B  0020               	movlb	0	; select bank0
  6136  026C  00C9               	movwf	??_Automatic_Mode
  6137  026D  0849               	movf	??_Automatic_Mode,w
  6138  026E  00E1               	movwf	_g_sss_status
  6139  026F                     l7547:
  6140                           
  6141                           ;main.c: 948:                 FCN_NEXT();
  6142  026F  3195  2564  3180   	fcall	_FCN_NEXT
  6143                           
  6144                           ;main.c: 950:                 while (1 == MTOUCH_Button_isPressed(T_5)) {
  6145  0272  2A76               	goto	l7551
  6146  0273                     l7549:
  6147                           
  6148                           ;main.c: 951:                     MTOUCH_Service_Mainloop();
  6149  0273  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6150  0276                     l7551:
  6151                           
  6152                           ;main.c: 950:                 while (1 == MTOUCH_Button_isPressed(T_5)) {
  6153  0276  3007               	movlw	7
  6154  0277  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6155  027A  3A01               	xorlw	1
  6156  027B  1903               	skipnz
  6157  027C  2A7E               	goto	u6131
  6158  027D  2A7F               	goto	u6130
  6159  027E                     u6131:
  6160  027E  2A73               	goto	l7549
  6161  027F                     u6130:
  6162  027F                     l7553:
  6163                           
  6164                           ;main.c: 956:             if (1 == MTOUCH_Button_isPressed(T_3)) {
  6165  027F  3002               	movlw	2
  6166  0280  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6167  0283  3A01               	xorlw	1
  6168  0284  1D03               	skipz
  6169  0285  2A87               	goto	u6141
  6170  0286  2A88               	goto	u6140
  6171  0287                     u6141:
  6172  0287  2B28               	goto	l7603
  6173  0288                     u6140:
  6174  0288                     l7555:
  6175                           
  6176                           ;main.c: 958:                 TX_Command(TX_END_SELECT_DIGIT);
  6177  0288  302A               	movlw	42
  6178  0289  319E  26E1  3180   	fcall	_TX_Command
  6179                           
  6180                           ;main.c: 959:                 TX_Command(TX_STOP_DECREASE);
  6181  028C  303F               	movlw	63
  6182  028D  319E  26E1  3180   	fcall	_TX_Command
  6183  0290                     l7557:
  6184                           
  6185                           ;main.c: 960:                 TMR1_StopTimer();
  6186  0290  319E  2665  3180   	fcall	_TMR1_StopTimer
  6187  0293                     l7559:
  6188  0293  0022               	movlb	2	; select bank2
  6189  0294  128C               	bcf	12,5	;volatile
  6190  0295                     l7561:
  6191                           
  6192                           ;main.c: 963:                 g_tmr0_longpress_duration_counter = 0;
  6193  0295  0020               	movlb	0	; select bank0
  6194  0296  01DB               	clrf	_g_tmr0_longpress_duration_counter
  6195  0297  01DC               	clrf	_g_tmr0_longpress_duration_counter+1
  6196                           
  6197                           ;main.c: 965:                 while ((1 == MTOUCH_Button_isPressed(T_3)) &&
  6198  0298  2A9C               	goto	l7565
  6199  0299                     l7563:
  6200                           
  6201                           ;main.c: 966:                         (g_tmr0_longpress_duration_counter < 80)) {;main.c
      +                          : 967:                     MTOUCH_Service_Mainloop();
  6202  0299  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6203  029C                     l7565:
  6204                           
  6205                           ;main.c: 965:                 while ((1 == MTOUCH_Button_isPressed(T_3)) &&
  6206  029C  3002               	movlw	2
  6207  029D  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6208  02A0  3A01               	xorlw	1
  6209  02A1  1D03               	skipz
  6210  02A2  2AA4               	goto	u6151
  6211  02A3  2AA5               	goto	u6150
  6212  02A4                     u6151:
  6213  02A4  2AAF               	goto	l7569
  6214  02A5                     u6150:
  6215  02A5                     l7567:
  6216  02A5  3000               	movlw	0
  6217  02A6  0020               	movlb	0	; select bank0
  6218  02A7  025C               	subwf	_g_tmr0_longpress_duration_counter+1,w
  6219  02A8  3050               	movlw	80
  6220  02A9  1903               	skipnz
  6221  02AA  025B               	subwf	_g_tmr0_longpress_duration_counter,w
  6222  02AB  1C03               	skipc
  6223  02AC  2AAE               	goto	u6161
  6224  02AD  2AAF               	goto	u6160
  6225  02AE                     u6161:
  6226  02AE  2A99               	goto	l7563
  6227  02AF                     u6160:
  6228  02AF                     l7569:
  6229                           
  6230                           ;main.c: 970:                 if (1 == MTOUCH_Button_isPressed(T_3)) {
  6231  02AF  3002               	movlw	2
  6232  02B0  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6233  02B3  3A01               	xorlw	1
  6234  02B4  1D03               	skipz
  6235  02B5  2AB7               	goto	u6171
  6236  02B6  2AB8               	goto	u6170
  6237  02B7                     u6171:
  6238  02B7  2AEC               	goto	l7585
  6239  02B8                     u6170:
  6240  02B8                     l7571:
  6241                           
  6242                           ;main.c: 972:                     SET_SOUND_MODE(dimmer_is_min);
  6243  02B8  3008               	movlw	8
  6244  02B9  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6245                           
  6246                           ;main.c: 974:                     while (1 == MTOUCH_Button_isPressed(T_3)) {
  6247  02BC  2AC0               	goto	l7575
  6248  02BD                     l7573:
  6249                           
  6250                           ;main.c: 975:                         MTOUCH_Service_Mainloop();
  6251  02BD  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6252  02C0                     l7575:
  6253                           
  6254                           ;main.c: 974:                     while (1 == MTOUCH_Button_isPressed(T_3)) {
  6255  02C0  3002               	movlw	2
  6256  02C1  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6257  02C4  3A01               	xorlw	1
  6258  02C5  1903               	skipnz
  6259  02C6  2AC8               	goto	u6181
  6260  02C7  2AC9               	goto	u6180
  6261  02C8                     u6181:
  6262  02C8  2ABD               	goto	l7573
  6263  02C9                     u6180:
  6264  02C9                     l7577:
  6265                           
  6266                           ;main.c: 978:                     TX_Command(TX_7SEG_STORE_MEM_1);
  6267  02C9  306F               	movlw	111
  6268  02CA  319E  26E1  3180   	fcall	_TX_Command
  6269                           
  6270                           ;main.c: 979:                     TX_Command(TX_7SEG_SET_MEM_1);
  6271  02CD  3070               	movlw	112
  6272  02CE  319E  26E1  3180   	fcall	_TX_Command
  6273  02D1                     l7579:
  6274                           
  6275                           ;main.c: 981:                     ge_memory_mass[0] = g_mass;
  6276  02D1  0020               	movlb	0	; select bank0
  6277  02D2  085A               	movf	_g_mass+1,w	;volatile
  6278  02D3  00F9               	movwf	___itoee@data+1
  6279  02D4  0859               	movf	_g_mass,w	;volatile
  6280  02D5  00F8               	movwf	___itoee@data
  6281  02D6  3000               	movlw	(low _ge_memory_mass)& (0+255)
  6282  02D7  319E  26FE  3180   	fcall	___itoee
  6283  02DA                     l7581:
  6284                           
  6285                           ;main.c: 982:                     g_memory_mass[0] = g_mass;
  6286  02DA  0020               	movlb	0	; select bank0
  6287  02DB  085A               	movf	_g_mass+1,w	;volatile
  6288  02DC  0021               	movlb	1	; select bank1
  6289  02DD  00A1               	movwf	(_g_memory_mass+1)^(0+128)
  6290  02DE  0020               	movlb	0	; select bank0
  6291  02DF  0859               	movf	_g_mass,w	;volatile
  6292  02E0  0021               	movlb	1	; select bank1
  6293  02E1  00A0               	movwf	_g_memory_mass^(0+128)
  6294  02E2                     l7583:
  6295                           
  6296                           ;main.c: 984:                     ge_time_ms = g_time_ms;
  6297  02E2  0020               	movlb	0	; select bank0
  6298  02E3  086B               	movf	_g_time_ms+1,w	;volatile
  6299  02E4  00F9               	movwf	___itoee@data+1
  6300  02E5  086A               	movf	_g_time_ms,w	;volatile
  6301  02E6  00F8               	movwf	___itoee@data
  6302  02E7  3008               	movlw	(low _ge_time_ms)& (0+255)
  6303  02E8  319E  26FE  3180   	fcall	___itoee
  6304                           
  6305                           ;main.c: 986:                 } else {
  6306  02EB  2B12               	goto	l7597
  6307  02EC                     l7585:
  6308                           
  6309                           ;main.c: 988:                     SET_SOUND_MODE(learn_rf_code_is_start);
  6310  02EC  3000               	movlw	0
  6311  02ED  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6312                           
  6313                           ;main.c: 990:                     while (1 == MTOUCH_Button_isPressed(T_3)) {
  6314  02F0  2AF4               	goto	l7589
  6315  02F1                     l7587:
  6316                           
  6317                           ;main.c: 991:                         MTOUCH_Service_Mainloop();
  6318  02F1  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6319  02F4                     l7589:
  6320                           
  6321                           ;main.c: 990:                     while (1 == MTOUCH_Button_isPressed(T_3)) {
  6322  02F4  3002               	movlw	2
  6323  02F5  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6324  02F8  3A01               	xorlw	1
  6325  02F9  1903               	skipnz
  6326  02FA  2AFC               	goto	u6191
  6327  02FB  2AFD               	goto	u6190
  6328  02FC                     u6191:
  6329  02FC  2AF1               	goto	l7587
  6330  02FD                     u6190:
  6331  02FD                     l7591:
  6332                           
  6333                           ;main.c: 994:                     TX_Command(TX_7SEG_SET_MEM_1);
  6334  02FD  3070               	movlw	112
  6335  02FE  319E  26E1  3180   	fcall	_TX_Command
  6336  0301                     l7593:
  6337                           
  6338                           ;main.c: 996:                     g_mass = g_memory_mass[0];
  6339  0301  0021               	movlb	1	; select bank1
  6340  0302  0821               	movf	(_g_memory_mass+1)^(0+128),w
  6341  0303  0020               	movlb	0	; select bank0
  6342  0304  00DA               	movwf	_g_mass+1	;volatile
  6343  0305  0021               	movlb	1	; select bank1
  6344  0306  0820               	movf	_g_memory_mass^(0+128),w
  6345  0307  0020               	movlb	0	; select bank0
  6346  0308  00D9               	movwf	_g_mass	;volatile
  6347  0309                     l7595:
  6348                           
  6349                           ;main.c: 997:                     g_time_ms = ge_time_ms;
  6350  0309  3008               	movlw	(low _ge_time_ms)& (0+255)
  6351  030A  319F  27D8  3180   	fcall	___eetoi
  6352  030D  0879               	movf	?___eetoi+1,w
  6353  030E  0020               	movlb	0	; select bank0
  6354  030F  00EB               	movwf	_g_time_ms+1	;volatile
  6355  0310  0878               	movf	?___eetoi,w
  6356  0311  00EA               	movwf	_g_time_ms	;volatile
  6357  0312                     l7597:
  6358                           
  6359                           ;main.c: 1001:                 TX_Command(TX_7SEG_STORE_MASS);
  6360  0312  3043               	movlw	67
  6361  0313  319E  26E1  3180   	fcall	_TX_Command
  6362  0316                     l7599:
  6363                           
  6364                           ;main.c: 1002:                 set_digit_counters(g_memory_mass[0], g_time_ms);
  6365  0316  0021               	movlb	1	; select bank1
  6366  0317  0821               	movf	(_g_memory_mass+1)^(0+128),w
  6367  0318  0020               	movlb	0	; select bank0
  6368  0319  00A1               	movwf	set_digit_counters@mass+1
  6369  031A  0021               	movlb	1	; select bank1
  6370  031B  0820               	movf	_g_memory_mass^(0+128),w
  6371  031C  0020               	movlb	0	; select bank0
  6372  031D  00A0               	movwf	set_digit_counters@mass
  6373  031E  086B               	movf	_g_time_ms+1,w	;volatile
  6374  031F  00A3               	movwf	set_digit_counters@time+1
  6375  0320  086A               	movf	_g_time_ms,w	;volatile
  6376  0321  00A2               	movwf	set_digit_counters@time
  6377  0322  318C  24D8  3180   	fcall	_set_digit_counters
  6378  0325                     l7601:
  6379                           
  6380                           ;main.c: 1003:                 g_sss_status = start_e;
  6381  0325  0020               	movlb	0	; select bank0
  6382  0326  01E1               	clrf	_g_sss_status
  6383  0327  0AE1               	incf	_g_sss_status,f
  6384  0328                     l7603:
  6385                           
  6386                           ;main.c: 1007:             if (1 == MTOUCH_Button_isPressed(T_1)) {
  6387  0328  3000               	movlw	0
  6388  0329  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6389  032C  3A01               	xorlw	1
  6390  032D  1D03               	skipz
  6391  032E  2B30               	goto	u6201
  6392  032F  2B31               	goto	u6200
  6393  0330                     u6201:
  6394  0330  2BD1               	goto	l7653
  6395  0331                     u6200:
  6396  0331                     l7605:
  6397                           
  6398                           ;main.c: 1009:                 TX_Command(TX_END_SELECT_DIGIT);
  6399  0331  302A               	movlw	42
  6400  0332  319E  26E1  3180   	fcall	_TX_Command
  6401                           
  6402                           ;main.c: 1010:                 TX_Command(TX_STOP_DECREASE);
  6403  0335  303F               	movlw	63
  6404  0336  319E  26E1  3180   	fcall	_TX_Command
  6405  0339                     l7607:
  6406                           
  6407                           ;main.c: 1011:                 TMR1_StopTimer();
  6408  0339  319E  2665  3180   	fcall	_TMR1_StopTimer
  6409  033C                     l7609:
  6410  033C  0022               	movlb	2	; select bank2
  6411  033D  128C               	bcf	12,5	;volatile
  6412  033E                     l7611:
  6413                           
  6414                           ;main.c: 1014:                 g_tmr0_longpress_duration_counter = 0;
  6415  033E  0020               	movlb	0	; select bank0
  6416  033F  01DB               	clrf	_g_tmr0_longpress_duration_counter
  6417  0340  01DC               	clrf	_g_tmr0_longpress_duration_counter+1
  6418                           
  6419                           ;main.c: 1016:                 while ((1 == MTOUCH_Button_isPressed(T_1)) &&
  6420  0341  2B45               	goto	l7615
  6421  0342                     l7613:
  6422                           
  6423                           ;main.c: 1017:                         (g_tmr0_longpress_duration_counter < 80)) {;main.
      +                          c: 1018:                     MTOUCH_Service_Mainloop();
  6424  0342  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6425  0345                     l7615:
  6426                           
  6427                           ;main.c: 1016:                 while ((1 == MTOUCH_Button_isPressed(T_1)) &&
  6428  0345  3000               	movlw	0
  6429  0346  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6430  0349  3A01               	xorlw	1
  6431  034A  1D03               	skipz
  6432  034B  2B4D               	goto	u6211
  6433  034C  2B4E               	goto	u6210
  6434  034D                     u6211:
  6435  034D  2B58               	goto	l7619
  6436  034E                     u6210:
  6437  034E                     l7617:
  6438  034E  3000               	movlw	0
  6439  034F  0020               	movlb	0	; select bank0
  6440  0350  025C               	subwf	_g_tmr0_longpress_duration_counter+1,w
  6441  0351  3050               	movlw	80
  6442  0352  1903               	skipnz
  6443  0353  025B               	subwf	_g_tmr0_longpress_duration_counter,w
  6444  0354  1C03               	skipc
  6445  0355  2B57               	goto	u6221
  6446  0356  2B58               	goto	u6220
  6447  0357                     u6221:
  6448  0357  2B42               	goto	l7613
  6449  0358                     u6220:
  6450  0358                     l7619:
  6451                           
  6452                           ;main.c: 1021:                 if (1 == MTOUCH_Button_isPressed(T_1)) {
  6453  0358  3000               	movlw	0
  6454  0359  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6455  035C  3A01               	xorlw	1
  6456  035D  1D03               	skipz
  6457  035E  2B60               	goto	u6231
  6458  035F  2B61               	goto	u6230
  6459  0360                     u6231:
  6460  0360  2B95               	goto	l7635
  6461  0361                     u6230:
  6462  0361                     l7621:
  6463                           
  6464                           ;main.c: 1023:                     SET_SOUND_MODE(dimmer_is_min);
  6465  0361  3008               	movlw	8
  6466  0362  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6467                           
  6468                           ;main.c: 1025:                     while (1 == MTOUCH_Button_isPressed(T_1)) {
  6469  0365  2B69               	goto	l7625
  6470  0366                     l7623:
  6471                           
  6472                           ;main.c: 1026:                         MTOUCH_Service_Mainloop();
  6473  0366  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6474  0369                     l7625:
  6475                           
  6476                           ;main.c: 1025:                     while (1 == MTOUCH_Button_isPressed(T_1)) {
  6477  0369  3000               	movlw	0
  6478  036A  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6479  036D  3A01               	xorlw	1
  6480  036E  1903               	skipnz
  6481  036F  2B71               	goto	u6241
  6482  0370  2B72               	goto	u6240
  6483  0371                     u6241:
  6484  0371  2B66               	goto	l7623
  6485  0372                     u6240:
  6486  0372                     l7627:
  6487                           
  6488                           ;main.c: 1029:                     TX_Command(TX_7SEG_STORE_MEM_2);
  6489  0372  3079               	movlw	121
  6490  0373  319E  26E1  3180   	fcall	_TX_Command
  6491                           
  6492                           ;main.c: 1030:                     TX_Command(TX_7SEG_SET_MEM_2);
  6493  0376  307A               	movlw	122
  6494  0377  319E  26E1  3180   	fcall	_TX_Command
  6495  037A                     l7629:
  6496                           
  6497                           ;main.c: 1032:                     ge_memory_mass[1] = g_mass;
  6498  037A  0020               	movlb	0	; select bank0
  6499  037B  085A               	movf	_g_mass+1,w	;volatile
  6500  037C  00F9               	movwf	___itoee@data+1
  6501  037D  0859               	movf	_g_mass,w	;volatile
  6502  037E  00F8               	movwf	___itoee@data
  6503  037F  3002               	movlw	(low (_ge_memory_mass+2))& (0+255)
  6504  0380  319E  26FE  3180   	fcall	___itoee
  6505  0383                     l7631:
  6506                           
  6507                           ;main.c: 1033:                     g_memory_mass[1] = g_mass;
  6508  0383  0020               	movlb	0	; select bank0
  6509  0384  085A               	movf	_g_mass+1,w	;volatile
  6510  0385  0021               	movlb	1	; select bank1
  6511  0386  00A3               	movwf	((_g_memory_mass+1)^(0+128)+2)
  6512  0387  0020               	movlb	0	; select bank0
  6513  0388  0859               	movf	_g_mass,w	;volatile
  6514  0389  0021               	movlb	1	; select bank1
  6515  038A  00A2               	movwf	(_g_memory_mass^(0+128)+2)
  6516  038B                     l7633:
  6517                           
  6518                           ;main.c: 1035:                     ge_time_ms = g_time_ms;
  6519  038B  0020               	movlb	0	; select bank0
  6520  038C  086B               	movf	_g_time_ms+1,w	;volatile
  6521  038D  00F9               	movwf	___itoee@data+1
  6522  038E  086A               	movf	_g_time_ms,w	;volatile
  6523  038F  00F8               	movwf	___itoee@data
  6524  0390  3008               	movlw	(low _ge_time_ms)& (0+255)
  6525  0391  319E  26FE  3180   	fcall	___itoee
  6526                           
  6527                           ;main.c: 1037:                 } else {
  6528  0394  2BBB               	goto	l7647
  6529  0395                     l7635:
  6530                           
  6531                           ;main.c: 1039:                     SET_SOUND_MODE(learn_rf_code_is_start);
  6532  0395  3000               	movlw	0
  6533  0396  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6534                           
  6535                           ;main.c: 1040:                     while (1 == MTOUCH_Button_isPressed(T_1)) {
  6536  0399  2B9D               	goto	l7639
  6537  039A                     l7637:
  6538                           
  6539                           ;main.c: 1041:                         MTOUCH_Service_Mainloop();
  6540  039A  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6541  039D                     l7639:
  6542                           
  6543                           ;main.c: 1040:                     while (1 == MTOUCH_Button_isPressed(T_1)) {
  6544  039D  3000               	movlw	0
  6545  039E  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6546  03A1  3A01               	xorlw	1
  6547  03A2  1903               	skipnz
  6548  03A3  2BA5               	goto	u6251
  6549  03A4  2BA6               	goto	u6250
  6550  03A5                     u6251:
  6551  03A5  2B9A               	goto	l7637
  6552  03A6                     u6250:
  6553  03A6                     l7641:
  6554                           
  6555                           ;main.c: 1044:                     TX_Command(TX_7SEG_SET_MEM_2);
  6556  03A6  307A               	movlw	122
  6557  03A7  319E  26E1  3180   	fcall	_TX_Command
  6558  03AA                     l7643:
  6559                           
  6560                           ;main.c: 1046:                     g_mass = g_memory_mass[1];
  6561  03AA  0021               	movlb	1	; select bank1
  6562  03AB  0823               	movf	((_g_memory_mass+1)^(0+128)+2),w
  6563  03AC  0020               	movlb	0	; select bank0
  6564  03AD  00DA               	movwf	_g_mass+1	;volatile
  6565  03AE  0021               	movlb	1	; select bank1
  6566  03AF  0822               	movf	(_g_memory_mass^(0+128)+2),w
  6567  03B0  0020               	movlb	0	; select bank0
  6568  03B1  00D9               	movwf	_g_mass	;volatile
  6569  03B2                     l7645:
  6570                           
  6571                           ;main.c: 1047:                     g_time_ms = ge_time_ms;
  6572  03B2  3008               	movlw	(low _ge_time_ms)& (0+255)
  6573  03B3  319F  27D8  3180   	fcall	___eetoi
  6574  03B6  0879               	movf	?___eetoi+1,w
  6575  03B7  0020               	movlb	0	; select bank0
  6576  03B8  00EB               	movwf	_g_time_ms+1	;volatile
  6577  03B9  0878               	movf	?___eetoi,w
  6578  03BA  00EA               	movwf	_g_time_ms	;volatile
  6579  03BB                     l7647:
  6580                           
  6581                           ;main.c: 1050:                 TX_Command(TX_7SEG_STORE_MASS);
  6582  03BB  3043               	movlw	67
  6583  03BC  319E  26E1  3180   	fcall	_TX_Command
  6584  03BF                     l7649:
  6585                           
  6586                           ;main.c: 1051:                 set_digit_counters(g_memory_mass[1], g_time_ms);
  6587  03BF  0021               	movlb	1	; select bank1
  6588  03C0  0823               	movf	((_g_memory_mass+1)^(0+128)+2),w
  6589  03C1  0020               	movlb	0	; select bank0
  6590  03C2  00A1               	movwf	set_digit_counters@mass+1
  6591  03C3  0021               	movlb	1	; select bank1
  6592  03C4  0822               	movf	(_g_memory_mass^(0+128)+2),w
  6593  03C5  0020               	movlb	0	; select bank0
  6594  03C6  00A0               	movwf	set_digit_counters@mass
  6595  03C7  086B               	movf	_g_time_ms+1,w	;volatile
  6596  03C8  00A3               	movwf	set_digit_counters@time+1
  6597  03C9  086A               	movf	_g_time_ms,w	;volatile
  6598  03CA  00A2               	movwf	set_digit_counters@time
  6599  03CB  318C  24D8  3180   	fcall	_set_digit_counters
  6600  03CE                     l7651:
  6601                           
  6602                           ;main.c: 1052:                 g_sss_status = start_e;
  6603  03CE  0020               	movlb	0	; select bank0
  6604  03CF  01E1               	clrf	_g_sss_status
  6605  03D0  0AE1               	incf	_g_sss_status,f
  6606  03D1                     l7653:
  6607                           
  6608                           ;main.c: 1056:             if (1 == MTOUCH_Button_isPressed(T_2)) {
  6609  03D1  3001               	movlw	1
  6610  03D2  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6611  03D5  3A01               	xorlw	1
  6612  03D6  1D03               	skipz
  6613  03D7  2BD9               	goto	u6261
  6614  03D8  2BDA               	goto	u6260
  6615  03D9                     u6261:
  6616  03D9  2C7A               	goto	l7703
  6617  03DA                     u6260:
  6618  03DA                     l7655:
  6619                           
  6620                           ;main.c: 1058:                 TX_Command(TX_END_SELECT_DIGIT);
  6621  03DA  302A               	movlw	42
  6622  03DB  319E  26E1  3180   	fcall	_TX_Command
  6623                           
  6624                           ;main.c: 1059:                 TX_Command(TX_STOP_DECREASE);
  6625  03DE  303F               	movlw	63
  6626  03DF  319E  26E1  3180   	fcall	_TX_Command
  6627  03E2                     l7657:
  6628                           
  6629                           ;main.c: 1060:                 TMR1_StopTimer();
  6630  03E2  319E  2665  3180   	fcall	_TMR1_StopTimer
  6631  03E5                     l7659:
  6632  03E5  0022               	movlb	2	; select bank2
  6633  03E6  128C               	bcf	12,5	;volatile
  6634  03E7                     l7661:
  6635                           
  6636                           ;main.c: 1063:                 g_tmr0_longpress_duration_counter = 0;
  6637  03E7  0020               	movlb	0	; select bank0
  6638  03E8  01DB               	clrf	_g_tmr0_longpress_duration_counter
  6639  03E9  01DC               	clrf	_g_tmr0_longpress_duration_counter+1
  6640                           
  6641                           ;main.c: 1065:                 while ((1 == MTOUCH_Button_isPressed(T_2)) &&
  6642  03EA  2BEE               	goto	l7665
  6643  03EB                     l7663:
  6644                           
  6645                           ;main.c: 1066:                         (g_tmr0_longpress_duration_counter < 80)) {;main.
      +                          c: 1067:                     MTOUCH_Service_Mainloop();
  6646  03EB  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6647  03EE                     l7665:
  6648                           
  6649                           ;main.c: 1065:                 while ((1 == MTOUCH_Button_isPressed(T_2)) &&
  6650  03EE  3001               	movlw	1
  6651  03EF  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6652  03F2  3A01               	xorlw	1
  6653  03F3  1D03               	skipz
  6654  03F4  2BF6               	goto	u6271
  6655  03F5  2BF7               	goto	u6270
  6656  03F6                     u6271:
  6657  03F6  2C01               	goto	l7669
  6658  03F7                     u6270:
  6659  03F7                     l7667:
  6660  03F7  3000               	movlw	0
  6661  03F8  0020               	movlb	0	; select bank0
  6662  03F9  025C               	subwf	_g_tmr0_longpress_duration_counter+1,w
  6663  03FA  3050               	movlw	80
  6664  03FB  1903               	skipnz
  6665  03FC  025B               	subwf	_g_tmr0_longpress_duration_counter,w
  6666  03FD  1C03               	skipc
  6667  03FE  2C00               	goto	u6281
  6668  03FF  2C01               	goto	u6280
  6669  0400                     u6281:
  6670  0400  2BEB               	goto	l7663
  6671  0401                     u6280:
  6672  0401                     l7669:
  6673                           
  6674                           ;main.c: 1070:                 if (1 == MTOUCH_Button_isPressed(T_2)) {
  6675  0401  3001               	movlw	1
  6676  0402  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6677  0405  3A01               	xorlw	1
  6678  0406  1D03               	skipz
  6679  0407  2C09               	goto	u6291
  6680  0408  2C0A               	goto	u6290
  6681  0409                     u6291:
  6682  0409  2C3E               	goto	l7685
  6683  040A                     u6290:
  6684  040A                     l7671:
  6685                           
  6686                           ;main.c: 1072:                     SET_SOUND_MODE(dimmer_is_min);
  6687  040A  3008               	movlw	8
  6688  040B  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6689                           
  6690                           ;main.c: 1074:                     while (1 == MTOUCH_Button_isPressed(T_2)) {
  6691  040E  2C12               	goto	l7675
  6692  040F                     l7673:
  6693                           
  6694                           ;main.c: 1075:                         MTOUCH_Service_Mainloop();
  6695  040F  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6696  0412                     l7675:
  6697                           
  6698                           ;main.c: 1074:                     while (1 == MTOUCH_Button_isPressed(T_2)) {
  6699  0412  3001               	movlw	1
  6700  0413  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6701  0416  3A01               	xorlw	1
  6702  0417  1903               	skipnz
  6703  0418  2C1A               	goto	u6301
  6704  0419  2C1B               	goto	u6300
  6705  041A                     u6301:
  6706  041A  2C0F               	goto	l7673
  6707  041B                     u6300:
  6708  041B                     l7677:
  6709                           
  6710                           ;main.c: 1078:                     TX_Command(TX_7SEG_STORE_MEM_3);
  6711  041B  3083               	movlw	131
  6712  041C  319E  26E1  3180   	fcall	_TX_Command
  6713                           
  6714                           ;main.c: 1079:                     TX_Command(TX_7SEG_SET_MEM_3);
  6715  041F  3084               	movlw	132
  6716  0420  319E  26E1  3180   	fcall	_TX_Command
  6717  0423                     l7679:
  6718                           
  6719                           ;main.c: 1081:                     ge_memory_mass[2] = g_mass;
  6720  0423  0020               	movlb	0	; select bank0
  6721  0424  085A               	movf	_g_mass+1,w	;volatile
  6722  0425  00F9               	movwf	___itoee@data+1
  6723  0426  0859               	movf	_g_mass,w	;volatile
  6724  0427  00F8               	movwf	___itoee@data
  6725  0428  3004               	movlw	(low (_ge_memory_mass+4))& (0+255)
  6726  0429  319E  26FE  3180   	fcall	___itoee
  6727  042C                     l7681:
  6728                           
  6729                           ;main.c: 1082:                     g_memory_mass[2] = g_mass;
  6730  042C  0020               	movlb	0	; select bank0
  6731  042D  085A               	movf	_g_mass+1,w	;volatile
  6732  042E  0021               	movlb	1	; select bank1
  6733  042F  00A5               	movwf	((_g_memory_mass+1)^(0+128)+4)
  6734  0430  0020               	movlb	0	; select bank0
  6735  0431  0859               	movf	_g_mass,w	;volatile
  6736  0432  0021               	movlb	1	; select bank1
  6737  0433  00A4               	movwf	(_g_memory_mass^(0+128)+4)
  6738  0434                     l7683:
  6739                           
  6740                           ;main.c: 1084:                     ge_time_ms = g_time_ms;
  6741  0434  0020               	movlb	0	; select bank0
  6742  0435  086B               	movf	_g_time_ms+1,w	;volatile
  6743  0436  00F9               	movwf	___itoee@data+1
  6744  0437  086A               	movf	_g_time_ms,w	;volatile
  6745  0438  00F8               	movwf	___itoee@data
  6746  0439  3008               	movlw	(low _ge_time_ms)& (0+255)
  6747  043A  319E  26FE  3180   	fcall	___itoee
  6748                           
  6749                           ;main.c: 1086:                 } else {
  6750  043D  2C64               	goto	l7697
  6751  043E                     l7685:
  6752                           
  6753                           ;main.c: 1088:                     SET_SOUND_MODE(learn_rf_code_is_start);
  6754  043E  3000               	movlw	0
  6755  043F  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6756                           
  6757                           ;main.c: 1090:                     while (1 == MTOUCH_Button_isPressed(T_2)) {
  6758  0442  2C46               	goto	l7689
  6759  0443                     l7687:
  6760                           
  6761                           ;main.c: 1091:                         MTOUCH_Service_Mainloop();
  6762  0443  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6763  0446                     l7689:
  6764                           
  6765                           ;main.c: 1090:                     while (1 == MTOUCH_Button_isPressed(T_2)) {
  6766  0446  3001               	movlw	1
  6767  0447  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6768  044A  3A01               	xorlw	1
  6769  044B  1903               	skipnz
  6770  044C  2C4E               	goto	u6311
  6771  044D  2C4F               	goto	u6310
  6772  044E                     u6311:
  6773  044E  2C43               	goto	l7687
  6774  044F                     u6310:
  6775  044F                     l7691:
  6776                           
  6777                           ;main.c: 1094:                     TX_Command(TX_7SEG_SET_MEM_3);
  6778  044F  3084               	movlw	132
  6779  0450  319E  26E1  3180   	fcall	_TX_Command
  6780  0453                     l7693:
  6781                           
  6782                           ;main.c: 1096:                     g_mass = g_memory_mass[2];
  6783  0453  0021               	movlb	1	; select bank1
  6784  0454  0825               	movf	((_g_memory_mass+1)^(0+128)+4),w
  6785  0455  0020               	movlb	0	; select bank0
  6786  0456  00DA               	movwf	_g_mass+1	;volatile
  6787  0457  0021               	movlb	1	; select bank1
  6788  0458  0824               	movf	(_g_memory_mass^(0+128)+4),w
  6789  0459  0020               	movlb	0	; select bank0
  6790  045A  00D9               	movwf	_g_mass	;volatile
  6791  045B                     l7695:
  6792                           
  6793                           ;main.c: 1097:                     g_time_ms = ge_time_ms;
  6794  045B  3008               	movlw	(low _ge_time_ms)& (0+255)
  6795  045C  319F  27D8  3180   	fcall	___eetoi
  6796  045F  0879               	movf	?___eetoi+1,w
  6797  0460  0020               	movlb	0	; select bank0
  6798  0461  00EB               	movwf	_g_time_ms+1	;volatile
  6799  0462  0878               	movf	?___eetoi,w
  6800  0463  00EA               	movwf	_g_time_ms	;volatile
  6801  0464                     l7697:
  6802                           
  6803                           ;main.c: 1100:                 TX_Command(TX_7SEG_STORE_MASS);
  6804  0464  3043               	movlw	67
  6805  0465  319E  26E1  3180   	fcall	_TX_Command
  6806  0468                     l7699:
  6807                           
  6808                           ;main.c: 1101:                 set_digit_counters(g_memory_mass[2], g_time_ms);
  6809  0468  0021               	movlb	1	; select bank1
  6810  0469  0825               	movf	((_g_memory_mass+1)^(0+128)+4),w
  6811  046A  0020               	movlb	0	; select bank0
  6812  046B  00A1               	movwf	set_digit_counters@mass+1
  6813  046C  0021               	movlb	1	; select bank1
  6814  046D  0824               	movf	(_g_memory_mass^(0+128)+4),w
  6815  046E  0020               	movlb	0	; select bank0
  6816  046F  00A0               	movwf	set_digit_counters@mass
  6817  0470  086B               	movf	_g_time_ms+1,w	;volatile
  6818  0471  00A3               	movwf	set_digit_counters@time+1
  6819  0472  086A               	movf	_g_time_ms,w	;volatile
  6820  0473  00A2               	movwf	set_digit_counters@time
  6821  0474  318C  24D8  3180   	fcall	_set_digit_counters
  6822  0477                     l7701:
  6823                           
  6824                           ;main.c: 1102:                 g_sss_status = start_e;
  6825  0477  0020               	movlb	0	; select bank0
  6826  0478  01E1               	clrf	_g_sss_status
  6827  0479  0AE1               	incf	_g_sss_status,f
  6828  047A                     l7703:
  6829                           
  6830                           ;main.c: 1106:             if (1 == MTOUCH_Button_isPressed(T_4)) {
  6831  047A  3003               	movlw	3
  6832  047B  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6833  047E  3A01               	xorlw	1
  6834  047F  1D03               	skipz
  6835  0480  2C82               	goto	u6321
  6836  0481  2C83               	goto	u6320
  6837  0482                     u6321:
  6838  0482  2D23               	goto	l7753
  6839  0483                     u6320:
  6840  0483                     l7705:
  6841                           
  6842                           ;main.c: 1108:                 TX_Command(TX_END_SELECT_DIGIT);
  6843  0483  302A               	movlw	42
  6844  0484  319E  26E1  3180   	fcall	_TX_Command
  6845                           
  6846                           ;main.c: 1109:                 TX_Command(TX_STOP_DECREASE);
  6847  0487  303F               	movlw	63
  6848  0488  319E  26E1  3180   	fcall	_TX_Command
  6849  048B                     l7707:
  6850                           
  6851                           ;main.c: 1110:                 TMR1_StopTimer();
  6852  048B  319E  2665  3180   	fcall	_TMR1_StopTimer
  6853  048E                     l7709:
  6854  048E  0022               	movlb	2	; select bank2
  6855  048F  128C               	bcf	12,5	;volatile
  6856  0490                     l7711:
  6857                           
  6858                           ;main.c: 1113:                 g_tmr0_longpress_duration_counter = 0;
  6859  0490  0020               	movlb	0	; select bank0
  6860  0491  01DB               	clrf	_g_tmr0_longpress_duration_counter
  6861  0492  01DC               	clrf	_g_tmr0_longpress_duration_counter+1
  6862                           
  6863                           ;main.c: 1115:                 while ((1 == MTOUCH_Button_isPressed(T_4)) &&
  6864  0493  2C97               	goto	l7715
  6865  0494                     l7713:
  6866                           
  6867                           ;main.c: 1116:                         (g_tmr0_longpress_duration_counter < 80)) {;main.
      +                          c: 1117:                     MTOUCH_Service_Mainloop();
  6868  0494  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6869  0497                     l7715:
  6870                           
  6871                           ;main.c: 1115:                 while ((1 == MTOUCH_Button_isPressed(T_4)) &&
  6872  0497  3003               	movlw	3
  6873  0498  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6874  049B  3A01               	xorlw	1
  6875  049C  1D03               	skipz
  6876  049D  2C9F               	goto	u6331
  6877  049E  2CA0               	goto	u6330
  6878  049F                     u6331:
  6879  049F  2CAA               	goto	l7719
  6880  04A0                     u6330:
  6881  04A0                     l7717:
  6882  04A0  3000               	movlw	0
  6883  04A1  0020               	movlb	0	; select bank0
  6884  04A2  025C               	subwf	_g_tmr0_longpress_duration_counter+1,w
  6885  04A3  3050               	movlw	80
  6886  04A4  1903               	skipnz
  6887  04A5  025B               	subwf	_g_tmr0_longpress_duration_counter,w
  6888  04A6  1C03               	skipc
  6889  04A7  2CA9               	goto	u6341
  6890  04A8  2CAA               	goto	u6340
  6891  04A9                     u6341:
  6892  04A9  2C94               	goto	l7713
  6893  04AA                     u6340:
  6894  04AA                     l7719:
  6895                           
  6896                           ;main.c: 1120:                 if (1 == MTOUCH_Button_isPressed(T_4)) {
  6897  04AA  3003               	movlw	3
  6898  04AB  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6899  04AE  3A01               	xorlw	1
  6900  04AF  1D03               	skipz
  6901  04B0  2CB2               	goto	u6351
  6902  04B1  2CB3               	goto	u6350
  6903  04B2                     u6351:
  6904  04B2  2CE7               	goto	l7735
  6905  04B3                     u6350:
  6906  04B3                     l7721:
  6907                           
  6908                           ;main.c: 1122:                     SET_SOUND_MODE(dimmer_is_min);
  6909  04B3  3008               	movlw	8
  6910  04B4  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6911                           
  6912                           ;main.c: 1124:                     while (1 == MTOUCH_Button_isPressed(T_4)) {
  6913  04B7  2CBB               	goto	l7725
  6914  04B8                     l7723:
  6915                           
  6916                           ;main.c: 1125:                         MTOUCH_Service_Mainloop();
  6917  04B8  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6918  04BB                     l7725:
  6919                           
  6920                           ;main.c: 1124:                     while (1 == MTOUCH_Button_isPressed(T_4)) {
  6921  04BB  3003               	movlw	3
  6922  04BC  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6923  04BF  3A01               	xorlw	1
  6924  04C0  1903               	skipnz
  6925  04C1  2CC3               	goto	u6361
  6926  04C2  2CC4               	goto	u6360
  6927  04C3                     u6361:
  6928  04C3  2CB8               	goto	l7723
  6929  04C4                     u6360:
  6930  04C4                     l7727:
  6931                           
  6932                           ;main.c: 1128:                     TX_Command(TX_7SEG_STORE_MEM_4);
  6933  04C4  308D               	movlw	141
  6934  04C5  319E  26E1  3180   	fcall	_TX_Command
  6935                           
  6936                           ;main.c: 1129:                     TX_Command(TX_7SEG_SET_MEM_4);
  6937  04C8  308E               	movlw	142
  6938  04C9  319E  26E1  3180   	fcall	_TX_Command
  6939  04CC                     l7729:
  6940                           
  6941                           ;main.c: 1131:                     ge_memory_mass[3] = g_mass;
  6942  04CC  0020               	movlb	0	; select bank0
  6943  04CD  085A               	movf	_g_mass+1,w	;volatile
  6944  04CE  00F9               	movwf	___itoee@data+1
  6945  04CF  0859               	movf	_g_mass,w	;volatile
  6946  04D0  00F8               	movwf	___itoee@data
  6947  04D1  3006               	movlw	(low (_ge_memory_mass+6))& (0+255)
  6948  04D2  319E  26FE  3180   	fcall	___itoee
  6949  04D5                     l7731:
  6950                           
  6951                           ;main.c: 1132:                     g_memory_mass[3] = g_mass;
  6952  04D5  0020               	movlb	0	; select bank0
  6953  04D6  085A               	movf	_g_mass+1,w	;volatile
  6954  04D7  0021               	movlb	1	; select bank1
  6955  04D8  00A7               	movwf	((_g_memory_mass+1)^(0+128)+6)
  6956  04D9  0020               	movlb	0	; select bank0
  6957  04DA  0859               	movf	_g_mass,w	;volatile
  6958  04DB  0021               	movlb	1	; select bank1
  6959  04DC  00A6               	movwf	(_g_memory_mass^(0+128)+6)
  6960  04DD                     l7733:
  6961                           
  6962                           ;main.c: 1134:                     ge_time_ms = g_time_ms;
  6963  04DD  0020               	movlb	0	; select bank0
  6964  04DE  086B               	movf	_g_time_ms+1,w	;volatile
  6965  04DF  00F9               	movwf	___itoee@data+1
  6966  04E0  086A               	movf	_g_time_ms,w	;volatile
  6967  04E1  00F8               	movwf	___itoee@data
  6968  04E2  3008               	movlw	(low _ge_time_ms)& (0+255)
  6969  04E3  319E  26FE  3180   	fcall	___itoee
  6970                           
  6971                           ;main.c: 1136:                 } else {
  6972  04E6  2D0D               	goto	l7747
  6973  04E7                     l7735:
  6974                           
  6975                           ;main.c: 1138:                     SET_SOUND_MODE(learn_rf_code_is_start);
  6976  04E7  3000               	movlw	0
  6977  04E8  3186  268E  3180   	fcall	_SET_SOUND_MODE
  6978                           
  6979                           ;main.c: 1140:                     while (1 == MTOUCH_Button_isPressed(T_4)) {
  6980  04EB  2CEF               	goto	l7739
  6981  04EC                     l7737:
  6982                           
  6983                           ;main.c: 1141:                         MTOUCH_Service_Mainloop();
  6984  04EC  3196  2629  3180   	fcall	_MTOUCH_Service_Mainloop
  6985  04EF                     l7739:
  6986                           
  6987                           ;main.c: 1140:                     while (1 == MTOUCH_Button_isPressed(T_4)) {
  6988  04EF  3003               	movlw	3
  6989  04F0  3195  25D8  3180   	fcall	_MTOUCH_Button_isPressed
  6990  04F3  3A01               	xorlw	1
  6991  04F4  1903               	skipnz
  6992  04F5  2CF7               	goto	u6371
  6993  04F6  2CF8               	goto	u6370
  6994  04F7                     u6371:
  6995  04F7  2CEC               	goto	l7737
  6996  04F8                     u6370:
  6997  04F8                     l7741:
  6998                           
  6999                           ;main.c: 1144:                     TX_Command(TX_7SEG_SET_MEM_4);
  7000  04F8  308E               	movlw	142
  7001  04F9  319E  26E1  3180   	fcall	_TX_Command
  7002  04FC                     l7743:
  7003                           
  7004                           ;main.c: 1146:                     g_mass = g_memory_mass[3];
  7005  04FC  0021               	movlb	1	; select bank1
  7006  04FD  0827               	movf	((_g_memory_mass+1)^(0+128)+6),w
  7007  04FE  0020               	movlb	0	; select bank0
  7008  04FF  00DA               	movwf	_g_mass+1	;volatile
  7009  0500  0021               	movlb	1	; select bank1
  7010  0501  0826               	movf	(_g_memory_mass^(0+128)+6),w
  7011  0502  0020               	movlb	0	; select bank0
  7012  0503  00D9               	movwf	_g_mass	;volatile
  7013  0504                     l7745:
  7014                           
  7015                           ;main.c: 1147:                     g_time_ms = ge_time_ms;
  7016  0504  3008               	movlw	(low _ge_time_ms)& (0+255)
  7017  0505  319F  27D8  3180   	fcall	___eetoi
  7018  0508  0879               	movf	?___eetoi+1,w
  7019  0509  0020               	movlb	0	; select bank0
  7020  050A  00EB               	movwf	_g_time_ms+1	;volatile
  7021  050B  0878               	movf	?___eetoi,w
  7022  050C  00EA               	movwf	_g_time_ms	;volatile
  7023  050D                     l7747:
  7024                           
  7025                           ;main.c: 1150:                 TX_Command(TX_7SEG_STORE_MASS);
  7026  050D  3043               	movlw	67
  7027  050E  319E  26E1  3180   	fcall	_TX_Command
  7028  0511                     l7749:
  7029                           
  7030                           ;main.c: 1151:                 set_digit_counters(g_memory_mass[3], g_time_ms);
  7031  0511  0021               	movlb	1	; select bank1
  7032  0512  0827               	movf	((_g_memory_mass+1)^(0+128)+6),w
  7033  0513  0020               	movlb	0	; select bank0
  7034  0514  00A1               	movwf	set_digit_counters@mass+1
  7035  0515  0021               	movlb	1	; select bank1
  7036  0516  0826               	movf	(_g_memory_mass^(0+128)+6),w
  7037  0517  0020               	movlb	0	; select bank0
  7038  0518  00A0               	movwf	set_digit_counters@mass
  7039  0519  086B               	movf	_g_time_ms+1,w	;volatile
  7040  051A  00A3               	movwf	set_digit_counters@time+1
  7041  051B  086A               	movf	_g_time_ms,w	;volatile
  7042  051C  00A2               	movwf	set_digit_counters@time
  7043  051D  318C  24D8  3180   	fcall	_set_digit_counters
  7044  0520                     l7751:
  7045                           
  7046                           ;main.c: 1152:                 g_sss_status = start_e;
  7047  0520  0020               	movlb	0	; select bank0
  7048  0521  01E1               	clrf	_g_sss_status
  7049  0522  0AE1               	incf	_g_sss_status,f
  7050  0523                     l7753:
  7051                           
  7052                           ;main.c: 1156:             if (gb_motor_timer_off) {
  7053  0523  0020               	movlb	0	; select bank0
  7054  0524  085D               	movf	_gb_motor_timer_off,w
  7055  0525  1903               	btfsc	3,2
  7056  0526  2D28               	goto	u6381
  7057  0527  2D29               	goto	u6380
  7058  0528                     u6381:
  7059  0528  28D2               	goto	l7419
  7060  0529                     u6380:
  7061  0529                     l7755:
  7062                           
  7063                           ;main.c: 1158:                 gb_motor_timer_off = 0;
  7064  0529  01DD               	clrf	_gb_motor_timer_off
  7065  052A                     l7757:
  7066                           
  7067                           ;main.c: 1164:                 SET_SOUND_MODE(dimmer_is_max);
  7068  052A  3007               	movlw	7
  7069  052B  3186  268E  3180   	fcall	_SET_SOUND_MODE
  7070  052E  28D2               	goto	l7419
  7071  052F                     l1212:
  7072                           
  7073                           ;main.c: 1169:     if (g_power_event.automatic) {
  7074  052F  0020               	movlb	0	; select bank0
  7075  0530  1C5E               	btfss	_g_power_event,0
  7076  0531  2D33               	goto	u6391
  7077  0532  2D34               	goto	u6390
  7078  0533                     u6391:
  7079  0533  2D42               	goto	l1311
  7080  0534                     u6390:
  7081  0534                     l7759:
  7082                           
  7083                           ;main.c: 1171:         g_power_event.automatic = 0;
  7084  0534  105E               	bcf	_g_power_event,0
  7085  0535                     l7761:
  7086                           
  7087                           ;main.c: 1172:         TMR1_StopTimer();
  7088  0535  319E  2665  3180   	fcall	_TMR1_StopTimer
  7089  0538                     l7763:
  7090                           
  7091                           ;main.c: 1173:         g_tmr1_motor_counter = 0;
  7092  0538  0021               	movlb	1	; select bank1
  7093  0539  01A8               	clrf	_g_tmr1_motor_counter^(0+128)
  7094  053A  01A9               	clrf	(_g_tmr1_motor_counter+1)^(0+128)
  7095  053B                     l7765:
  7096                           
  7097                           ;main.c: 1174:         TX_Command(TX_END_SELECT_DIGIT);
  7098  053B  302A               	movlw	42
  7099  053C  319E  26E1  3180   	fcall	_TX_Command
  7100  053F                     l7767:
  7101                           
  7102                           ;main.c: 1176:         FCN_POWER();
  7103  053F  3191  211E  3180   	fcall	_FCN_POWER
  7104  0542                     l1311:
  7105  0542  0008               	return
  7106  0543                     __end_of_Automatic_Mode:
  7107                           
  7108                           	psect	text17
  7109  0CD8                     __ptext17:	
  7110 ;; *************** function _set_digit_counters *****************
  7111 ;; Defined at:
  7112 ;;		line 1191 in file "main.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;  mass            2    0[BANK0 ] unsigned short 
  7115 ;;  time            2    2[BANK0 ] unsigned short 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;  buffer          2    5[BANK0 ] unsigned short 
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  1    wreg      void 
  7120 ;; Registers used:
  7121 ;;		wreg, status,2, status,0, pclath, cstack
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7127 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;Total ram usage:        7 bytes
  7132 ;; Hardware stack levels used: 1
  7133 ;; Hardware stack levels required when called: 5
  7134 ;; This function calls:
  7135 ;;		___lwdiv
  7136 ;;		___lwmod
  7137 ;; This function is called by:
  7138 ;;		_Automatic_Mode
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           
  7143                           ;psect for function _set_digit_counters
  7144  0CD8                     _set_digit_counters:
  7145  0CD8                     l7375:	
  7146                           ;incstack = 0
  7147                           ; Regs used in _set_digit_counters: [wreg+status,2+status,0+pclath+cstack]
  7148                           
  7149                           
  7150                           ;main.c: 1193:     uint16_t buffer;;main.c: 1195:     g_mass_calc.sadegan = mass / 100;
  7151  0CD8  3064               	movlw	100
  7152  0CD9  00F2               	movwf	___lwdiv@divisor
  7153  0CDA  3000               	movlw	0
  7154  0CDB  00F3               	movwf	___lwdiv@divisor+1
  7155  0CDC  0020               	movlb	0	; select bank0
  7156  0CDD  0821               	movf	set_digit_counters@mass+1,w
  7157  0CDE  00F5               	movwf	___lwdiv@dividend+1
  7158  0CDF  0820               	movf	set_digit_counters@mass,w
  7159  0CE0  00F4               	movwf	___lwdiv@dividend
  7160  0CE1  3188  2005  318C   	fcall	___lwdiv
  7161  0CE4  0872               	movf	?___lwdiv,w
  7162  0CE5  0020               	movlb	0	; select bank0
  7163  0CE6  00A4               	movwf	??_set_digit_counters
  7164  0CE7  0824               	movf	??_set_digit_counters,w
  7165  0CE8  00D5               	movwf	_g_mass_calc+2
  7166                           
  7167                           ;main.c: 1196:     buffer = mass % 100;
  7168  0CE9  3064               	movlw	100
  7169  0CEA  00F2               	movwf	___lwmod@divisor
  7170  0CEB  3000               	movlw	0
  7171  0CEC  00F3               	movwf	___lwmod@divisor+1
  7172  0CED  0821               	movf	set_digit_counters@mass+1,w
  7173  0CEE  00F5               	movwf	___lwmod@dividend+1
  7174  0CEF  0820               	movf	set_digit_counters@mass,w
  7175  0CF0  00F4               	movwf	___lwmod@dividend
  7176  0CF1  3197  27CC  318C   	fcall	___lwmod
  7177  0CF4  0873               	movf	?___lwmod+1,w
  7178  0CF5  0020               	movlb	0	; select bank0
  7179  0CF6  00A6               	movwf	set_digit_counters@buffer+1
  7180  0CF7  0872               	movf	?___lwmod,w
  7181  0CF8  00A5               	movwf	set_digit_counters@buffer
  7182                           
  7183                           ;main.c: 1197:     g_mass_calc.dahegan = buffer / 10;
  7184  0CF9  300A               	movlw	10
  7185  0CFA  00F2               	movwf	___lwdiv@divisor
  7186  0CFB  3000               	movlw	0
  7187  0CFC  00F3               	movwf	___lwdiv@divisor+1
  7188  0CFD  0826               	movf	set_digit_counters@buffer+1,w
  7189  0CFE  00F5               	movwf	___lwdiv@dividend+1
  7190  0CFF  0825               	movf	set_digit_counters@buffer,w
  7191  0D00  00F4               	movwf	___lwdiv@dividend
  7192  0D01  3188  2005  318C   	fcall	___lwdiv
  7193  0D04  0872               	movf	?___lwdiv,w
  7194  0D05  0020               	movlb	0	; select bank0
  7195  0D06  00A4               	movwf	??_set_digit_counters
  7196  0D07  0824               	movf	??_set_digit_counters,w
  7197  0D08  00D4               	movwf	_g_mass_calc+1
  7198                           
  7199                           ;main.c: 1198:     g_mass_calc.yekan = buffer % 10;
  7200  0D09  300A               	movlw	10
  7201  0D0A  00F2               	movwf	___lwmod@divisor
  7202  0D0B  3000               	movlw	0
  7203  0D0C  00F3               	movwf	___lwmod@divisor+1
  7204  0D0D  0826               	movf	set_digit_counters@buffer+1,w
  7205  0D0E  00F5               	movwf	___lwmod@dividend+1
  7206  0D0F  0825               	movf	set_digit_counters@buffer,w
  7207  0D10  00F4               	movwf	___lwmod@dividend
  7208  0D11  3197  27CC  318C   	fcall	___lwmod
  7209  0D14  0872               	movf	?___lwmod,w
  7210  0D15  0020               	movlb	0	; select bank0
  7211  0D16  00A4               	movwf	??_set_digit_counters
  7212  0D17  0824               	movf	??_set_digit_counters,w
  7213  0D18  00D3               	movwf	_g_mass_calc
  7214                           
  7215                           ;main.c: 1200:     g_time_calc.sadegan = time / 100;
  7216  0D19  3064               	movlw	100
  7217  0D1A  00F2               	movwf	___lwdiv@divisor
  7218  0D1B  3000               	movlw	0
  7219  0D1C  00F3               	movwf	___lwdiv@divisor+1
  7220  0D1D  0823               	movf	set_digit_counters@time+1,w
  7221  0D1E  00F5               	movwf	___lwdiv@dividend+1
  7222  0D1F  0822               	movf	set_digit_counters@time,w
  7223  0D20  00F4               	movwf	___lwdiv@dividend
  7224  0D21  3188  2005  318C   	fcall	___lwdiv
  7225  0D24  0872               	movf	?___lwdiv,w
  7226  0D25  0020               	movlb	0	; select bank0
  7227  0D26  00A4               	movwf	??_set_digit_counters
  7228  0D27  0824               	movf	??_set_digit_counters,w
  7229  0D28  00D8               	movwf	_g_time_calc+2
  7230                           
  7231                           ;main.c: 1201:     buffer = time % 100;
  7232  0D29  3064               	movlw	100
  7233  0D2A  00F2               	movwf	___lwmod@divisor
  7234  0D2B  3000               	movlw	0
  7235  0D2C  00F3               	movwf	___lwmod@divisor+1
  7236  0D2D  0823               	movf	set_digit_counters@time+1,w
  7237  0D2E  00F5               	movwf	___lwmod@dividend+1
  7238  0D2F  0822               	movf	set_digit_counters@time,w
  7239  0D30  00F4               	movwf	___lwmod@dividend
  7240  0D31  3197  27CC  318C   	fcall	___lwmod
  7241  0D34  0873               	movf	?___lwmod+1,w
  7242  0D35  0020               	movlb	0	; select bank0
  7243  0D36  00A6               	movwf	set_digit_counters@buffer+1
  7244  0D37  0872               	movf	?___lwmod,w
  7245  0D38  00A5               	movwf	set_digit_counters@buffer
  7246                           
  7247                           ;main.c: 1202:     g_time_calc.dahegan = buffer / 10;
  7248  0D39  300A               	movlw	10
  7249  0D3A  00F2               	movwf	___lwdiv@divisor
  7250  0D3B  3000               	movlw	0
  7251  0D3C  00F3               	movwf	___lwdiv@divisor+1
  7252  0D3D  0826               	movf	set_digit_counters@buffer+1,w
  7253  0D3E  00F5               	movwf	___lwdiv@dividend+1
  7254  0D3F  0825               	movf	set_digit_counters@buffer,w
  7255  0D40  00F4               	movwf	___lwdiv@dividend
  7256  0D41  3188  2005  318C   	fcall	___lwdiv
  7257  0D44  0872               	movf	?___lwdiv,w
  7258  0D45  0020               	movlb	0	; select bank0
  7259  0D46  00A4               	movwf	??_set_digit_counters
  7260  0D47  0824               	movf	??_set_digit_counters,w
  7261  0D48  00D7               	movwf	_g_time_calc+1
  7262                           
  7263                           ;main.c: 1203:     g_time_calc.yekan = buffer % 10;
  7264  0D49  300A               	movlw	10
  7265  0D4A  00F2               	movwf	___lwmod@divisor
  7266  0D4B  3000               	movlw	0
  7267  0D4C  00F3               	movwf	___lwmod@divisor+1
  7268  0D4D  0826               	movf	set_digit_counters@buffer+1,w
  7269  0D4E  00F5               	movwf	___lwmod@dividend+1
  7270  0D4F  0825               	movf	set_digit_counters@buffer,w
  7271  0D50  00F4               	movwf	___lwmod@dividend
  7272  0D51  3197  27CC  318C   	fcall	___lwmod
  7273  0D54  0872               	movf	?___lwmod,w
  7274  0D55  0020               	movlb	0	; select bank0
  7275  0D56  00A4               	movwf	??_set_digit_counters
  7276  0D57  0824               	movf	??_set_digit_counters,w
  7277  0D58  00D6               	movwf	_g_time_calc
  7278  0D59                     l1317:
  7279  0D59  0008               	return
  7280  0D5A                     __end_of_set_digit_counters:
  7281                           
  7282                           	psect	text18
  7283  16A9                     __ptext18:	
  7284 ;; *************** function ___tmul *****************
  7285 ;; Defined at:
  7286 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul24.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  multiplier      3    2[COMMON] unsigned um
  7289 ;;  multiplicand    3    5[COMMON] unsigned um
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  product         3    0[BANK0 ] unsigned um
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  3    2[COMMON] unsigned um
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7301 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;Total ram usage:        9 bytes
  7306 ;; Hardware stack levels used: 1
  7307 ;; Hardware stack levels required when called: 4
  7308 ;; This function calls:
  7309 ;;		Nothing
  7310 ;; This function is called by:
  7311 ;;		_Automatic_Mode
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           
  7316                           ;psect for function ___tmul
  7317  16A9                     ___tmul:
  7318  16A9                     l7377:	
  7319                           ;incstack = 0
  7320                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  7321                           
  7322  16A9  3000               	movlw	0
  7323  16AA  0020               	movlb	0	; select bank0
  7324  16AB  00A0               	movwf	___tmul@product
  7325  16AC  3000               	movlw	0
  7326  16AD  00A1               	movwf	___tmul@product+1
  7327  16AE  3000               	movlw	0
  7328  16AF  00A2               	movwf	___tmul@product+2
  7329  16B0                     l7379:
  7330  16B0  1C72               	btfss	___tmul@multiplier,0
  7331  16B1  2EB3               	goto	u5911
  7332  16B2  2EB4               	goto	u5910
  7333  16B3                     u5911:
  7334  16B3  2EBB               	goto	l7383
  7335  16B4                     u5910:
  7336  16B4                     l7381:
  7337  16B4  0875               	movf	___tmul@multiplicand,w
  7338  16B5  0020               	movlb	0	; select bank0
  7339  16B6  07A0               	addwf	___tmul@product,f
  7340  16B7  0876               	movf	___tmul@multiplicand+1,w
  7341  16B8  3DA1               	addwfc	___tmul@product+1,f
  7342  16B9  0877               	movf	___tmul@multiplicand+2,w
  7343  16BA  3DA2               	addwfc	___tmul@product+2,f
  7344  16BB                     l7383:
  7345  16BB  3001               	movlw	1
  7346  16BC                     u5925:
  7347  16BC  35F5               	lslf	___tmul@multiplicand,f
  7348  16BD  0DF6               	rlf	___tmul@multiplicand+1,f
  7349  16BE  0DF7               	rlf	___tmul@multiplicand+2,f
  7350  16BF  0B89               	decfsz	9,f
  7351  16C0  2EBC               	goto	u5925
  7352  16C1                     l7385:
  7353  16C1  3001               	movlw	1
  7354  16C2                     u5935:
  7355  16C2  36F4               	lsrf	___tmul@multiplier+2,f
  7356  16C3  0CF3               	rrf	___tmul@multiplier+1,f
  7357  16C4  0CF2               	rrf	___tmul@multiplier,f
  7358  16C5  0B89               	decfsz	9,f
  7359  16C6  2EC2               	goto	u5935
  7360  16C7  0874               	movf	___tmul@multiplier+2,w
  7361  16C8  0473               	iorwf	___tmul@multiplier+1,w
  7362  16C9  0472               	iorwf	___tmul@multiplier,w
  7363  16CA  1D03               	skipz
  7364  16CB  2ECD               	goto	u5941
  7365  16CC  2ECE               	goto	u5940
  7366  16CD                     u5941:
  7367  16CD  2EB0               	goto	l7379
  7368  16CE                     u5940:
  7369  16CE                     l7387:
  7370  16CE  0020               	movlb	0	; select bank0
  7371  16CF  0820               	movf	___tmul@product,w
  7372  16D0  00F2               	movwf	?___tmul
  7373  16D1  0821               	movf	___tmul@product+1,w
  7374  16D2  00F3               	movwf	?___tmul+1
  7375  16D3  0822               	movf	___tmul@product+2,w
  7376  16D4  00F4               	movwf	?___tmul+2
  7377  16D5                     l1478:
  7378  16D5  0008               	return
  7379  16D6                     __end_of___tmul:
  7380                           
  7381                           	psect	text19
  7382  0543                     __ptext19:	
  7383 ;; *************** function _Timer_Mode *****************
  7384 ;; Defined at:
  7385 ;;		line 657 in file "main.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;		None
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;  buffer          2   39[BANK0 ] unsigned short 
  7390 ;;  b_power_touc    1   38[BANK0 ] _Bool 
  7391 ;;  b_mode_touch    1   37[BANK0 ] _Bool 
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      void 
  7394 ;; Registers used:
  7395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7402 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;Total ram usage:       14 bytes
  7406 ;; Hardware stack levels used: 1
  7407 ;; Hardware stack levels required when called: 11
  7408 ;; This function calls:
  7409 ;;		_FCN_NEXT
  7410 ;;		_FCN_UP
  7411 ;;		_MTOUCH_Button_isPressed
  7412 ;;		_MTOUCH_Service_Mainloop
  7413 ;;		_SET_SOUND_MODE
  7414 ;;		_TX_Command
  7415 ;;		___itoee
  7416 ;;		___lwdiv
  7417 ;;		___lwmod
  7418 ;;		___wmul
  7419 ;; This function is called by:
  7420 ;;		_Automatic_Mode
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           
  7425                           ;psect for function _Timer_Mode
  7426  0543                     _Timer_Mode:
  7427  0543                     l7291:	
  7428                           ;incstack = 0
  7429                           ; Regs used in _Timer_Mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7430                           
  7431                           
  7432                           ;main.c: 659:     uint16_t buffer;;main.c: 660:     _Bool b_mode_touched = 0;
  7433  0543  0020               	movlb	0	; select bank0
  7434  0544  01C5               	clrf	Timer_Mode@b_mode_touched
  7435                           
  7436                           ;main.c: 661:     _Bool b_power_touched = 0;
  7437  0545  01C6               	clrf	Timer_Mode@b_power_touched
  7438  0546                     l7293:
  7439                           
  7440                           ;main.c: 663:     g_digit_status = sadegan_e;
  7441  0546  3003               	movlw	3
  7442  0547  00BB               	movwf	??_Timer_Mode
  7443  0548  083B               	movf	??_Timer_Mode,w
  7444  0549  00FA               	movwf	_g_digit_status
  7445  054A                     l7295:
  7446                           
  7447                           ;main.c: 664:     g_mode_status = timer_e;
  7448  054A  3003               	movlw	3
  7449  054B  00BB               	movwf	??_Timer_Mode
  7450  054C  083B               	movf	??_Timer_Mode,w
  7451  054D  00E0               	movwf	_g_mode_status
  7452  054E                     l7297:
  7453                           
  7454                           ;main.c: 669:     g_time_calc.sadegan = g_time_ms / 100;
  7455  054E  3064               	movlw	100
  7456  054F  00F2               	movwf	___lwdiv@divisor
  7457  0550  3000               	movlw	0
  7458  0551  00F3               	movwf	___lwdiv@divisor+1
  7459  0552  086B               	movf	_g_time_ms+1,w	;volatile
  7460  0553  00F5               	movwf	___lwdiv@dividend+1
  7461  0554  086A               	movf	_g_time_ms,w	;volatile
  7462  0555  00F4               	movwf	___lwdiv@dividend
  7463  0556  3188  2005  3185   	fcall	___lwdiv
  7464  0559  0872               	movf	?___lwdiv,w
  7465  055A  0020               	movlb	0	; select bank0
  7466  055B  00BB               	movwf	??_Timer_Mode
  7467  055C  083B               	movf	??_Timer_Mode,w
  7468  055D  00D8               	movwf	_g_time_calc+2
  7469  055E                     l7299:
  7470                           
  7471                           ;main.c: 670:     buffer = g_time_ms % 100;
  7472  055E  3064               	movlw	100
  7473  055F  00F2               	movwf	___lwmod@divisor
  7474  0560  3000               	movlw	0
  7475  0561  00F3               	movwf	___lwmod@divisor+1
  7476  0562  086B               	movf	_g_time_ms+1,w	;volatile
  7477  0563  00F5               	movwf	___lwmod@dividend+1
  7478  0564  086A               	movf	_g_time_ms,w	;volatile
  7479  0565  00F4               	movwf	___lwmod@dividend
  7480  0566  3197  27CC  3185   	fcall	___lwmod
  7481  0569  0873               	movf	?___lwmod+1,w
  7482  056A  0020               	movlb	0	; select bank0
  7483  056B  00C8               	movwf	Timer_Mode@buffer+1
  7484  056C  0872               	movf	?___lwmod,w
  7485  056D  00C7               	movwf	Timer_Mode@buffer
  7486  056E                     l7301:
  7487                           
  7488                           ;main.c: 671:     g_time_calc.dahegan = buffer / 10;
  7489  056E  300A               	movlw	10
  7490  056F  00F2               	movwf	___lwdiv@divisor
  7491  0570  3000               	movlw	0
  7492  0571  00F3               	movwf	___lwdiv@divisor+1
  7493  0572  0848               	movf	Timer_Mode@buffer+1,w
  7494  0573  00F5               	movwf	___lwdiv@dividend+1
  7495  0574  0847               	movf	Timer_Mode@buffer,w
  7496  0575  00F4               	movwf	___lwdiv@dividend
  7497  0576  3188  2005  3185   	fcall	___lwdiv
  7498  0579  0872               	movf	?___lwdiv,w
  7499  057A  0020               	movlb	0	; select bank0
  7500  057B  00BB               	movwf	??_Timer_Mode
  7501  057C  083B               	movf	??_Timer_Mode,w
  7502  057D  00D7               	movwf	_g_time_calc+1
  7503  057E                     l7303:
  7504                           
  7505                           ;main.c: 672:     g_time_calc.yekan = buffer % 10;
  7506  057E  300A               	movlw	10
  7507  057F  00F2               	movwf	___lwmod@divisor
  7508  0580  3000               	movlw	0
  7509  0581  00F3               	movwf	___lwmod@divisor+1
  7510  0582  0848               	movf	Timer_Mode@buffer+1,w
  7511  0583  00F5               	movwf	___lwmod@dividend+1
  7512  0584  0847               	movf	Timer_Mode@buffer,w
  7513  0585  00F4               	movwf	___lwmod@dividend
  7514  0586  3197  27CC  3185   	fcall	___lwmod
  7515  0589  0872               	movf	?___lwmod,w
  7516  058A  0020               	movlb	0	; select bank0
  7517  058B  00BB               	movwf	??_Timer_Mode
  7518  058C  083B               	movf	??_Timer_Mode,w
  7519  058D  00D6               	movwf	_g_time_calc
  7520  058E                     l7305:
  7521                           
  7522                           ;main.c: 676:         if (1 == MTOUCH_Service_Mainloop()) {
  7523  058E  3196  2629  3185   	fcall	_MTOUCH_Service_Mainloop
  7524  0591  3A01               	xorlw	1
  7525  0592  1D03               	skipz
  7526  0593  2D95               	goto	u5781
  7527  0594  2D96               	goto	u5780
  7528  0595                     u5781:
  7529  0595  2D8E               	goto	l7305
  7530  0596                     u5780:
  7531  0596                     l7307:
  7532                           
  7533                           ;main.c: 678:             if (1 == MTOUCH_Button_isPressed(T_7)) {
  7534  0596  3005               	movlw	5
  7535  0597  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7536  059A  3A01               	xorlw	1
  7537  059B  1D03               	skipz
  7538  059C  2D9E               	goto	u5791
  7539  059D  2D9F               	goto	u5790
  7540  059E                     u5791:
  7541  059E  2DB4               	goto	l7317
  7542  059F                     u5790:
  7543  059F                     l7309:
  7544                           
  7545                           ;main.c: 680:                 b_mode_touched = 1;
  7546  059F  0020               	movlb	0	; select bank0
  7547  05A0  01C5               	clrf	Timer_Mode@b_mode_touched
  7548  05A1  0AC5               	incf	Timer_Mode@b_mode_touched,f
  7549  05A2                     l7311:
  7550                           
  7551                           ;main.c: 682:                 SET_SOUND_MODE(learn_rf_code_is_start);
  7552  05A2  3000               	movlw	0
  7553  05A3  3186  268E  3185   	fcall	_SET_SOUND_MODE
  7554                           
  7555                           ;main.c: 683:                 while (1 == MTOUCH_Button_isPressed(T_7)) {
  7556  05A6  2DAA               	goto	l7315
  7557  05A7                     l7313:
  7558                           
  7559                           ;main.c: 684:                     MTOUCH_Service_Mainloop();
  7560  05A7  3196  2629  3185   	fcall	_MTOUCH_Service_Mainloop
  7561  05AA                     l7315:
  7562                           
  7563                           ;main.c: 683:                 while (1 == MTOUCH_Button_isPressed(T_7)) {
  7564  05AA  3005               	movlw	5
  7565  05AB  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7566  05AE  3A01               	xorlw	1
  7567  05AF  1903               	skipnz
  7568  05B0  2DB2               	goto	u5801
  7569  05B1  2DB3               	goto	u5800
  7570  05B2                     u5801:
  7571  05B2  2DA7               	goto	l7313
  7572  05B3                     u5800:
  7573  05B3  2E70               	goto	l7363
  7574  05B4                     l7317:
  7575                           
  7576                           ;main.c: 690:             if (1 == MTOUCH_Button_isPressed(T_6)) {
  7577  05B4  3006               	movlw	6
  7578  05B5  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7579  05B8  3A01               	xorlw	1
  7580  05B9  1D03               	skipz
  7581  05BA  2DBC               	goto	u5811
  7582  05BB  2DBD               	goto	u5810
  7583  05BC                     u5811:
  7584  05BC  2DCE               	goto	l7325
  7585  05BD                     u5810:
  7586  05BD                     l7319:
  7587                           
  7588                           ;main.c: 692:                 b_power_touched = 1;
  7589  05BD  0020               	movlb	0	; select bank0
  7590  05BE  01C6               	clrf	Timer_Mode@b_power_touched
  7591  05BF  0AC6               	incf	Timer_Mode@b_power_touched,f
  7592                           
  7593                           ;main.c: 694:                 while (1 == MTOUCH_Button_isPressed(T_6)) {
  7594  05C0  2DC4               	goto	l7323
  7595  05C1                     l7321:
  7596                           
  7597                           ;main.c: 695:                     MTOUCH_Service_Mainloop();
  7598  05C1  3196  2629  3185   	fcall	_MTOUCH_Service_Mainloop
  7599  05C4                     l7323:
  7600                           
  7601                           ;main.c: 694:                 while (1 == MTOUCH_Button_isPressed(T_6)) {
  7602  05C4  3006               	movlw	6
  7603  05C5  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7604  05C8  3A01               	xorlw	1
  7605  05C9  1903               	skipnz
  7606  05CA  2DCC               	goto	u5821
  7607  05CB  2DCD               	goto	u5820
  7608  05CC                     u5821:
  7609  05CC  2DC1               	goto	l7321
  7610  05CD                     u5820:
  7611  05CD  2E70               	goto	l7363
  7612  05CE                     l7325:
  7613                           
  7614                           ;main.c: 701:             if (1 == MTOUCH_Button_isPressed(T_8)) {
  7615  05CE  3004               	movlw	4
  7616  05CF  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7617  05D2  3A01               	xorlw	1
  7618  05D3  1D03               	skipz
  7619  05D4  2DD6               	goto	u5831
  7620  05D5  2DD7               	goto	u5830
  7621  05D6                     u5831:
  7622  05D6  2E2F               	goto	l7343
  7623  05D7                     u5830:
  7624  05D7                     l7327:
  7625                           
  7626                           ;main.c: 703:                 g_digit_status = sadegan_e;
  7627  05D7  3003               	movlw	3
  7628  05D8  0020               	movlb	0	; select bank0
  7629  05D9  00BB               	movwf	??_Timer_Mode
  7630  05DA  083B               	movf	??_Timer_Mode,w
  7631  05DB  00FA               	movwf	_g_digit_status
  7632  05DC                     l7329:
  7633                           
  7634                           ;main.c: 705:                 g_time_ms = (g_time_calc.yekan +
  7635  05DC  0856               	movf	_g_time_calc,w
  7636  05DD  00BB               	movwf	??_Timer_Mode
  7637  05DE  01BC               	clrf	??_Timer_Mode+1
  7638  05DF  0858               	movf	_g_time_calc+2,w
  7639  05E0  00BD               	movwf	??_Timer_Mode+2
  7640  05E1  01BE               	clrf	??_Timer_Mode+3
  7641  05E2  083D               	movf	??_Timer_Mode+2,w
  7642  05E3  00F2               	movwf	___wmul@multiplier
  7643  05E4  083E               	movf	??_Timer_Mode+3,w
  7644  05E5  00F3               	movwf	___wmul@multiplier+1
  7645  05E6  3064               	movlw	100
  7646  05E7  00F4               	movwf	___wmul@multiplicand
  7647  05E8  3000               	movlw	0
  7648  05E9  00F5               	movwf	___wmul@multiplicand+1
  7649  05EA  3192  2211  3185   	fcall	___wmul
  7650  05ED  0872               	movf	?___wmul,w
  7651  05EE  0020               	movlb	0	; select bank0
  7652  05EF  00BF               	movwf	??_Timer_Mode+4
  7653  05F0  0873               	movf	?___wmul+1,w
  7654  05F1  00C0               	movwf	??_Timer_Mode+5
  7655  05F2  0857               	movf	_g_time_calc+1,w
  7656  05F3  00C1               	movwf	??_Timer_Mode+6
  7657  05F4  01C2               	clrf	??_Timer_Mode+7
  7658  05F5  0841               	movf	??_Timer_Mode+6,w
  7659  05F6  00F2               	movwf	___wmul@multiplier
  7660  05F7  0842               	movf	??_Timer_Mode+7,w
  7661  05F8  00F3               	movwf	___wmul@multiplier+1
  7662  05F9  300A               	movlw	10
  7663  05FA  00F4               	movwf	___wmul@multiplicand
  7664  05FB  3000               	movlw	0
  7665  05FC  00F5               	movwf	___wmul@multiplicand+1
  7666  05FD  3192  2211  3185   	fcall	___wmul
  7667  0600  0872               	movf	?___wmul,w
  7668  0601  0020               	movlb	0	; select bank0
  7669  0602  073F               	addwf	??_Timer_Mode+4,w
  7670  0603  00C3               	movwf	??_Timer_Mode+8
  7671  0604  0873               	movf	?___wmul+1,w
  7672  0605  3D40               	addwfc	??_Timer_Mode+5,w
  7673  0606  00C4               	movwf	??_Timer_Mode+9
  7674  0607  083B               	movf	??_Timer_Mode,w
  7675  0608  0743               	addwf	??_Timer_Mode+8,w
  7676  0609  00EA               	movwf	_g_time_ms	;volatile
  7677  060A  083C               	movf	??_Timer_Mode+1,w
  7678  060B  3D44               	addwfc	??_Timer_Mode+9,w
  7679  060C  00EB               	movwf	_g_time_ms+1	;volatile
  7680  060D                     l7331:
  7681                           
  7682                           ;main.c: 709:                 TX_Command(TX_7SEG_STORE_TIME);
  7683  060D  3021               	movlw	33
  7684  060E  319E  26E1  3185   	fcall	_TX_Command
  7685  0611                     l7333:
  7686                           
  7687                           ;main.c: 710:                 ge_time_ms = g_time_ms;
  7688  0611  0020               	movlb	0	; select bank0
  7689  0612  086B               	movf	_g_time_ms+1,w	;volatile
  7690  0613  00F9               	movwf	___itoee@data+1
  7691  0614  086A               	movf	_g_time_ms,w	;volatile
  7692  0615  00F8               	movwf	___itoee@data
  7693  0616  3008               	movlw	(low _ge_time_ms)& (0+255)
  7694  0617  319E  26FE  3185   	fcall	___itoee
  7695  061A                     l7335:
  7696                           
  7697                           ;main.c: 711:                 TX_Command(TX_END_SELECT_DIGIT);
  7698  061A  302A               	movlw	42
  7699  061B  319E  26E1  3185   	fcall	_TX_Command
  7700  061E                     l7337:
  7701                           
  7702                           ;main.c: 713:                 SET_SOUND_MODE(learn_rf_code_is_start);
  7703  061E  3000               	movlw	0
  7704  061F  3186  268E  3185   	fcall	_SET_SOUND_MODE
  7705                           
  7706                           ;main.c: 714:                 while (1 == MTOUCH_Button_isPressed(T_8)) {
  7707  0622  2E26               	goto	l7341
  7708  0623                     l7339:
  7709                           
  7710                           ;main.c: 715:                     MTOUCH_Service_Mainloop();
  7711  0623  3196  2629  3185   	fcall	_MTOUCH_Service_Mainloop
  7712  0626                     l7341:
  7713                           
  7714                           ;main.c: 714:                 while (1 == MTOUCH_Button_isPressed(T_8)) {
  7715  0626  3004               	movlw	4
  7716  0627  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7717  062A  3A01               	xorlw	1
  7718  062B  1903               	skipnz
  7719  062C  2E2E               	goto	u5841
  7720  062D  2E2F               	goto	u5840
  7721  062E                     u5841:
  7722  062E  2E23               	goto	l7339
  7723  062F                     u5840:
  7724  062F                     l7343:
  7725                           
  7726                           ;main.c: 720:             if (1 == MTOUCH_Button_isPressed(T_9)) {
  7727  062F  3008               	movlw	8
  7728  0630  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7729  0633  3A01               	xorlw	1
  7730  0634  1D03               	skipz
  7731  0635  2E37               	goto	u5851
  7732  0636  2E38               	goto	u5850
  7733  0637                     u5851:
  7734  0637  2E51               	goto	l7353
  7735  0638                     u5850:
  7736  0638                     l7345:
  7737                           
  7738                           ;main.c: 722:                 g_mode_status = timer_e;
  7739  0638  3003               	movlw	3
  7740  0639  0020               	movlb	0	; select bank0
  7741  063A  00BB               	movwf	??_Timer_Mode
  7742  063B  083B               	movf	??_Timer_Mode,w
  7743  063C  00E0               	movwf	_g_mode_status
  7744                           
  7745                           ;main.c: 723:                 g_sss_status = set_e;
  7746  063D  3003               	movlw	3
  7747  063E  00BB               	movwf	??_Timer_Mode
  7748  063F  083B               	movf	??_Timer_Mode,w
  7749  0640  00E1               	movwf	_g_sss_status
  7750  0641                     l7347:
  7751                           
  7752                           ;main.c: 724:                 FCN_UP();
  7753  0641  318C  2456  3185   	fcall	_FCN_UP
  7754                           
  7755                           ;main.c: 726:                 while (1 == MTOUCH_Button_isPressed(T_9)) {
  7756  0644  2E48               	goto	l7351
  7757  0645                     l7349:
  7758                           
  7759                           ;main.c: 727:                     MTOUCH_Service_Mainloop();
  7760  0645  3196  2629  3185   	fcall	_MTOUCH_Service_Mainloop
  7761  0648                     l7351:
  7762                           
  7763                           ;main.c: 726:                 while (1 == MTOUCH_Button_isPressed(T_9)) {
  7764  0648  3008               	movlw	8
  7765  0649  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7766  064C  3A01               	xorlw	1
  7767  064D  1903               	skipnz
  7768  064E  2E50               	goto	u5861
  7769  064F  2E51               	goto	u5860
  7770  0650                     u5861:
  7771  0650  2E45               	goto	l7349
  7772  0651                     u5860:
  7773  0651                     l7353:
  7774                           
  7775                           ;main.c: 732:             if (1 == MTOUCH_Button_isPressed(T_5)) {
  7776  0651  3007               	movlw	7
  7777  0652  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7778  0655  3A01               	xorlw	1
  7779  0656  1D03               	skipz
  7780  0657  2E59               	goto	u5871
  7781  0658  2E5A               	goto	u5870
  7782  0659                     u5871:
  7783  0659  2D8E               	goto	l7305
  7784  065A                     u5870:
  7785  065A                     l7355:
  7786                           
  7787                           ;main.c: 734:                 g_sss_status = set_e;
  7788  065A  3003               	movlw	3
  7789  065B  0020               	movlb	0	; select bank0
  7790  065C  00BB               	movwf	??_Timer_Mode
  7791  065D  083B               	movf	??_Timer_Mode,w
  7792  065E  00E1               	movwf	_g_sss_status
  7793  065F                     l7357:
  7794                           
  7795                           ;main.c: 735:                 FCN_NEXT();
  7796  065F  3195  2564  3185   	fcall	_FCN_NEXT
  7797                           
  7798                           ;main.c: 737:                 while (1 == MTOUCH_Button_isPressed(T_5)) {
  7799  0662  2E66               	goto	l7361
  7800  0663                     l7359:
  7801                           
  7802                           ;main.c: 738:                     MTOUCH_Service_Mainloop();
  7803  0663  3196  2629  3185   	fcall	_MTOUCH_Service_Mainloop
  7804  0666                     l7361:
  7805                           
  7806                           ;main.c: 737:                 while (1 == MTOUCH_Button_isPressed(T_5)) {
  7807  0666  3007               	movlw	7
  7808  0667  3195  25D8  3185   	fcall	_MTOUCH_Button_isPressed
  7809  066A  3A01               	xorlw	1
  7810  066B  1903               	skipnz
  7811  066C  2E6E               	goto	u5881
  7812  066D  2E6F               	goto	u5880
  7813  066E                     u5881:
  7814  066E  2E63               	goto	l7359
  7815  066F                     u5880:
  7816  066F  2D8E               	goto	l7305
  7817  0670                     l7363:
  7818                           
  7819                           ;main.c: 745:     if (1 == b_mode_touched) {
  7820  0670  0020               	movlb	0	; select bank0
  7821  0671  0345               	decf	Timer_Mode@b_mode_touched,w
  7822  0672  1D03               	btfss	3,2
  7823  0673  2E75               	goto	u5891
  7824  0674  2E76               	goto	u5890
  7825  0675                     u5891:
  7826  0675  2E82               	goto	l7369
  7827  0676                     u5890:
  7828  0676                     l7365:
  7829                           
  7830                           ;main.c: 747:         g_mode_status = automatic_e;
  7831  0676  01E0               	clrf	_g_mode_status
  7832  0677  0AE0               	incf	_g_mode_status,f
  7833                           
  7834                           ;main.c: 748:         g_sss_status = start_e;
  7835  0678  01E1               	clrf	_g_sss_status
  7836  0679  0AE1               	incf	_g_sss_status,f
  7837  067A                     l7367:
  7838                           
  7839                           ;main.c: 751:         TX_Command(TX_END_SELECT_DIGIT);
  7840  067A  302A               	movlw	42
  7841  067B  319E  26E1  3185   	fcall	_TX_Command
  7842                           
  7843                           ;main.c: 752:         TX_Command(TX_7SEG_SHOW_MASS);
  7844  067E  3042               	movlw	66
  7845  067F  319E  26E1  3185   	fcall	_TX_Command
  7846  0682                     l7369:
  7847                           
  7848                           ;main.c: 755:     if (1 == b_power_touched) {
  7849  0682  0020               	movlb	0	; select bank0
  7850  0683  0346               	decf	Timer_Mode@b_power_touched,w
  7851  0684  1D03               	btfss	3,2
  7852  0685  2E87               	goto	u5901
  7853  0686  2E88               	goto	u5900
  7854  0687                     u5901:
  7855  0687  2E8D               	goto	l1192
  7856  0688                     u5900:
  7857  0688                     l7371:
  7858                           
  7859                           ;main.c: 757:         g_power_event.timer = 1;
  7860  0688  155E               	bsf	_g_power_event,2
  7861  0689                     l7373:
  7862                           
  7863                           ;main.c: 758:         TX_Command(TX_7SEG_OFF);
  7864  0689  300C               	movlw	12
  7865  068A  319E  26E1  3185   	fcall	_TX_Command
  7866  068D                     l1192:
  7867  068D  0008               	return
  7868  068E                     __end_of_Timer_Mode:
  7869                           
  7870                           	psect	text20
  7871  17CC                     __ptext20:	
  7872 ;; *************** function ___lwmod *****************
  7873 ;; Defined at:
  7874 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwmod.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  divisor         2    2[COMMON] unsigned int 
  7877 ;;  dividend        2    4[COMMON] unsigned int 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;  counter         1    7[COMMON] unsigned char 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  2    2[COMMON] unsigned int 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;Total ram usage:        6 bytes
  7894 ;; Hardware stack levels used: 1
  7895 ;; Hardware stack levels required when called: 4
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_Timer_Mode
  7900 ;;		_Automatic_Mode
  7901 ;;		_set_digit_counters
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           
  7906                           ;psect for function ___lwmod
  7907  17CC                     ___lwmod:
  7908  17CC                     l7171:	
  7909                           ;incstack = 0
  7910                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7911                           
  7912  17CC  0872               	movf	___lwmod@divisor,w
  7913  17CD  0473               	iorwf	___lwmod@divisor+1,w
  7914  17CE  1903               	btfsc	3,2
  7915  17CF  2FD1               	goto	u5581
  7916  17D0  2FD2               	goto	u5580
  7917  17D1                     u5581:
  7918  17D1  2FFB               	goto	l7189
  7919  17D2                     u5580:
  7920  17D2                     l7173:
  7921  17D2  01F7               	clrf	___lwmod@counter
  7922  17D3  0AF7               	incf	___lwmod@counter,f
  7923  17D4  2FDE               	goto	l7179
  7924  17D5                     l7175:
  7925  17D5  3001               	movlw	1
  7926  17D6                     u5595:
  7927  17D6  35F2               	lslf	___lwmod@divisor,f
  7928  17D7  0DF3               	rlf	___lwmod@divisor+1,f
  7929  17D8  0B89               	decfsz	9,f
  7930  17D9  2FD6               	goto	u5595
  7931  17DA                     l7177:
  7932  17DA  3001               	movlw	1
  7933  17DB  00F6               	movwf	??___lwmod
  7934  17DC  0876               	movf	??___lwmod,w
  7935  17DD  07F7               	addwf	___lwmod@counter,f
  7936  17DE                     l7179:
  7937  17DE  1FF3               	btfss	___lwmod@divisor+1,7
  7938  17DF  2FE1               	goto	u5601
  7939  17E0  2FE2               	goto	u5600
  7940  17E1                     u5601:
  7941  17E1  2FD5               	goto	l7175
  7942  17E2                     u5600:
  7943  17E2                     l7181:
  7944  17E2  0873               	movf	___lwmod@divisor+1,w
  7945  17E3  0275               	subwf	___lwmod@dividend+1,w
  7946  17E4  1D03               	skipz
  7947  17E5  2FE8               	goto	u5615
  7948  17E6  0872               	movf	___lwmod@divisor,w
  7949  17E7  0274               	subwf	___lwmod@dividend,w
  7950  17E8                     u5615:
  7951  17E8  1C03               	skipc
  7952  17E9  2FEB               	goto	u5611
  7953  17EA  2FEC               	goto	u5610
  7954  17EB                     u5611:
  7955  17EB  2FF0               	goto	l7185
  7956  17EC                     u5610:
  7957  17EC                     l7183:
  7958  17EC  0872               	movf	___lwmod@divisor,w
  7959  17ED  02F4               	subwf	___lwmod@dividend,f
  7960  17EE  0873               	movf	___lwmod@divisor+1,w
  7961  17EF  3BF5               	subwfb	___lwmod@dividend+1,f
  7962  17F0                     l7185:
  7963  17F0  3001               	movlw	1
  7964  17F1                     u5625:
  7965  17F1  36F3               	lsrf	___lwmod@divisor+1,f
  7966  17F2  0CF2               	rrf	___lwmod@divisor,f
  7967  17F3  0B89               	decfsz	9,f
  7968  17F4  2FF1               	goto	u5625
  7969  17F5                     l7187:
  7970  17F5  3001               	movlw	1
  7971  17F6  02F7               	subwf	___lwmod@counter,f
  7972  17F7  1D03               	btfss	3,2
  7973  17F8  2FFA               	goto	u5631
  7974  17F9  2FFB               	goto	u5630
  7975  17FA                     u5631:
  7976  17FA  2FE2               	goto	l7181
  7977  17FB                     u5630:
  7978  17FB                     l7189:
  7979  17FB  0875               	movf	___lwmod@dividend+1,w
  7980  17FC  00F3               	movwf	?___lwmod+1
  7981  17FD  0874               	movf	___lwmod@dividend,w
  7982  17FE  00F2               	movwf	?___lwmod
  7983  17FF                     l1760:
  7984  17FF  0008               	return
  7985  1800                     __end_of___lwmod:
  7986                           
  7987                           	psect	text21
  7988  0805                     __ptext21:	
  7989 ;; *************** function ___lwdiv *****************
  7990 ;; Defined at:
  7991 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  divisor         2    2[COMMON] unsigned int 
  7994 ;;  dividend        2    4[COMMON] unsigned int 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  quotient        2    8[COMMON] unsigned int 
  7997 ;;  counter         1    7[COMMON] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  2    2[COMMON] unsigned int 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;Total ram usage:        8 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 4
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_Timer_Mode
  8018 ;;		_Automatic_Mode
  8019 ;;		_set_digit_counters
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           
  8023                           
  8024                           ;psect for function ___lwdiv
  8025  0805                     ___lwdiv:
  8026  0805                     l7145:	
  8027                           ;incstack = 0
  8028                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8029                           
  8030  0805  01F8               	clrf	___lwdiv@quotient
  8031  0806  01F9               	clrf	___lwdiv@quotient+1
  8032  0807                     l7147:
  8033  0807  0872               	movf	___lwdiv@divisor,w
  8034  0808  0473               	iorwf	___lwdiv@divisor+1,w
  8035  0809  1903               	btfsc	3,2
  8036  080A  280C               	goto	u5511
  8037  080B  280D               	goto	u5510
  8038  080C                     u5511:
  8039  080C  283C               	goto	l7167
  8040  080D                     u5510:
  8041  080D                     l7149:
  8042  080D  01F7               	clrf	___lwdiv@counter
  8043  080E  0AF7               	incf	___lwdiv@counter,f
  8044  080F  2819               	goto	l7155
  8045  0810                     l7151:
  8046  0810  3001               	movlw	1
  8047  0811                     u5525:
  8048  0811  35F2               	lslf	___lwdiv@divisor,f
  8049  0812  0DF3               	rlf	___lwdiv@divisor+1,f
  8050  0813  0B89               	decfsz	9,f
  8051  0814  2811               	goto	u5525
  8052  0815                     l7153:
  8053  0815  3001               	movlw	1
  8054  0816  00F6               	movwf	??___lwdiv
  8055  0817  0876               	movf	??___lwdiv,w
  8056  0818  07F7               	addwf	___lwdiv@counter,f
  8057  0819                     l7155:
  8058  0819  1FF3               	btfss	___lwdiv@divisor+1,7
  8059  081A  281C               	goto	u5531
  8060  081B  281D               	goto	u5530
  8061  081C                     u5531:
  8062  081C  2810               	goto	l7151
  8063  081D                     u5530:
  8064  081D                     l7157:
  8065  081D  3001               	movlw	1
  8066  081E                     u5545:
  8067  081E  35F8               	lslf	___lwdiv@quotient,f
  8068  081F  0DF9               	rlf	___lwdiv@quotient+1,f
  8069  0820  0B89               	decfsz	9,f
  8070  0821  281E               	goto	u5545
  8071  0822  0873               	movf	___lwdiv@divisor+1,w
  8072  0823  0275               	subwf	___lwdiv@dividend+1,w
  8073  0824  1D03               	skipz
  8074  0825  2828               	goto	u5555
  8075  0826  0872               	movf	___lwdiv@divisor,w
  8076  0827  0274               	subwf	___lwdiv@dividend,w
  8077  0828                     u5555:
  8078  0828  1C03               	skipc
  8079  0829  282B               	goto	u5551
  8080  082A  282C               	goto	u5550
  8081  082B                     u5551:
  8082  082B  2831               	goto	l7163
  8083  082C                     u5550:
  8084  082C                     l7159:
  8085  082C  0872               	movf	___lwdiv@divisor,w
  8086  082D  02F4               	subwf	___lwdiv@dividend,f
  8087  082E  0873               	movf	___lwdiv@divisor+1,w
  8088  082F  3BF5               	subwfb	___lwdiv@dividend+1,f
  8089  0830                     l7161:
  8090  0830  1478               	bsf	___lwdiv@quotient,0
  8091  0831                     l7163:
  8092  0831  3001               	movlw	1
  8093  0832                     u5565:
  8094  0832  36F3               	lsrf	___lwdiv@divisor+1,f
  8095  0833  0CF2               	rrf	___lwdiv@divisor,f
  8096  0834  0B89               	decfsz	9,f
  8097  0835  2832               	goto	u5565
  8098  0836                     l7165:
  8099  0836  3001               	movlw	1
  8100  0837  02F7               	subwf	___lwdiv@counter,f
  8101  0838  1D03               	btfss	3,2
  8102  0839  283B               	goto	u5571
  8103  083A  283C               	goto	u5570
  8104  083B                     u5571:
  8105  083B  281D               	goto	l7157
  8106  083C                     u5570:
  8107  083C                     l7167:
  8108  083C  0879               	movf	___lwdiv@quotient+1,w
  8109  083D  00F3               	movwf	?___lwdiv+1
  8110  083E  0878               	movf	___lwdiv@quotient,w
  8111  083F  00F2               	movwf	?___lwdiv
  8112  0840                     l1750:
  8113  0840  0008               	return
  8114  0841                     __end_of___lwdiv:
  8115                           
  8116                           	psect	text22
  8117  1EFE                     __ptext22:	
  8118 ;; *************** function ___itoee *****************
  8119 ;; Defined at:
  8120 ;;		line 157 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  addr            1    wreg     PTR eeprom void 
  8123 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  8124 ;;  data            2    8[COMMON] unsigned int 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  addr            1    2[BANK0 ] PTR eeprom void 
  8127 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  2    8[COMMON] unsigned int 
  8130 ;; Registers used:
  8131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;Total ram usage:        5 bytes
  8142 ;; Hardware stack levels used: 1
  8143 ;; Hardware stack levels required when called: 5
  8144 ;; This function calls:
  8145 ;;		___memcpyee
  8146 ;; This function is called by:
  8147 ;;		_Timer_Mode
  8148 ;;		_Automatic_Mode
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           
  8153                           ;psect for function ___itoee
  8154  1EFE                     ___itoee:
  8155                           
  8156                           ;incstack = 0
  8157                           ; Regs used in ___itoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8158                           ;___itoee@addr stored from wreg
  8159  1EFE  0020               	movlb	0	; select bank0
  8160  1EFF  00A2               	movwf	___itoee@addr
  8161  1F00                     l7117:
  8162  1F00  3078               	movlw	(low (___itoee@data| 0))& (0+255)
  8163  1F01  00A0               	movwf	??___itoee
  8164  1F02  0820               	movf	??___itoee,w
  8165  1F03  00F2               	movwf	___memcpyee@from
  8166  1F04  3002               	movlw	2
  8167  1F05  00A1               	movwf	??___itoee+1
  8168  1F06  0821               	movf	??___itoee+1,w
  8169  1F07  00F3               	movwf	___memcpyee@size
  8170  1F08  0822               	movf	___itoee@addr,w
  8171  1F09  3188  2087  319E   	fcall	___memcpyee
  8172  1F0C                     l1381:
  8173  1F0C  0008               	return
  8174  1F0D                     __end_of___itoee:
  8175                           
  8176                           	psect	text23
  8177  0887                     __ptext23:	
  8178 ;; *************** function ___memcpyee *****************
  8179 ;; Defined at:
  8180 ;;		line 39 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  to              1    wreg     PTR eeprom unsigned char
  8183 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  8184 ;;  from            1    2[COMMON] PTR const unsigned char 
  8185 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  8186 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  8187 ;;  size            1    3[COMMON] unsigned char 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  to              1    7[COMMON] PTR eeprom unsigned char
  8190 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
  8191 ;;  ptr             1    6[COMMON] PTR const unsigned char 
  8192 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  8193 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8207 ;;Total ram usage:        6 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 4
  8210 ;; This function calls:
  8211 ;;		Nothing
  8212 ;; This function is called by:
  8213 ;;		___itoee
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           
  8218                           ;psect for function ___memcpyee
  8219  0887                     ___memcpyee:
  8220                           
  8221                           ;incstack = 0
  8222                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
  8223                           ;___memcpyee@to stored from wreg
  8224  0887  00F7               	movwf	___memcpyee@to
  8225  0888                     l6883:
  8226                           
  8227                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 39: __memcpyee(__eeprom unsign
      +                          ed char * to, const unsigned char *from, unsigned char size);/opt/microchip/xc8/v2.32/pi
      +                          c/sources/c99/pic/__eeprom.c: 40: {;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eepro
      +                          m.c: 41:  const unsigned char *ptr =from;
  8228  0888  0872               	movf	___memcpyee@from,w
  8229  0889  00F4               	movwf	??___memcpyee
  8230  088A  0874               	movf	??___memcpyee,w
  8231  088B  00F6               	movwf	___memcpyee@ptr
  8232  088C                     l1349:	
  8233                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 43:  while (EECON1bits.WR) con
      +                          tinue;
  8234                           
  8235  088C  0023               	movlb	3	; select bank3
  8236  088D  1895               	btfsc	21,1	;volsfr
  8237  088E  2890               	goto	u5171
  8238  088F  2891               	goto	u5170
  8239  0890                     u5171:
  8240  0890  288C               	goto	l1349
  8241  0891                     u5170:
  8242  0891                     l6885:
  8243                           
  8244                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 44:  EEADR = (unsigned char)to
      +                           - 1U;
  8245  0891  0877               	movf	___memcpyee@to,w
  8246  0892  3EFF               	addlw	255
  8247  0893  00F4               	movwf	??___memcpyee
  8248  0894  30FF               	movlw	255
  8249  0895  1803               	skipnc
  8250  0896  3000               	movlw	0
  8251  0897  00F5               	movwf	??___memcpyee+1
  8252  0898  0874               	movf	??___memcpyee,w
  8253  0899  0091               	movwf	17	;volatile
  8254  089A  0875               	movf	??___memcpyee+1,w
  8255  089B  0092               	movwf	18	;volatile
  8256  089C                     l6887:
  8257                           
  8258                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 46:  EECON1 &= 0x7F;
  8259  089C  307F               	movlw	127
  8260  089D  00F4               	movwf	??___memcpyee
  8261  089E  0874               	movf	??___memcpyee,w
  8262  089F  0595               	andwf	21,f	;volsfr
  8263                           
  8264                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 48:  while(size--) {
  8265  08A0  28C9               	goto	l6911
  8266  08A1                     l1354:	
  8267                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 51:   }
  8268                           
  8269                           
  8270                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 49:   while (EECON1bits.WR) {
  8271  08A1  0023               	movlb	3	; select bank3
  8272  08A2  1895               	btfsc	21,1	;volsfr
  8273  08A3  28A5               	goto	u5181
  8274  08A4  28A6               	goto	u5180
  8275  08A5                     u5181:
  8276  08A5  28A1               	goto	l1354
  8277  08A6                     u5180:
  8278  08A6                     l6889:
  8279                           
  8280                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 52:   EEDATA = *ptr++;
  8281  08A6  0876               	movf	___memcpyee@ptr,w
  8282  08A7  0086               	movwf	6
  8283  08A8  0187               	clrf	7
  8284  08A9  0801               	movf	1,w
  8285  08AA  0093               	movwf	19	;volatile
  8286  08AB                     l6891:
  8287  08AB  3001               	movlw	1
  8288  08AC  00F4               	movwf	??___memcpyee
  8289  08AD  0874               	movf	??___memcpyee,w
  8290  08AE  07F6               	addwf	___memcpyee@ptr,f
  8291  08AF                     l6893:
  8292                           
  8293                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 53:   ++EEADR;
  8294  08AF  3001               	movlw	1
  8295  08B0  0791               	addwf	17,f	;volatile
  8296  08B1  3000               	movlw	0
  8297  08B2  3D92               	addwfc	18,f	;volatile
  8298  08B3                     l6895:
  8299                           
  8300                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 54:   STATUSbits.CARRY = 0;
  8301  08B3  0020               	movlb	0	; select bank0
  8302  08B4  1003               	bcf	3,0	;volatile
  8303  08B5                     l6897:
  8304                           
  8305                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 55:   if (INTCONbits.GIE) {
  8306  08B5  1F8B               	btfss	11,7	;volatile
  8307  08B6  28B8               	goto	u5191
  8308  08B7  28B9               	goto	u5190
  8309  08B8                     u5191:
  8310  08B8  28BA               	goto	l1357
  8311  08B9                     u5190:
  8312  08B9                     l6899:
  8313                           
  8314                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 56:    STATUSbits.CARRY = 1;
  8315  08B9  1403               	bsf	3,0	;volatile
  8316  08BA                     l1357:	
  8317                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 57:   }
  8318                           
  8319                           
  8320                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 58:   INTCONbits.GIE = 0;
  8321  08BA  138B               	bcf	11,7	;volatile
  8322                           
  8323                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 59:   EECON1bits.WREN = 1;
  8324  08BB  0023               	movlb	3	; select bank3
  8325  08BC  1515               	bsf	21,2	;volsfr
  8326  08BD                     l6901:
  8327                           
  8328                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 60:   EECON2 = 0x55;
  8329  08BD  3055               	movlw	85
  8330  08BE  0096               	movwf	22	;volsfr
  8331                           
  8332                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 61:   EECON2 = 0xAA;
  8333  08BF  30AA               	movlw	170
  8334  08C0  0096               	movwf	22	;volsfr
  8335  08C1                     l6903:
  8336                           
  8337                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 62:   EECON1bits.WR = 1;
  8338  08C1  1495               	bsf	21,1	;volsfr
  8339  08C2                     l6905:
  8340                           
  8341                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 63:   EECON1bits.WREN = 0;
  8342  08C2  1115               	bcf	21,2	;volsfr
  8343  08C3                     l6907:
  8344                           
  8345                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 64:   if (STATUSbits.CARRY) {
  8346  08C3  0020               	movlb	0	; select bank0
  8347  08C4  1C03               	btfss	3,0	;volatile
  8348  08C5  28C7               	goto	u5201
  8349  08C6  28C8               	goto	u5200
  8350  08C7                     u5201:
  8351  08C7  28C9               	goto	l6911
  8352  08C8                     u5200:
  8353  08C8                     l6909:
  8354                           
  8355                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 65:    INTCONbits.GIE = 1;
  8356  08C8  178B               	bsf	11,7	;volatile
  8357  08C9                     l6911:
  8358                           
  8359                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 48:  while(size--) {
  8360  08C9  3001               	movlw	1
  8361  08CA  02F3               	subwf	___memcpyee@size,f
  8362  08CB  0A73               	incf	___memcpyee@size,w
  8363  08CC  1D03               	btfss	3,2
  8364  08CD  28CF               	goto	u5211
  8365  08CE  28D0               	goto	u5210
  8366  08CF                     u5211:
  8367  08CF  28A1               	goto	l1354
  8368  08D0                     u5210:
  8369  08D0                     l1360:
  8370  08D0  0008               	return
  8371  08D1                     __end_of___memcpyee:
  8372                           
  8373                           	psect	text24
  8374  0C56                     __ptext24:	
  8375 ;; *************** function _FCN_UP *****************
  8376 ;; Defined at:
  8377 ;;		line 316 in file "main.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;		None
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;		None
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      void 
  8384 ;; Registers used:
  8385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;Total ram usage:        2 bytes
  8396 ;; Hardware stack levels used: 1
  8397 ;; Hardware stack levels required when called: 6
  8398 ;; This function calls:
  8399 ;;		_TX_Command
  8400 ;; This function is called by:
  8401 ;;		_Timer_Mode
  8402 ;;		_Automatic_Mode
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           
  8407                           ;psect for function _FCN_UP
  8408  0C56                     _FCN_UP:
  8409  0C56                     l7057:	
  8410                           ;incstack = 0
  8411                           ; Regs used in _FCN_UP: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8412                           
  8413                           
  8414                           ;main.c: 318:     TX_Command(TX_INCREASE_DIGIT);
  8415  0C56  302B               	movlw	43
  8416  0C57  319E  26E1  318C   	fcall	_TX_Command
  8417                           
  8418                           ;main.c: 320:     switch (g_mode_status) {
  8419  0C5A  2CC6               	goto	l7097
  8420  0C5B                     l7059:
  8421                           
  8422                           ;main.c: 324:             if (yekan_e == g_digit_status) {
  8423  0C5B  037A               	decf	_g_digit_status,w
  8424  0C5C  1D03               	btfss	3,2
  8425  0C5D  2C5F               	goto	u5311
  8426  0C5E  2C60               	goto	u5310
  8427  0C5F                     u5311:
  8428  0C5F  2C6C               	goto	l7065
  8429  0C60                     u5310:
  8430  0C60                     l7061:
  8431                           
  8432                           ;main.c: 326:                 g_mass_calc.yekan++;
  8433  0C60  3001               	movlw	1
  8434  0C61  00F4               	movwf	??_FCN_UP
  8435  0C62  0874               	movf	??_FCN_UP,w
  8436  0C63  07D3               	addwf	_g_mass_calc,f
  8437                           
  8438                           ;main.c: 327:                 if (10 == g_mass_calc.yekan) {
  8439  0C64  300A               	movlw	10
  8440  0C65  0653               	xorwf	_g_mass_calc,w
  8441  0C66  1D03               	btfss	3,2
  8442  0C67  2C69               	goto	u5321
  8443  0C68  2C6A               	goto	u5320
  8444  0C69                     u5321:
  8445  0C69  2CD7               	goto	l1055
  8446  0C6A                     u5320:
  8447  0C6A                     l7063:
  8448                           
  8449                           ;main.c: 328:                     g_mass_calc.yekan = 0;
  8450  0C6A  01D3               	clrf	_g_mass_calc
  8451  0C6B  2CD7               	goto	l1055
  8452  0C6C                     l7065:
  8453  0C6C  3002               	movlw	2
  8454  0C6D  067A               	xorwf	_g_digit_status,w
  8455  0C6E  1D03               	btfss	3,2
  8456  0C6F  2C71               	goto	u5331
  8457  0C70  2C72               	goto	u5330
  8458  0C71                     u5331:
  8459  0C71  2C7E               	goto	l7071
  8460  0C72                     u5330:
  8461  0C72                     l7067:
  8462                           
  8463                           ;main.c: 332:                 g_mass_calc.dahegan++;
  8464  0C72  3001               	movlw	1
  8465  0C73  00F4               	movwf	??_FCN_UP
  8466  0C74  0874               	movf	??_FCN_UP,w
  8467  0C75  07D4               	addwf	_g_mass_calc+1,f
  8468                           
  8469                           ;main.c: 333:                 if (10 == g_mass_calc.dahegan) {
  8470  0C76  300A               	movlw	10
  8471  0C77  0654               	xorwf	_g_mass_calc+1,w
  8472  0C78  1D03               	btfss	3,2
  8473  0C79  2C7B               	goto	u5341
  8474  0C7A  2C7C               	goto	u5340
  8475  0C7B                     u5341:
  8476  0C7B  2CD7               	goto	l1055
  8477  0C7C                     u5340:
  8478  0C7C                     l7069:
  8479                           
  8480                           ;main.c: 334:                     g_mass_calc.dahegan = 0;
  8481  0C7C  01D4               	clrf	_g_mass_calc+1
  8482  0C7D  2CD7               	goto	l1055
  8483  0C7E                     l7071:
  8484  0C7E  3003               	movlw	3
  8485  0C7F  067A               	xorwf	_g_digit_status,w
  8486  0C80  1D03               	btfss	3,2
  8487  0C81  2C83               	goto	u5351
  8488  0C82  2C84               	goto	u5350
  8489  0C83                     u5351:
  8490  0C83  2C90               	goto	l1038
  8491  0C84                     u5350:
  8492  0C84                     l7073:
  8493                           
  8494                           ;main.c: 338:                 g_mass_calc.sadegan++;
  8495  0C84  3001               	movlw	1
  8496  0C85  00F4               	movwf	??_FCN_UP
  8497  0C86  0874               	movf	??_FCN_UP,w
  8498  0C87  07D5               	addwf	_g_mass_calc+2,f
  8499                           
  8500                           ;main.c: 339:                 if (10 == g_mass_calc.sadegan) {
  8501  0C88  300A               	movlw	10
  8502  0C89  0655               	xorwf	_g_mass_calc+2,w
  8503  0C8A  1D03               	btfss	3,2
  8504  0C8B  2C8D               	goto	u5361
  8505  0C8C  2C8E               	goto	u5360
  8506  0C8D                     u5361:
  8507  0C8D  2CD7               	goto	l1055
  8508  0C8E                     u5360:
  8509  0C8E                     l7075:
  8510                           
  8511                           ;main.c: 340:                     g_mass_calc.sadegan = 0;
  8512  0C8E  01D5               	clrf	_g_mass_calc+2
  8513  0C8F  2CD7               	goto	l1055
  8514  0C90                     l1038:
  8515                           
  8516                           ;main.c: 344:             break;
  8517  0C90  2CD7               	goto	l1055
  8518  0C91                     l7077:
  8519                           
  8520                           ;main.c: 348:             if (yekan_e == g_digit_status) {
  8521  0C91  037A               	decf	_g_digit_status,w
  8522  0C92  1D03               	btfss	3,2
  8523  0C93  2C95               	goto	u5371
  8524  0C94  2C96               	goto	u5370
  8525  0C95                     u5371:
  8526  0C95  2CA2               	goto	l7083
  8527  0C96                     u5370:
  8528  0C96                     l7079:
  8529                           
  8530                           ;main.c: 350:                 g_time_calc.yekan++;
  8531  0C96  3001               	movlw	1
  8532  0C97  00F4               	movwf	??_FCN_UP
  8533  0C98  0874               	movf	??_FCN_UP,w
  8534  0C99  07D6               	addwf	_g_time_calc,f
  8535                           
  8536                           ;main.c: 351:                 if (10 == g_time_calc.yekan) {
  8537  0C9A  300A               	movlw	10
  8538  0C9B  0656               	xorwf	_g_time_calc,w
  8539  0C9C  1D03               	btfss	3,2
  8540  0C9D  2C9F               	goto	u5381
  8541  0C9E  2CA0               	goto	u5380
  8542  0C9F                     u5381:
  8543  0C9F  2CD7               	goto	l1055
  8544  0CA0                     u5380:
  8545  0CA0                     l7081:
  8546                           
  8547                           ;main.c: 352:                     g_time_calc.yekan = 0;
  8548  0CA0  01D6               	clrf	_g_time_calc
  8549  0CA1  2CD7               	goto	l1055
  8550  0CA2                     l7083:
  8551  0CA2  3002               	movlw	2
  8552  0CA3  067A               	xorwf	_g_digit_status,w
  8553  0CA4  1D03               	btfss	3,2
  8554  0CA5  2CA7               	goto	u5391
  8555  0CA6  2CA8               	goto	u5390
  8556  0CA7                     u5391:
  8557  0CA7  2CB4               	goto	l7089
  8558  0CA8                     u5390:
  8559  0CA8                     l7085:
  8560                           
  8561                           ;main.c: 356:                 g_time_calc.dahegan++;
  8562  0CA8  3001               	movlw	1
  8563  0CA9  00F4               	movwf	??_FCN_UP
  8564  0CAA  0874               	movf	??_FCN_UP,w
  8565  0CAB  07D7               	addwf	_g_time_calc+1,f
  8566                           
  8567                           ;main.c: 357:                 if (10 == g_time_calc.dahegan) {
  8568  0CAC  300A               	movlw	10
  8569  0CAD  0657               	xorwf	_g_time_calc+1,w
  8570  0CAE  1D03               	btfss	3,2
  8571  0CAF  2CB1               	goto	u5401
  8572  0CB0  2CB2               	goto	u5400
  8573  0CB1                     u5401:
  8574  0CB1  2CD7               	goto	l1055
  8575  0CB2                     u5400:
  8576  0CB2                     l7087:
  8577                           
  8578                           ;main.c: 358:                     g_time_calc.dahegan = 0;
  8579  0CB2  01D7               	clrf	_g_time_calc+1
  8580  0CB3  2CD7               	goto	l1055
  8581  0CB4                     l7089:
  8582  0CB4  3003               	movlw	3
  8583  0CB5  067A               	xorwf	_g_digit_status,w
  8584  0CB6  1D03               	btfss	3,2
  8585  0CB7  2CB9               	goto	u5411
  8586  0CB8  2CBA               	goto	u5410
  8587  0CB9                     u5411:
  8588  0CB9  2CD7               	goto	l1055
  8589  0CBA                     u5410:
  8590  0CBA                     l7091:
  8591                           
  8592                           ;main.c: 362:                 g_time_calc.sadegan++;
  8593  0CBA  3001               	movlw	1
  8594  0CBB  00F4               	movwf	??_FCN_UP
  8595  0CBC  0874               	movf	??_FCN_UP,w
  8596  0CBD  07D8               	addwf	_g_time_calc+2,f
  8597                           
  8598                           ;main.c: 363:                 if (10 == g_time_calc.sadegan) {
  8599  0CBE  300A               	movlw	10
  8600  0CBF  0658               	xorwf	_g_time_calc+2,w
  8601  0CC0  1D03               	btfss	3,2
  8602  0CC1  2CC3               	goto	u5421
  8603  0CC2  2CC4               	goto	u5420
  8604  0CC3                     u5421:
  8605  0CC3  2CD7               	goto	l1055
  8606  0CC4                     u5420:
  8607  0CC4                     l7093:
  8608                           
  8609                           ;main.c: 364:                     g_time_calc.sadegan = 0;
  8610  0CC4  01D8               	clrf	_g_time_calc+2
  8611  0CC5  2CD7               	goto	l1055
  8612  0CC6                     l7097:
  8613  0CC6  0020               	movlb	0	; select bank0
  8614  0CC7  0860               	movf	_g_mode_status,w
  8615  0CC8  00F4               	movwf	??_FCN_UP
  8616  0CC9  01F5               	clrf	??_FCN_UP+1
  8617                           
  8618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8619                           ; Switch size 1, requested type "simple"
  8620                           ; Number of cases is 1, Range of values is 0 to 0
  8621                           ; switch strategies available:
  8622                           ; Name         Instructions Cycles
  8623                           ; simple_byte            4     3 (average)
  8624                           ; direct_byte            8     6 (fixed)
  8625                           ; jumptable            260     6 (fixed)
  8626                           ;	Chosen strategy is simple_byte
  8627  0CCA  0875               	movf	??_FCN_UP+1,w
  8628  0CCB  3A00               	xorlw	0	; case 0
  8629  0CCC  1903               	skipnz
  8630  0CCD  2CCF               	goto	l8069
  8631  0CCE  2CD7               	goto	l1055
  8632  0CCF                     l8069:
  8633                           
  8634                           ; Switch size 1, requested type "simple"
  8635                           ; Number of cases is 2, Range of values is 1 to 3
  8636                           ; switch strategies available:
  8637                           ; Name         Instructions Cycles
  8638                           ; simple_byte            7     4 (average)
  8639                           ; direct_byte           15     9 (fixed)
  8640                           ; jumptable            263     9 (fixed)
  8641                           ;	Chosen strategy is simple_byte
  8642  0CCF  0874               	movf	??_FCN_UP,w
  8643  0CD0  3A01               	xorlw	1	; case 1
  8644  0CD1  1903               	skipnz
  8645  0CD2  2C5B               	goto	l7059
  8646  0CD3  3A02               	xorlw	2	; case 3
  8647  0CD4  1903               	skipnz
  8648  0CD5  2C91               	goto	l7077
  8649  0CD6  2CD7               	goto	l1055
  8650  0CD7                     l1055:
  8651  0CD7  0008               	return
  8652  0CD8                     __end_of_FCN_UP:
  8653                           
  8654                           	psect	text25
  8655  1564                     __ptext25:	
  8656 ;; *************** function _FCN_NEXT *****************
  8657 ;; Defined at:
  8658 ;;		line 287 in file "main.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;		None
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;Total ram usage:        2 bytes
  8677 ;; Hardware stack levels used: 1
  8678 ;; Hardware stack levels required when called: 6
  8679 ;; This function calls:
  8680 ;;		_TX_Command
  8681 ;; This function is called by:
  8682 ;;		_Timer_Mode
  8683 ;;		_Automatic_Mode
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           
  8688                           ;psect for function _FCN_NEXT
  8689  1564                     _FCN_NEXT:
  8690  1564                     l7043:	
  8691                           ;incstack = 0
  8692                           ; Regs used in _FCN_NEXT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8693                           
  8694                           
  8695                           ;main.c: 289:     TX_Command(TX_SELECT_DIGIT);
  8696  1564  3029               	movlw	41
  8697  1565  319E  26E1  3195   	fcall	_TX_Command
  8698                           
  8699                           ;main.c: 291:     switch (g_digit_status) {
  8700  1568  2D76               	goto	l7051
  8701  1569                     l7045:
  8702                           
  8703                           ;main.c: 294:             g_digit_status = dahegan_e;
  8704  1569  3002               	movlw	2
  8705  156A  00F4               	movwf	??_FCN_NEXT
  8706  156B  0874               	movf	??_FCN_NEXT,w
  8707  156C  00FA               	movwf	_g_digit_status
  8708                           
  8709                           ;main.c: 295:             break;
  8710  156D  2D89               	goto	l1031
  8711  156E                     l7047:
  8712                           
  8713                           ;main.c: 298:             g_digit_status = sadegan_e;
  8714  156E  3003               	movlw	3
  8715  156F  00F4               	movwf	??_FCN_NEXT
  8716  1570  0874               	movf	??_FCN_NEXT,w
  8717  1571  00FA               	movwf	_g_digit_status
  8718                           
  8719                           ;main.c: 299:             break;
  8720  1572  2D89               	goto	l1031
  8721  1573                     l1029:	
  8722                           ;main.c: 301:         case sadegan_e:
  8723                           
  8724                           
  8725                           ;main.c: 302:             g_digit_status = yekan_e;
  8726  1573  01FA               	clrf	_g_digit_status
  8727  1574  0AFA               	incf	_g_digit_status,f
  8728                           
  8729                           ;main.c: 303:             break;
  8730  1575  2D89               	goto	l1031
  8731  1576                     l7051:
  8732  1576  087A               	movf	_g_digit_status,w
  8733  1577  00F4               	movwf	??_FCN_NEXT
  8734  1578  01F5               	clrf	??_FCN_NEXT+1
  8735                           
  8736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8737                           ; Switch size 1, requested type "simple"
  8738                           ; Number of cases is 1, Range of values is 0 to 0
  8739                           ; switch strategies available:
  8740                           ; Name         Instructions Cycles
  8741                           ; simple_byte            4     3 (average)
  8742                           ; direct_byte            8     6 (fixed)
  8743                           ; jumptable            260     6 (fixed)
  8744                           ;	Chosen strategy is simple_byte
  8745  1579  0875               	movf	??_FCN_NEXT+1,w
  8746  157A  3A00               	xorlw	0	; case 0
  8747  157B  1903               	skipnz
  8748  157C  2D7E               	goto	l8071
  8749  157D  2D89               	goto	l1031
  8750  157E                     l8071:
  8751                           
  8752                           ; Switch size 1, requested type "simple"
  8753                           ; Number of cases is 3, Range of values is 1 to 3
  8754                           ; switch strategies available:
  8755                           ; Name         Instructions Cycles
  8756                           ; simple_byte           10     6 (average)
  8757                           ; direct_byte           15     9 (fixed)
  8758                           ; jumptable            263     9 (fixed)
  8759                           ;	Chosen strategy is simple_byte
  8760  157E  0874               	movf	??_FCN_NEXT,w
  8761  157F  3A01               	xorlw	1	; case 1
  8762  1580  1903               	skipnz
  8763  1581  2D69               	goto	l7045
  8764  1582  3A03               	xorlw	3	; case 2
  8765  1583  1903               	skipnz
  8766  1584  2D6E               	goto	l7047
  8767  1585  3A01               	xorlw	1	; case 3
  8768  1586  1903               	skipnz
  8769  1587  2D73               	goto	l1029
  8770  1588  2D89               	goto	l1031
  8771  1589                     l1031:
  8772  1589  0008               	return
  8773  158A                     __end_of_FCN_NEXT:
  8774                           
  8775                           	psect	text26
  8776  1E65                     __ptext26:	
  8777 ;; *************** function _TMR1_StopTimer *****************
  8778 ;; Defined at:
  8779 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		None
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;Total ram usage:        0 bytes
  8798 ;; Hardware stack levels used: 1
  8799 ;; Hardware stack levels required when called: 4
  8800 ;; This function calls:
  8801 ;;		Nothing
  8802 ;; This function is called by:
  8803 ;;		_Automatic_Mode
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           
  8808                           ;psect for function _TMR1_StopTimer
  8809  1E65                     _TMR1_StopTimer:
  8810  1E65                     l7193:	
  8811                           ;incstack = 0
  8812                           ; Regs used in _TMR1_StopTimer: []
  8813                           
  8814                           
  8815                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  8816  1E65  0020               	movlb	0	; select bank0
  8817  1E66  1018               	bcf	24,0	;volatile
  8818  1E67                     l822:
  8819  1E67  0008               	return
  8820  1E68                     __end_of_TMR1_StopTimer:
  8821                           
  8822                           	psect	text27
  8823  11D6                     __ptext27:	
  8824 ;; *************** function _Motor_ON *****************
  8825 ;; Defined at:
  8826 ;;		line 455 in file "main.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  motor_on_tim    3    4[BANK0 ] unsigned um
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;		None
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  1    wreg      void 
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0, pclath, cstack
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8840 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;Total ram usage:        3 bytes
  8845 ;; Hardware stack levels used: 1
  8846 ;; Hardware stack levels required when called: 5
  8847 ;; This function calls:
  8848 ;;		_TMR1_StartTimer
  8849 ;;		___ltdiv
  8850 ;; This function is called by:
  8851 ;;		_Automatic_Mode
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           
  8856                           ;psect for function _Motor_ON
  8857  11D6                     _Motor_ON:
  8858  11D6                     l7203:	
  8859                           ;incstack = 0
  8860                           ; Regs used in _Motor_ON: [wreg+status,2+status,0+pclath+cstack]
  8861                           
  8862                           
  8863                           ;main.c: 457:     g_motor_on_duration_ms = (uint16_t) (motor_on_time_ms / 10);
  8864  11D6  300A               	movlw	10
  8865  11D7  00F2               	movwf	___ltdiv@divisor
  8866  11D8  3000               	movlw	0
  8867  11D9  00F3               	movwf	___ltdiv@divisor+1
  8868  11DA  3000               	movlw	0
  8869  11DB  00F4               	movwf	___ltdiv@divisor+2
  8870  11DC  0020               	movlb	0	; select bank0
  8871  11DD  0824               	movf	Motor_ON@motor_on_time_ms,w
  8872  11DE  00F5               	movwf	___ltdiv@dividend
  8873  11DF  0825               	movf	Motor_ON@motor_on_time_ms+1,w
  8874  11E0  00F6               	movwf	___ltdiv@dividend+1
  8875  11E1  0826               	movf	Motor_ON@motor_on_time_ms+2,w
  8876  11E2  00F7               	movwf	___ltdiv@dividend+2
  8877  11E3  3188  20D1  3191   	fcall	___ltdiv
  8878  11E6  0873               	movf	?___ltdiv+1,w
  8879  11E7  0021               	movlb	1	; select bank1
  8880  11E8  00B1               	movwf	(_g_motor_on_duration_ms+1)^(0+128)
  8881  11E9  0872               	movf	?___ltdiv,w
  8882  11EA  00B0               	movwf	_g_motor_on_duration_ms^(0+128)
  8883  11EB                     l7205:
  8884                           
  8885                           ;main.c: 459:     g_tmr1_motor_counter = 0;
  8886  11EB  01A8               	clrf	_g_tmr1_motor_counter^(0+128)
  8887  11EC  01A9               	clrf	(_g_tmr1_motor_counter+1)^(0+128)
  8888  11ED                     l7207:
  8889                           
  8890                           ;main.c: 460:     TMR1_StartTimer();
  8891  11ED  319E  2662  3191   	fcall	_TMR1_StartTimer
  8892  11F0                     l7209:
  8893  11F0  0022               	movlb	2	; select bank2
  8894  11F1  168C               	bsf	12,5	;volatile
  8895  11F2                     l1094:
  8896  11F2  0008               	return
  8897  11F3                     __end_of_Motor_ON:
  8898                           
  8899                           	psect	text28
  8900  08D1                     __ptext28:	
  8901 ;; *************** function ___ltdiv *****************
  8902 ;; Defined at:
  8903 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/ltdiv.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  divisor         3    2[COMMON] unsigned um
  8906 ;;  dividend        3    5[COMMON] unsigned um
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  quotient        3    0[BANK0 ] unsigned um
  8909 ;;  counter         1    3[BANK0 ] unsigned char 
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  3    2[COMMON] unsigned um
  8912 ;; Registers used:
  8913 ;;		wreg, status,2, status,0
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8919 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8920 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Totals:         7       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;Total ram usage:       11 bytes
  8924 ;; Hardware stack levels used: 1
  8925 ;; Hardware stack levels required when called: 4
  8926 ;; This function calls:
  8927 ;;		Nothing
  8928 ;; This function is called by:
  8929 ;;		_Motor_ON
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function ___ltdiv
  8935  08D1                     ___ltdiv:
  8936  08D1                     l7121:	
  8937                           ;incstack = 0
  8938                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  8939                           
  8940  08D1  3000               	movlw	0
  8941  08D2  0020               	movlb	0	; select bank0
  8942  08D3  00A0               	movwf	___ltdiv@quotient
  8943  08D4  3000               	movlw	0
  8944  08D5  00A1               	movwf	___ltdiv@quotient+1
  8945  08D6  3000               	movlw	0
  8946  08D7  00A2               	movwf	___ltdiv@quotient+2
  8947  08D8  0874               	movf	___ltdiv@divisor+2,w
  8948  08D9  0473               	iorwf	___ltdiv@divisor+1,w
  8949  08DA  0472               	iorwf	___ltdiv@divisor,w
  8950  08DB  1903               	skipnz
  8951  08DC  28DE               	goto	u5441
  8952  08DD  28DF               	goto	u5440
  8953  08DE                     u5441:
  8954  08DE  2917               	goto	l7141
  8955  08DF                     u5440:
  8956  08DF                     l7123:
  8957  08DF  01A3               	clrf	___ltdiv@counter
  8958  08E0  0AA3               	incf	___ltdiv@counter,f
  8959  08E1  28EC               	goto	l7127
  8960  08E2                     l7125:
  8961  08E2  3001               	movlw	1
  8962  08E3                     u5455:
  8963  08E3  35F2               	lslf	___ltdiv@divisor,f
  8964  08E4  0DF3               	rlf	___ltdiv@divisor+1,f
  8965  08E5  0DF4               	rlf	___ltdiv@divisor+2,f
  8966  08E6  0B89               	decfsz	9,f
  8967  08E7  28E3               	goto	u5455
  8968  08E8  3001               	movlw	1
  8969  08E9  00F8               	movwf	??___ltdiv
  8970  08EA  0878               	movf	??___ltdiv,w
  8971  08EB  07A3               	addwf	___ltdiv@counter,f
  8972  08EC                     l7127:
  8973  08EC  1FF4               	btfss	___ltdiv@divisor+2,7
  8974  08ED  28EF               	goto	u5461
  8975  08EE  28F0               	goto	u5460
  8976  08EF                     u5461:
  8977  08EF  28E2               	goto	l7125
  8978  08F0                     u5460:
  8979  08F0                     l7129:
  8980  08F0  3001               	movlw	1
  8981  08F1                     u5475:
  8982  08F1  35A0               	lslf	___ltdiv@quotient,f
  8983  08F2  0DA1               	rlf	___ltdiv@quotient+1,f
  8984  08F3  0DA2               	rlf	___ltdiv@quotient+2,f
  8985  08F4  0B89               	decfsz	9,f
  8986  08F5  28F1               	goto	u5475
  8987  08F6                     l7131:
  8988  08F6  0874               	movf	___ltdiv@divisor+2,w
  8989  08F7  0277               	subwf	___ltdiv@dividend+2,w
  8990  08F8  1D03               	skipz
  8991  08F9  2900               	goto	u5485
  8992  08FA  0873               	movf	___ltdiv@divisor+1,w
  8993  08FB  0276               	subwf	___ltdiv@dividend+1,w
  8994  08FC  1D03               	skipz
  8995  08FD  2900               	goto	u5485
  8996  08FE  0872               	movf	___ltdiv@divisor,w
  8997  08FF  0275               	subwf	___ltdiv@dividend,w
  8998  0900                     u5485:
  8999  0900  1C03               	skipc
  9000  0901  2903               	goto	u5481
  9001  0902  2904               	goto	u5480
  9002  0903                     u5481:
  9003  0903  290B               	goto	l7137
  9004  0904                     u5480:
  9005  0904                     l7133:
  9006  0904  0872               	movf	___ltdiv@divisor,w
  9007  0905  02F5               	subwf	___ltdiv@dividend,f
  9008  0906  0873               	movf	___ltdiv@divisor+1,w
  9009  0907  3BF6               	subwfb	___ltdiv@dividend+1,f
  9010  0908  0874               	movf	___ltdiv@divisor+2,w
  9011  0909  3BF7               	subwfb	___ltdiv@dividend+2,f
  9012  090A                     l7135:
  9013  090A  1420               	bsf	___ltdiv@quotient,0
  9014  090B                     l7137:
  9015  090B  3001               	movlw	1
  9016  090C                     u5495:
  9017  090C  36F4               	lsrf	___ltdiv@divisor+2,f
  9018  090D  0CF3               	rrf	___ltdiv@divisor+1,f
  9019  090E  0CF2               	rrf	___ltdiv@divisor,f
  9020  090F  0B89               	decfsz	9,f
  9021  0910  290C               	goto	u5495
  9022  0911                     l7139:
  9023  0911  3001               	movlw	1
  9024  0912  02A3               	subwf	___ltdiv@counter,f
  9025  0913  1D03               	btfss	3,2
  9026  0914  2916               	goto	u5501
  9027  0915  2917               	goto	u5500
  9028  0916                     u5501:
  9029  0916  28F0               	goto	l7129
  9030  0917                     u5500:
  9031  0917                     l7141:
  9032  0917  0820               	movf	___ltdiv@quotient,w
  9033  0918  00F2               	movwf	?___ltdiv
  9034  0919  0821               	movf	___ltdiv@quotient+1,w
  9035  091A  00F3               	movwf	?___ltdiv+1
  9036  091B  0822               	movf	___ltdiv@quotient+2,w
  9037  091C  00F4               	movwf	?___ltdiv+2
  9038  091D                     l1730:
  9039  091D  0008               	return
  9040  091E                     __end_of___ltdiv:
  9041                           
  9042                           	psect	text29
  9043  1E62                     __ptext29:	
  9044 ;; *************** function _TMR1_StartTimer *****************
  9045 ;; Defined at:
  9046 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;		None
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;		None
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  1    wreg      void 
  9053 ;; Registers used:
  9054 ;;		None
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;Total ram usage:        0 bytes
  9065 ;; Hardware stack levels used: 1
  9066 ;; Hardware stack levels required when called: 4
  9067 ;; This function calls:
  9068 ;;		Nothing
  9069 ;; This function is called by:
  9070 ;;		_Motor_ON
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           
  9075                           ;psect for function _TMR1_StartTimer
  9076  1E62                     _TMR1_StartTimer:
  9077  1E62                     l6965:	
  9078                           ;incstack = 0
  9079                           ; Regs used in _TMR1_StartTimer: []
  9080                           
  9081                           
  9082                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  9083  1E62  0020               	movlb	0	; select bank0
  9084  1E63  1418               	bsf	24,0	;volatile
  9085  1E64                     l819:
  9086  1E64  0008               	return
  9087  1E65                     __end_of_TMR1_StartTimer:
  9088                           
  9089                           	psect	text30
  9090  0F28                     __ptext30:	
  9091 ;; *************** function _Manual_Mode *****************
  9092 ;; Defined at:
  9093 ;;		line 548 in file "main.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;		None
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  Flag_sound      1   32[BANK0 ] _Bool 
  9098 ;;  Flag            1   31[BANK0 ] _Bool 
  9099 ;;  b_power_touc    1   30[BANK0 ] _Bool 
  9100 ;;  b_mode_touch    1   29[BANK0 ] _Bool 
  9101 ;;  received_com    1   28[BANK0 ] unsigned char 
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;Total ram usage:        6 bytes
  9116 ;; Hardware stack levels used: 1
  9117 ;; Hardware stack levels required when called: 11
  9118 ;; This function calls:
  9119 ;;		_MTOUCH_Button_isPressed
  9120 ;;		_MTOUCH_Service_Mainloop
  9121 ;;		_RX_Command
  9122 ;;		_SET_SOUND_MODE
  9123 ;;		_TX_Command
  9124 ;; This function is called by:
  9125 ;;		_Automatic_Mode
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           
  9130                           ;psect for function _Manual_Mode
  9131  0F28                     _Manual_Mode:
  9132  0F28                     l7211:	
  9133                           ;incstack = 0
  9134                           ; Regs used in _Manual_Mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9135                           
  9136                           
  9137                           ;main.c: 550:     uint8_t received_command;;main.c: 551:     _Bool b_mode_touched = 0;
  9138  0F28  0020               	movlb	0	; select bank0
  9139  0F29  01BD               	clrf	Manual_Mode@b_mode_touched
  9140                           
  9141                           ;main.c: 552:     _Bool b_power_touched = 0;
  9142  0F2A  01BE               	clrf	Manual_Mode@b_power_touched
  9143                           
  9144                           ;main.c: 553:     _Bool Flag = 0;
  9145  0F2B  01BF               	clrf	Manual_Mode@Flag
  9146  0F2C                     l7213:
  9147  0F2C                     l7215:
  9148                           
  9149                           ;main.c: 556:     TX_Command(TX_7SEG_ON);
  9150  0F2C  300B               	movlw	11
  9151  0F2D  319E  26E1  318F   	fcall	_TX_Command
  9152  0F30                     l7217:
  9153                           
  9154                           ;main.c: 557:     TX_Command(TX_7SEG_MANUAL);
  9155  0F30  301E               	movlw	30
  9156  0F31  319E  26E1  318F   	fcall	_TX_Command
  9157  0F34                     l7219:
  9158                           
  9159                           ;main.c: 561:         if (1 == MTOUCH_Service_Mainloop()) {
  9160  0F34  3196  2629  318F   	fcall	_MTOUCH_Service_Mainloop
  9161  0F37  3A01               	xorlw	1
  9162  0F38  1D03               	skipz
  9163  0F39  2F3B               	goto	u5641
  9164  0F3A  2F3C               	goto	u5640
  9165  0F3B                     u5641:
  9166  0F3B  2FC9               	goto	l7275
  9167  0F3C                     u5640:
  9168  0F3C                     l7221:
  9169                           
  9170                           ;main.c: 563:             if (1 == MTOUCH_Button_isPressed(T_7)) {
  9171  0F3C  3005               	movlw	5
  9172  0F3D  3195  25D8  318F   	fcall	_MTOUCH_Button_isPressed
  9173  0F40  3A01               	xorlw	1
  9174  0F41  1D03               	skipz
  9175  0F42  2F44               	goto	u5651
  9176  0F43  2F45               	goto	u5650
  9177  0F44                     u5651:
  9178  0F44  2F5A               	goto	l7231
  9179  0F45                     u5650:
  9180  0F45                     l7223:
  9181                           
  9182                           ;main.c: 565:                 b_mode_touched = 1;
  9183  0F45  0020               	movlb	0	; select bank0
  9184  0F46  01BD               	clrf	Manual_Mode@b_mode_touched
  9185  0F47  0ABD               	incf	Manual_Mode@b_mode_touched,f
  9186  0F48                     l7225:
  9187                           
  9188                           ;main.c: 567:                 SET_SOUND_MODE(learn_rf_code_is_start);
  9189  0F48  3000               	movlw	0
  9190  0F49  3186  268E  318F   	fcall	_SET_SOUND_MODE
  9191                           
  9192                           ;main.c: 568:                 while (1 == MTOUCH_Button_isPressed(T_7)) {
  9193  0F4C  2F50               	goto	l7229
  9194  0F4D                     l7227:
  9195                           
  9196                           ;main.c: 569:                     MTOUCH_Service_Mainloop();
  9197  0F4D  3196  2629  318F   	fcall	_MTOUCH_Service_Mainloop
  9198  0F50                     l7229:
  9199                           
  9200                           ;main.c: 568:                 while (1 == MTOUCH_Button_isPressed(T_7)) {
  9201  0F50  3005               	movlw	5
  9202  0F51  3195  25D8  318F   	fcall	_MTOUCH_Button_isPressed
  9203  0F54  3A01               	xorlw	1
  9204  0F55  1903               	skipnz
  9205  0F56  2F58               	goto	u5661
  9206  0F57  2F59               	goto	u5660
  9207  0F58                     u5661:
  9208  0F58  2F4D               	goto	l7227
  9209  0F59                     u5660:
  9210  0F59  2FDD               	goto	l7281
  9211  0F5A                     l7231:
  9212                           
  9213                           ;main.c: 575:             if (1 == MTOUCH_Button_isPressed(T_6)) {
  9214  0F5A  3006               	movlw	6
  9215  0F5B  3195  25D8  318F   	fcall	_MTOUCH_Button_isPressed
  9216  0F5E  3A01               	xorlw	1
  9217  0F5F  1D03               	skipz
  9218  0F60  2F62               	goto	u5671
  9219  0F61  2F63               	goto	u5670
  9220  0F62                     u5671:
  9221  0F62  2F74               	goto	l7239
  9222  0F63                     u5670:
  9223  0F63                     l7233:
  9224                           
  9225                           ;main.c: 577:                 b_power_touched = 1;
  9226  0F63  0020               	movlb	0	; select bank0
  9227  0F64  01BE               	clrf	Manual_Mode@b_power_touched
  9228  0F65  0ABE               	incf	Manual_Mode@b_power_touched,f
  9229                           
  9230                           ;main.c: 579:                 while (1 == MTOUCH_Button_isPressed(T_6)) {
  9231  0F66  2F6A               	goto	l7237
  9232  0F67                     l7235:
  9233                           
  9234                           ;main.c: 580:                     MTOUCH_Service_Mainloop();
  9235  0F67  3196  2629  318F   	fcall	_MTOUCH_Service_Mainloop
  9236  0F6A                     l7237:
  9237                           
  9238                           ;main.c: 579:                 while (1 == MTOUCH_Button_isPressed(T_6)) {
  9239  0F6A  3006               	movlw	6
  9240  0F6B  3195  25D8  318F   	fcall	_MTOUCH_Button_isPressed
  9241  0F6E  3A01               	xorlw	1
  9242  0F6F  1903               	skipnz
  9243  0F70  2F72               	goto	u5681
  9244  0F71  2F73               	goto	u5680
  9245  0F72                     u5681:
  9246  0F72  2F67               	goto	l7235
  9247  0F73                     u5680:
  9248  0F73  2FDD               	goto	l7281
  9249  0F74                     l7239:
  9250                           
  9251                           ;main.c: 586:             if (1 == MTOUCH_Button_isPressed(T_8)) {
  9252  0F74  3004               	movlw	4
  9253  0F75  3195  25D8  318F   	fcall	_MTOUCH_Button_isPressed
  9254  0F78  3A01               	xorlw	1
  9255  0F79  1D03               	skipz
  9256  0F7A  2F7C               	goto	u5691
  9257  0F7B  2F7D               	goto	u5690
  9258  0F7C                     u5691:
  9259  0F7C  2FA0               	goto	l1136
  9260  0F7D                     u5690:
  9261  0F7D                     l7241:
  9262                           
  9263                           ;main.c: 588:                 if (PORTAbits.RA5) {
  9264  0F7D  0020               	movlb	0	; select bank0
  9265  0F7E  1E8C               	btfss	12,5	;volatile
  9266  0F7F  2F81               	goto	u5701
  9267  0F80  2F82               	goto	u5700
  9268  0F81                     u5701:
  9269  0F81  2F89               	goto	l7247
  9270  0F82                     u5700:
  9271  0F82                     l7243:
  9272                           
  9273                           ;main.c: 590:                     TX_Command(TX_STOP_INCREASE_SET_MANUAL);
  9274  0F82  3041               	movlw	65
  9275  0F83  319E  26E1  318F   	fcall	_TX_Command
  9276  0F86                     l7245:
  9277  0F86  0022               	movlb	2	; select bank2
  9278  0F87  128C               	bcf	12,5	;volatile
  9279  0F88  2F8F               	goto	l7251
  9280  0F89                     l7247:
  9281                           
  9282                           ;main.c: 594:                     TX_Command(TX_START_INCREASE);
  9283  0F89  3040               	movlw	64
  9284  0F8A  319E  26E1  318F   	fcall	_TX_Command
  9285  0F8D                     l7249:
  9286  0F8D  0022               	movlb	2	; select bank2
  9287  0F8E  168C               	bsf	12,5	;volatile
  9288  0F8F                     l7251:
  9289                           
  9290                           ;main.c: 598:                 SET_SOUND_MODE(learn_rf_code_is_start);
  9291  0F8F  3000               	movlw	0
  9292  0F90  3186  268E  318F   	fcall	_SET_SOUND_MODE
  9293                           
  9294                           ;main.c: 599:                 while (1 == MTOUCH_Button_isPressed(T_8)) {
  9295  0F93  2F97               	goto	l7255
  9296  0F94                     l7253:
  9297                           
  9298                           ;main.c: 600:                     MTOUCH_Service_Mainloop();
  9299  0F94  3196  2629  318F   	fcall	_MTOUCH_Service_Mainloop
  9300  0F97                     l7255:
  9301                           
  9302                           ;main.c: 599:                 while (1 == MTOUCH_Button_isPressed(T_8)) {
  9303  0F97  3004               	movlw	4
  9304  0F98  3195  25D8  318F   	fcall	_MTOUCH_Button_isPressed
  9305  0F9B  3A01               	xorlw	1
  9306  0F9C  1903               	skipnz
  9307  0F9D  2F9F               	goto	u5711
  9308  0F9E  2FA0               	goto	u5710
  9309  0F9F                     u5711:
  9310  0F9F  2F94               	goto	l7253
  9311  0FA0                     u5710:
  9312  0FA0                     l1136:	
  9313                           ;main.c: 602:             }
  9314                           
  9315                           
  9316                           ;main.c: 604:             Flag_sound = 1;
  9317  0FA0  0020               	movlb	0	; select bank0
  9318  0FA1  01C0               	clrf	Manual_Mode@Flag_sound
  9319  0FA2  0AC0               	incf	Manual_Mode@Flag_sound,f
  9320                           
  9321                           ;main.c: 605:             while (!PORTBbits.RB4) {
  9322  0FA3  2FB8               	goto	l7265
  9323  0FA4                     l1147:
  9324                           
  9325                           ;main.c: 607:                 Flag = 1;
  9326  0FA4  01BF               	clrf	Manual_Mode@Flag
  9327  0FA5  0ABF               	incf	Manual_Mode@Flag,f
  9328  0FA6                     l1148:	
  9329                           ;main.c: 609:                 do { LATAbits.LATA5 = 1; } while(0);
  9330                           
  9331  0FA6  0022               	movlb	2	; select bank2
  9332  0FA7  168C               	bsf	12,5	;volatile
  9333  0FA8                     l7257:
  9334                           
  9335                           ;main.c: 610:                 if (Flag_sound) {
  9336  0FA8  0020               	movlb	0	; select bank0
  9337  0FA9  0840               	movf	Manual_Mode@Flag_sound,w
  9338  0FAA  1903               	btfsc	3,2
  9339  0FAB  2FAD               	goto	u5721
  9340  0FAC  2FAE               	goto	u5720
  9341  0FAD                     u5721:
  9342  0FAD  2FB8               	goto	l7265
  9343  0FAE                     u5720:
  9344  0FAE                     l7259:
  9345                           
  9346                           ;main.c: 612:                     TX_Command(TX_START_INCREASE);
  9347  0FAE  3040               	movlw	64
  9348  0FAF  319E  26E1  318F   	fcall	_TX_Command
  9349  0FB2                     l7261:
  9350                           
  9351                           ;main.c: 613:                     SET_SOUND_MODE(learn_rf_code_is_start);
  9352  0FB2  3000               	movlw	0
  9353  0FB3  3186  268E  318F   	fcall	_SET_SOUND_MODE
  9354  0FB6                     l7263:
  9355                           
  9356                           ;main.c: 614:                     Flag_sound = 0;
  9357  0FB6  0020               	movlb	0	; select bank0
  9358  0FB7  01C0               	clrf	Manual_Mode@Flag_sound
  9359  0FB8                     l7265:
  9360                           
  9361                           ;main.c: 605:             while (!PORTBbits.RB4) {
  9362  0FB8  1E0D               	btfss	13,4	;volatile
  9363  0FB9  2FBB               	goto	u5731
  9364  0FBA  2FBC               	goto	u5730
  9365  0FBB                     u5731:
  9366  0FBB  2FA4               	goto	l1147
  9367  0FBC                     u5730:
  9368  0FBC                     l7267:
  9369                           
  9370                           ;main.c: 617:             if (Flag) {
  9371  0FBC  083F               	movf	Manual_Mode@Flag,w
  9372  0FBD  1903               	btfsc	3,2
  9373  0FBE  2FC0               	goto	u5741
  9374  0FBF  2FC1               	goto	u5740
  9375  0FC0                     u5741:
  9376  0FC0  2FC9               	goto	l7275
  9377  0FC1                     u5740:
  9378  0FC1                     l7269:
  9379                           
  9380                           ;main.c: 619:                 TX_Command(TX_STOP_INCREASE_SET_MANUAL);
  9381  0FC1  3041               	movlw	65
  9382  0FC2  319E  26E1  318F   	fcall	_TX_Command
  9383  0FC5                     l7271:
  9384  0FC5  0022               	movlb	2	; select bank2
  9385  0FC6  128C               	bcf	12,5	;volatile
  9386  0FC7                     l7273:
  9387                           
  9388                           ;main.c: 621:                 Flag = 0;
  9389  0FC7  0020               	movlb	0	; select bank0
  9390  0FC8  01BF               	clrf	Manual_Mode@Flag
  9391  0FC9                     l7275:
  9392                           
  9393                           ;main.c: 625:         received_command = RX_Command();
  9394  0FC9  319F  274D  318F   	fcall	_RX_Command
  9395  0FCC  0020               	movlb	0	; select bank0
  9396  0FCD  00BB               	movwf	??_Manual_Mode
  9397  0FCE  083B               	movf	??_Manual_Mode,w
  9398  0FCF  00BC               	movwf	Manual_Mode@received_command
  9399  0FD0                     l7277:
  9400                           
  9401                           ;main.c: 627:         if (RX_7SEG_REACHED_999 == received_command) {
  9402  0FD0  3044               	movlw	68
  9403  0FD1  063C               	xorwf	Manual_Mode@received_command,w
  9404  0FD2  1D03               	btfss	3,2
  9405  0FD3  2FD5               	goto	u5751
  9406  0FD4  2FD6               	goto	u5750
  9407  0FD5                     u5751:
  9408  0FD5  2F34               	goto	l7219
  9409  0FD6                     u5750:
  9410  0FD6                     l1156:	
  9411                           ;main.c: 629:             do { LATAbits.LATA5 = 0; } while(0);
  9412                           
  9413  0FD6  0022               	movlb	2	; select bank2
  9414  0FD7  128C               	bcf	12,5	;volatile
  9415  0FD8                     l7279:
  9416                           
  9417                           ;main.c: 630:             SET_SOUND_MODE(learn_rf_code_is_start);
  9418  0FD8  3000               	movlw	0
  9419  0FD9  3186  268E  318F   	fcall	_SET_SOUND_MODE
  9420  0FDC  2F34               	goto	l7219
  9421  0FDD                     l7281:
  9422                           
  9423                           ;main.c: 634:     if (1 == b_mode_touched) {
  9424  0FDD  0020               	movlb	0	; select bank0
  9425  0FDE  033D               	decf	Manual_Mode@b_mode_touched,w
  9426  0FDF  1D03               	btfss	3,2
  9427  0FE0  2FE2               	goto	u5761
  9428  0FE1  2FE3               	goto	u5760
  9429  0FE2                     u5761:
  9430  0FE2  2FF0               	goto	l7285
  9431  0FE3                     u5760:
  9432  0FE3                     l1160:	
  9433                           ;main.c: 636:         do { LATAbits.LATA5 = 0; } while(0);
  9434                           
  9435  0FE3  0022               	movlb	2	; select bank2
  9436  0FE4  128C               	bcf	12,5	;volatile
  9437  0FE5                     l1161:
  9438                           
  9439                           ;main.c: 637:         g_mode_status = automatic_e;
  9440  0FE5  0020               	movlb	0	; select bank0
  9441  0FE6  01E0               	clrf	_g_mode_status
  9442  0FE7  0AE0               	incf	_g_mode_status,f
  9443  0FE8                     l7283:
  9444                           
  9445                           ;main.c: 640:         TX_Command(TX_STOP_INCREASE_SET_MANUAL);
  9446  0FE8  3041               	movlw	65
  9447  0FE9  319E  26E1  318F   	fcall	_TX_Command
  9448                           
  9449                           ;main.c: 641:         TX_Command(TX_7SEG_SHOW_MASS);
  9450  0FEC  3042               	movlw	66
  9451  0FED  319E  26E1  318F   	fcall	_TX_Command
  9452  0FF0                     l7285:
  9453                           
  9454                           ;main.c: 644:     if (1 == b_power_touched) {
  9455  0FF0  0020               	movlb	0	; select bank0
  9456  0FF1  033E               	decf	Manual_Mode@b_power_touched,w
  9457  0FF2  1D03               	btfss	3,2
  9458  0FF3  2FF5               	goto	u5771
  9459  0FF4  2FF6               	goto	u5770
  9460  0FF5                     u5771:
  9461  0FF5  2FFF               	goto	l1163
  9462  0FF6                     u5770:
  9463  0FF6                     l7287:
  9464                           
  9465                           ;main.c: 646:         g_power_event.manual = 1;
  9466  0FF6  14DE               	bsf	_g_power_event,1
  9467  0FF7                     l7289:
  9468                           
  9469                           ;main.c: 647:         TX_Command(TX_STOP_INCREASE_SET_MANUAL);
  9470  0FF7  3041               	movlw	65
  9471  0FF8  319E  26E1  318F   	fcall	_TX_Command
  9472                           
  9473                           ;main.c: 648:         TX_Command(TX_7SEG_OFF);
  9474  0FFB  300C               	movlw	12
  9475  0FFC  319E  26E1  318F   	fcall	_TX_Command
  9476  0FFF                     l1163:
  9477  0FFF  0008               	return
  9478  1000                     __end_of_Manual_Mode:
  9479                           
  9480                           	psect	text31
  9481  1F4D                     __ptext31:	
  9482 ;; *************** function _RX_Command *****************
  9483 ;; Defined at:
  9484 ;;		line 482 in file "main.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;		None
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  buffer          1    3[COMMON] unsigned char 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      unsigned char 
  9491 ;; Registers used:
  9492 ;;		wreg, status,2, status,0, pclath, cstack
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;Total ram usage:        2 bytes
  9503 ;; Hardware stack levels used: 1
  9504 ;; Hardware stack levels required when called: 5
  9505 ;; This function calls:
  9506 ;;		_EUSART_Read
  9507 ;;		_EUSART_is_rx_ready
  9508 ;; This function is called by:
  9509 ;;		_Manual_Mode
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           
  9514                           ;psect for function _RX_Command
  9515  1F4D                     _RX_Command:
  9516  1F4D                     l7109:	
  9517                           ;incstack = 0
  9518                           ; Regs used in _RX_Command: [wreg+status,2+status,0+pclath+cstack]
  9519                           
  9520                           
  9521                           ;main.c: 484:     uint8_t buffer;;main.c: 486:     if (EUSART_is_rx_ready()) {
  9522  1F4D  3188  2000  319F   	fcall	_EUSART_is_rx_ready
  9523  1F50  3A00               	xorlw	0
  9524  1F51  1903               	skipnz
  9525  1F52  2F54               	goto	u5431
  9526  1F53  2F55               	goto	u5430
  9527  1F54                     u5431:
  9528  1F54  2F5C               	goto	l1102
  9529  1F55                     u5430:
  9530  1F55                     l7111:
  9531                           
  9532                           ;main.c: 488:         buffer = EUSART_Read();
  9533  1F55  319F  273D  319F   	fcall	_EUSART_Read
  9534  1F58  00F2               	movwf	??_RX_Command
  9535  1F59  0872               	movf	??_RX_Command,w
  9536  1F5A  00F3               	movwf	RX_Command@buffer
  9537  1F5B                     l7113:
  9538                           
  9539                           ;main.c: 489:         return buffer;
  9540  1F5B  0873               	movf	RX_Command@buffer,w
  9541  1F5C                     l1102:
  9542  1F5C  0008               	return
  9543  1F5D                     __end_of_RX_Command:
  9544                           
  9545                           	psect	text32
  9546  0800                     __ptext32:	
  9547 ;; *************** function _EUSART_is_rx_ready *****************
  9548 ;; Defined at:
  9549 ;;		line 99 in file "mcc_generated_files/eusart.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      _Bool 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;Total ram usage:        0 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; Hardware stack levels required when called: 4
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		_RX_Command
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           
  9578                           ;psect for function _EUSART_is_rx_ready
  9579  0800                     _EUSART_is_rx_ready:
  9580  0800                     l6851:	
  9581                           ;incstack = 0
  9582                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  9583                           
  9584                           
  9585                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  9586  0800  0020               	movlb	0	; select bank0
  9587  0801  0E11               	swapf	17,w	;volatile
  9588  0802  0C89               	rrf	9,f
  9589  0803  3901               	andlw	1
  9590  0804                     l716:
  9591  0804  0008               	return
  9592  0805                     __end_of_EUSART_is_rx_ready:
  9593                           
  9594                           	psect	text33
  9595  1F3D                     __ptext33:	
  9596 ;; *************** function _EUSART_Read *****************
  9597 ;; Defined at:
  9598 ;;		line 113 in file "mcc_generated_files/eusart.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;		None
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;		None
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  1    wreg      unsigned char 
  9605 ;; Registers used:
  9606 ;;		wreg, status,2
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/0
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;Total ram usage:        0 bytes
  9617 ;; Hardware stack levels used: 1
  9618 ;; Hardware stack levels required when called: 4
  9619 ;; This function calls:
  9620 ;;		Nothing
  9621 ;; This function is called by:
  9622 ;;		_RX_Command
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           
  9627                           ;psect for function _EUSART_Read
  9628  1F3D                     _EUSART_Read:
  9629  1F3D                     l6855:	
  9630                           ;incstack = 0
  9631                           ; Regs used in _EUSART_Read: [wreg+status,2]
  9632                           
  9633  1F3D                     l725:	
  9634                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  9635                           
  9636                           
  9637                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  9638  1F3D  0020               	movlb	0	; select bank0
  9639  1F3E  1E91               	btfss	17,5	;volatile
  9640  1F3F  2F41               	goto	u5111
  9641  1F40  2F42               	goto	u5110
  9642  1F41                     u5111:
  9643  1F41  2F3D               	goto	l725
  9644  1F42                     u5110:
  9645  1F42                     l6857:
  9646                           
  9647                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  9648  1F42  0021               	movlb	1	; select bank1
  9649  1F43  01B6               	clrf	_eusartRxLastError^(0+128)	;volatile
  9650  1F44                     l6859:
  9651                           
  9652                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  9653  1F44  0023               	movlb	3	; select bank3
  9654  1F45  1C9D               	btfss	29,1	;volatile
  9655  1F46  2F48               	goto	u5121
  9656  1F47  2F49               	goto	u5120
  9657  1F48                     u5121:
  9658  1F48  2F4B               	goto	l6863
  9659  1F49                     u5120:
  9660  1F49                     l6861:
  9661                           
  9662                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  9663  1F49  121D               	bcf	29,4	;volatile
  9664                           
  9665                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  9666  1F4A  161D               	bsf	29,4	;volatile
  9667  1F4B                     l6863:
  9668                           
  9669                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  9670  1F4B  0819               	movf	25,w	;volatile
  9671  1F4C                     l729:
  9672  1F4C  0008               	return
  9673  1F4D                     __end_of_EUSART_Read:
  9674                           
  9675                           	psect	text34
  9676  1629                     __ptext34:	
  9677 ;; *************** function _MTOUCH_Service_Mainloop *****************
  9678 ;; Defined at:
  9679 ;;		line 96 in file "mcc_generated_files/mtouch/mtouch.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;		None
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      _Bool 
  9686 ;; Registers used:
  9687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;Total ram usage:        1 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 10
  9700 ;; This function calls:
  9701 ;;		_MTOUCH_Button_ServiceAll
  9702 ;;		_MTOUCH_Initialize
  9703 ;;		_MTOUCH_Sensor_SampleAll
  9704 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  9705 ;;		_MTOUCH_Tick
  9706 ;;		_MTOUCH_needReburst
  9707 ;; This function is called by:
  9708 ;;		_Main_Routine
  9709 ;;		_Manual_Mode
  9710 ;;		_Timer_Mode
  9711 ;;		_Automatic_Mode
  9712 ;;		_touch_example
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           
  9717                           ;psect for function _MTOUCH_Service_Mainloop
  9718  1629                     _MTOUCH_Service_Mainloop:
  9719  1629                     l6919:	
  9720                           ;incstack = 0
  9721                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9722                           
  9723                           
  9724                           ;mcc_generated_files/mtouch/mtouch.c: 99:     if(mtouch_request_init)
  9725  1629  0020               	movlb	0	; select bank0
  9726  162A  0863               	movf	_mtouch_request_init,w
  9727  162B  1903               	btfsc	3,2
  9728  162C  2E2E               	goto	u5221
  9729  162D  2E2F               	goto	u5220
  9730  162E                     u5221:
  9731  162E  2E34               	goto	l6925
  9732  162F                     u5220:
  9733  162F                     l6921:
  9734                           
  9735                           ;mcc_generated_files/mtouch/mtouch.c: 100:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          1:         MTOUCH_Initialize();
  9736  162F  319E  26D4  3196   	fcall	_MTOUCH_Initialize
  9737  1632                     l6923:
  9738                           
  9739                           ;mcc_generated_files/mtouch/mtouch.c: 102:         mtouch_request_init = 0;
  9740  1632  0020               	movlb	0	; select bank0
  9741  1633  01E3               	clrf	_mtouch_request_init
  9742  1634                     l6925:
  9743                           
  9744                           ;mcc_generated_files/mtouch/mtouch.c: 106:     mtouch_time_toScan = 1;
  9745  1634  01E4               	clrf	_mtouch_time_toScan
  9746  1635  0AE4               	incf	_mtouch_time_toScan,f
  9747  1636                     l6927:
  9748  1636                     l6929:	
  9749                           ;mcc_generated_files/mtouch/mtouch.c: 108:     if(mtouch_time_toScan)
  9750                           
  9751                           
  9752                           ;mcc_generated_files/mtouch/mtouch.c: 109:     {;mcc_generated_files/mtouch/mtouch.c: 11
      +                          0:         if(MTOUCH_Sensor_SampleAll() == 0)
  9753  1636  3191  2151  3196   	fcall	_MTOUCH_Sensor_SampleAll
  9754  1639  3A00               	xorlw	0
  9755  163A  1D03               	skipz
  9756  163B  2E3D               	goto	u5231
  9757  163C  2E3E               	goto	u5230
  9758  163D                     u5231:
  9759  163D  2E40               	goto	l6935
  9760  163E                     u5230:
  9761  163E                     l6931:
  9762                           
  9763                           ;mcc_generated_files/mtouch/mtouch.c: 111:             return 0;
  9764  163E  3000               	movlw	0
  9765  163F  2E51               	goto	l302
  9766  1640                     l6935:
  9767                           
  9768                           ;mcc_generated_files/mtouch/mtouch.c: 113:             MTOUCH_Button_ServiceAll();
  9769  1640  319F  278F  3196   	fcall	_MTOUCH_Button_ServiceAll
  9770  1643                     l6937:
  9771                           
  9772                           ;mcc_generated_files/mtouch/mtouch.c: 114:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  9773  1643  319E  265D  3196   	fcall	_MTOUCH_needReburst
  9774  1646  0020               	movlb	0	; select bank0
  9775  1647  00BA               	movwf	??_MTOUCH_Service_Mainloop
  9776  1648  083A               	movf	??_MTOUCH_Service_Mainloop,w
  9777  1649  00E4               	movwf	_mtouch_time_toScan
  9778  164A                     l6939:
  9779                           
  9780                           ;mcc_generated_files/mtouch/mtouch.c: 115:             MTOUCH_Sensor_Sampled_ResetAll();
  9781  164A  3197  2705  3196   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  9782  164D                     l6941:
  9783                           
  9784                           ;mcc_generated_files/mtouch/mtouch.c: 116:             MTOUCH_Tick();
  9785  164D  319E  2668  3196   	fcall	_MTOUCH_Tick
  9786  1650                     l6943:
  9787                           
  9788                           ;mcc_generated_files/mtouch/mtouch.c: 117:             return 1;
  9789  1650  3001               	movlw	1
  9790  1651                     l302:
  9791  1651  0008               	return
  9792  1652                     __end_of_MTOUCH_Service_Mainloop:
  9793                           
  9794                           	psect	text35
  9795  1E5D                     __ptext35:	
  9796 ;; *************** function _MTOUCH_needReburst *****************
  9797 ;; Defined at:
  9798 ;;		line 140 in file "mcc_generated_files/mtouch/mtouch.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;		None
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;  needReburst     1    0        _Bool 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      _Bool 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;Total ram usage:        0 bytes
  9817 ;; Hardware stack levels used: 1
  9818 ;; Hardware stack levels required when called: 4
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_MTOUCH_Service_Mainloop
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           
  9827                           ;psect for function _MTOUCH_needReburst
  9828  1E5D                     _MTOUCH_needReburst:
  9829  1E5D                     l6843:	
  9830                           ;incstack = 0
  9831                           ; Regs used in _MTOUCH_needReburst: [wreg+status,2]
  9832                           
  9833  1E5D                     l6845:
  9834                           
  9835                           ;mcc_generated_files/mtouch/mtouch.c: 144:     return needReburst;
  9836  1E5D  3000               	movlw	0
  9837  1E5E                     l309:
  9838  1E5E  0008               	return
  9839  1E5F                     __end_of_MTOUCH_needReburst:
  9840                           
  9841                           	psect	text36
  9842  1E68                     __ptext36:	
  9843 ;; *************** function _MTOUCH_Tick *****************
  9844 ;; Defined at:
  9845 ;;		line 130 in file "mcc_generated_files/mtouch/mtouch.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;		None
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;		None
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  1    wreg      void 
  9852 ;; Registers used:
  9853 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9863 ;;Total ram usage:        0 bytes
  9864 ;; Hardware stack levels used: 1
  9865 ;; Hardware stack levels required when called: 6
  9866 ;; This function calls:
  9867 ;;		_MTOUCH_Button_Tick
  9868 ;; This function is called by:
  9869 ;;		_MTOUCH_Service_Mainloop
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           
  9874                           ;psect for function _MTOUCH_Tick
  9875  1E68                     _MTOUCH_Tick:
  9876  1E68                     l6849:	
  9877                           ;incstack = 0
  9878                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9879                           
  9880                           
  9881                           ;mcc_generated_files/mtouch/mtouch.c: 132:     MTOUCH_Button_Tick();
  9882  1E68  3195  258A  319E   	fcall	_MTOUCH_Button_Tick
  9883  1E6B                     l306:
  9884  1E6B  0008               	return
  9885  1E6C                     __end_of_MTOUCH_Tick:
  9886                           
  9887                           	psect	text37
  9888  158A                     __ptext37:	
  9889 ;; *************** function _MTOUCH_Button_Tick *****************
  9890 ;; Defined at:
  9891 ;;		line 345 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;		None
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  i               1    0[BANK0 ] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;Total ram usage:        5 bytes
  9910 ;; Hardware stack levels used: 1
  9911 ;; Hardware stack levels required when called: 5
  9912 ;; This function calls:
  9913 ;;		_Button_Tick_helper
  9914 ;; This function is called by:
  9915 ;;		_MTOUCH_Tick
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           
  9920                           ;psect for function _MTOUCH_Button_Tick
  9921  158A                     _MTOUCH_Button_Tick:
  9922  158A                     l6745:	
  9923                           ;incstack = 0
  9924                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9925                           
  9926                           
  9927                           ;mcc_generated_files/mtouch/mtouch_button.c: 347:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 348:     for (i = 0; i < 9u; i++)
  9928  158A  0020               	movlb	0	; select bank0
  9929  158B  01A0               	clrf	MTOUCH_Button_Tick@i
  9930  158C                     l6751:
  9931                           
  9932                           ;mcc_generated_files/mtouch/mtouch_button.c: 349:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 350:         Button_Tick_helper(&mtouch_button[i]);
  9933  158C  0820               	movf	MTOUCH_Button_Tick@i,w
  9934  158D  00F6               	movwf	??_MTOUCH_Button_Tick
  9935  158E  01F7               	clrf	??_MTOUCH_Button_Tick+1
  9936  158F  0EF6               	swapf	??_MTOUCH_Button_Tick,f
  9937  1590  0EF7               	swapf	??_MTOUCH_Button_Tick+1,f
  9938  1591  30F0               	movlw	240
  9939  1592  05F7               	andwf	??_MTOUCH_Button_Tick+1,f
  9940  1593  0876               	movf	??_MTOUCH_Button_Tick,w
  9941  1594  390F               	andlw	15
  9942  1595  04F7               	iorwf	??_MTOUCH_Button_Tick+1,f
  9943  1596  30F0               	movlw	240
  9944  1597  05F6               	andwf	??_MTOUCH_Button_Tick,f
  9945  1598  3060               	movlw	96
  9946  1599  00F8               	movwf	??_MTOUCH_Button_Tick+2
  9947  159A  3023               	movlw	35
  9948  159B  00F9               	movwf	??_MTOUCH_Button_Tick+3
  9949  159C  0876               	movf	??_MTOUCH_Button_Tick,w
  9950  159D  0778               	addwf	??_MTOUCH_Button_Tick+2,w
  9951  159E  00F2               	movwf	Button_Tick_helper@button
  9952  159F  0877               	movf	??_MTOUCH_Button_Tick+1,w
  9953  15A0  3D79               	addwfc	??_MTOUCH_Button_Tick+3,w
  9954  15A1  00F3               	movwf	Button_Tick_helper@button+1
  9955  15A2  3196  2652  3195   	fcall	_Button_Tick_helper
  9956  15A5                     l6753:
  9957                           
  9958                           ;mcc_generated_files/mtouch/mtouch_button.c: 351:     }
  9959  15A5  3001               	movlw	1
  9960  15A6  00F6               	movwf	??_MTOUCH_Button_Tick
  9961  15A7  0876               	movf	??_MTOUCH_Button_Tick,w
  9962  15A8  0020               	movlb	0	; select bank0
  9963  15A9  07A0               	addwf	MTOUCH_Button_Tick@i,f
  9964  15AA                     l6755:
  9965  15AA  3009               	movlw	9
  9966  15AB  0220               	subwf	MTOUCH_Button_Tick@i,w
  9967  15AC  1C03               	skipc
  9968  15AD  2DAF               	goto	u4981
  9969  15AE  2DB0               	goto	u4980
  9970  15AF                     u4981:
  9971  15AF  2D8C               	goto	l6751
  9972  15B0                     u4980:
  9973  15B0                     l472:
  9974  15B0  0008               	return
  9975  15B1                     __end_of_MTOUCH_Button_Tick:
  9976                           
  9977                           	psect	text38
  9978  1652                     __ptext38:	
  9979 ;; *************** function _Button_Tick_helper *****************
  9980 ;; Defined at:
  9981 ;;		line 353 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  button          2    2[COMMON] PTR struct .
  9984 ;;		 -> mtouch_button(144), 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      void 
  9989 ;; Registers used:
  9990 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;Total ram usage:        4 bytes
 10001 ;; Hardware stack levels used: 1
 10002 ;; Hardware stack levels required when called: 4
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_MTOUCH_Button_Tick
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           
 10011                           ;psect for function _Button_Tick_helper
 10012  1652                     _Button_Tick_helper:
 10013  1652                     l6675:	
 10014                           ;incstack = 0
 10015                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
 10016                           
 10017                           
 10018                           ;mcc_generated_files/mtouch/mtouch_button.c: 353: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 354: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 356:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
 10019  1652  0872               	movf	Button_Tick_helper@button,w
 10020  1653  0086               	movwf	6
 10021  1654  0873               	movf	Button_Tick_helper@button+1,w
 10022  1655  0087               	movwf	7
 10023  1656  3142               	addfsr 1,2
 10024  1657  3002               	movlw	2
 10025  1658  0601               	xorwf	1,w
 10026  1659  1D03               	btfss	3,2
 10027  165A  2E5C               	goto	u4901
 10028  165B  2E5D               	goto	u4900
 10029  165C                     u4901:
 10030  165C  2E7B               	goto	l477
 10031  165D                     u4900:
 10032  165D                     l6677:
 10033                           
 10034                           ;mcc_generated_files/mtouch/mtouch_button.c: 357:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 358:         (button->counter)++;
 10035  165D  0872               	movf	Button_Tick_helper@button,w
 10036  165E  0086               	movwf	6
 10037  165F  0873               	movf	Button_Tick_helper@button+1,w
 10038  1660  0087               	movwf	7
 10039  1661  314A               	addfsr 1,10
 10040  1662  3001               	movlw	1
 10041  1663  0781               	addwf	1,f
 10042  1664  3141               	addfsr 1,1
 10043  1665  1803               	skipnc
 10044  1666  0A81               	incf	1,f
 10045                           
 10046                           ;mcc_generated_files/mtouch/mtouch_button.c: 359:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
 10047  1667  0872               	movf	Button_Tick_helper@button,w
 10048  1668  0086               	movwf	6
 10049  1669  0873               	movf	Button_Tick_helper@button+1,w
 10050  166A  0087               	movwf	7
 10051  166B  314A               	addfsr 1,10
 10052  166C  0016               	moviw fsr1++
 10053  166D  0401               	iorwf	1,w
 10054  166E  1D03               	btfss	3,2
 10055  166F  2E71               	goto	u4911
 10056  1670  2E72               	goto	u4910
 10057  1671                     u4911:
 10058  1671  2E7B               	goto	l477
 10059  1672                     u4910:
 10060  1672                     l6679:
 10061                           
 10062                           ;mcc_generated_files/mtouch/mtouch_button.c: 360:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 361:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
 10063  1672  0872               	movf	Button_Tick_helper@button,w
 10064  1673  0086               	movwf	6
 10065  1674  0873               	movf	Button_Tick_helper@button+1,w
 10066  1675  0087               	movwf	7
 10067  1676  314A               	addfsr 1,10
 10068  1677  30FF               	movlw	255
 10069  1678  3FC0               	movwi [0]fsr1
 10070  1679  30FF               	movlw	255
 10071  167A  3FC1               	movwi [1]fsr1
 10072  167B                     l477:
 10073  167B  0008               	return
 10074  167C                     __end_of_Button_Tick_helper:
 10075                           
 10076                           	psect	text39
 10077  1151                     __ptext39:	
 10078 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
 10079 ;; Defined at:
 10080 ;;		line 194 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;		None
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;  sensor          1   24[BANK0 ] enum E2599
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      _Bool 
 10087 ;; Registers used:
 10088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;Total ram usage:        2 bytes
 10099 ;; Hardware stack levels used: 1
 10100 ;; Hardware stack levels required when called: 9
 10101 ;; This function calls:
 10102 ;;		_Sensor_Service
 10103 ;; This function is called by:
 10104 ;;		_MTOUCH_Service_Mainloop
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           
 10109                           ;psect for function _MTOUCH_Sensor_SampleAll
 10110  1151                     _MTOUCH_Sensor_SampleAll:
 10111  1151                     l6803:	
 10112                           ;incstack = 0
 10113                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10114                           
 10115                           
 10116                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 196:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 197:     for (sensor = 0; sensor < 9u; sensor
      +                          ++)
 10117  1151  0020               	movlb	0	; select bank0
 10118  1152  01B8               	clrf	MTOUCH_Sensor_SampleAll@sensor
 10119  1153                     l6809:
 10120                           
 10121                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 198:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 199:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
 10122  1153  0838               	movf	MTOUCH_Sensor_SampleAll@sensor,w
 10123  1154  318B  23E5  3191   	fcall	_Sensor_Service
 10124  1157  3A00               	xorlw	0
 10125  1158  1903               	skipnz
 10126  1159  295B               	goto	u5081
 10127  115A  295C               	goto	u5080
 10128  115B                     u5081:
 10129  115B  295E               	goto	l6815
 10130  115C                     u5080:
 10131  115C                     l6811:
 10132                           
 10133                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 200:             return 0;
 10134  115C  3000               	movlw	0
 10135  115D  296A               	goto	l125
 10136  115E                     l6815:
 10137                           
 10138                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 201:     }
 10139  115E  3001               	movlw	1
 10140  115F  0020               	movlb	0	; select bank0
 10141  1160  00B7               	movwf	??_MTOUCH_Sensor_SampleAll
 10142  1161  0837               	movf	??_MTOUCH_Sensor_SampleAll,w
 10143  1162  07B8               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
 10144  1163                     l6817:
 10145  1163  3009               	movlw	9
 10146  1164  0238               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
 10147  1165  1C03               	skipc
 10148  1166  2968               	goto	u5091
 10149  1167  2969               	goto	u5090
 10150  1168                     u5091:
 10151  1168  2953               	goto	l6809
 10152  1169                     u5090:
 10153  1169                     l6819:
 10154                           
 10155                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 202:     return 1;
 10156  1169  3001               	movlw	1
 10157  116A                     l125:
 10158  116A  0008               	return
 10159  116B                     __end_of_MTOUCH_Sensor_SampleAll:
 10160                           
 10161                           	psect	text40
 10162  0BE5                     __ptext40:	
 10163 ;; *************** function _Sensor_Service *****************
 10164 ;; Defined at:
 10165 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;  name            1    wreg     enum E2599
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  name            1   19[BANK0 ] enum E2599
 10170 ;;  sensor          2   21[BANK0 ] PTR struct .
 10171 ;;		 -> mtouch_sensor(81), 
 10172 ;;  error           1   20[BANK0 ] enum E2609
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      enum E2609
 10175 ;; Registers used:
 10176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;Total ram usage:        8 bytes
 10187 ;; Hardware stack levels used: 1
 10188 ;; Hardware stack levels required when called: 8
 10189 ;; This function calls:
 10190 ;;		_Sensor_Acquisition
 10191 ;;		_Sensor_DefaultCallback
 10192 ;;		_Sensor_RawSample_Update
 10193 ;;		_Sensor_isEnabled
 10194 ;;		_Sensor_setSampled
 10195 ;;		___wmul
 10196 ;; This function is called by:
 10197 ;;		_MTOUCH_Sensor_SampleAll
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           
 10202                           ;psect for function _Sensor_Service
 10203  0BE5                     _Sensor_Service:
 10204                           
 10205                           ;incstack = 0
 10206                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10207                           ;Sensor_Service@name stored from wreg
 10208  0BE5  0020               	movlb	0	; select bank0
 10209  0BE6  00B3               	movwf	Sensor_Service@name
 10210  0BE7                     l6693:
 10211                           
 10212                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 240: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 241:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 242:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
 10213  0BE7  0833               	movf	Sensor_Service@name,w
 10214  0BE8  00AF               	movwf	??_Sensor_Service
 10215  0BE9  01B0               	clrf	??_Sensor_Service+1
 10216  0BEA  082F               	movf	??_Sensor_Service,w
 10217  0BEB  00F2               	movwf	___wmul@multiplier
 10218  0BEC  0830               	movf	??_Sensor_Service+1,w
 10219  0BED  00F3               	movwf	___wmul@multiplier+1
 10220  0BEE  3009               	movlw	9
 10221  0BEF  00F4               	movwf	___wmul@multiplicand
 10222  0BF0  3000               	movlw	0
 10223  0BF1  00F5               	movwf	___wmul@multiplicand+1
 10224  0BF2  3192  2211  318B   	fcall	___wmul
 10225  0BF5  300F               	movlw	15
 10226  0BF6  0020               	movlb	0	; select bank0
 10227  0BF7  00B1               	movwf	??_Sensor_Service+2
 10228  0BF8  3023               	movlw	35
 10229  0BF9  00B2               	movwf	??_Sensor_Service+3
 10230  0BFA  0872               	movf	?___wmul,w
 10231  0BFB  0731               	addwf	??_Sensor_Service+2,w
 10232  0BFC  00B5               	movwf	Sensor_Service@sensor
 10233  0BFD  0873               	movf	?___wmul+1,w
 10234  0BFE  3D32               	addwfc	??_Sensor_Service+3,w
 10235  0BFF  00B6               	movwf	Sensor_Service@sensor+1
 10236  0C00                     l6695:
 10237                           
 10238                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 243:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
 10239  0C00  0836               	movf	Sensor_Service@sensor+1,w
 10240  0C01  00AC               	movwf	Sensor_Acquisition@sensor+1
 10241  0C02  0835               	movf	Sensor_Service@sensor,w
 10242  0C03  00AB               	movwf	Sensor_Acquisition@sensor
 10243  0C04  3187  279E  318B   	fcall	_Sensor_Acquisition
 10244  0C07  0020               	movlb	0	; select bank0
 10245  0C08  00AF               	movwf	??_Sensor_Service
 10246  0C09  082F               	movf	??_Sensor_Service,w
 10247  0C0A  00B4               	movwf	Sensor_Service@error
 10248                           
 10249                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 246:     switch(error)
 10250  0C0B  2C36               	goto	l6707
 10251  0C0C                     l6697:
 10252                           
 10253                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 249:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 250:             if(Sensor_isEnabled(sensor))
 10254  0C0C  0836               	movf	Sensor_Service@sensor+1,w
 10255  0C0D  00F3               	movwf	Sensor_isEnabled@sensor+1
 10256  0C0E  0835               	movf	Sensor_Service@sensor,w
 10257  0C0F  00F2               	movwf	Sensor_isEnabled@sensor
 10258  0C10  319F  272D  318B   	fcall	_Sensor_isEnabled
 10259  0C13  3A00               	xorlw	0
 10260  0C14  1903               	skipnz
 10261  0C15  2C17               	goto	u4931
 10262  0C16  2C18               	goto	u4930
 10263  0C17                     u4931:
 10264  0C17  2C53               	goto	l6709
 10265  0C18                     u4930:
 10266  0C18                     l6699:
 10267                           
 10268                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 251:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 256:                 if(!lowpowerActivated)
 10269  0C18  0020               	movlb	0	; select bank0
 10270  0C19  0865               	movf	_lowpowerActivated,w
 10271  0C1A  1D03               	btfss	3,2
 10272  0C1B  2C1D               	goto	u4941
 10273  0C1C  2C1E               	goto	u4940
 10274  0C1D                     u4941:
 10275  0C1D  2C25               	goto	l143
 10276  0C1E                     u4940:
 10277  0C1E                     l6701:
 10278                           
 10279                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 257:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 258:                     Sensor_RawSample_Update(sensor);
 10280  0C1E  0836               	movf	Sensor_Service@sensor+1,w
 10281  0C1F  00F3               	movwf	Sensor_RawSample_Update@sensor+1
 10282  0C20  0835               	movf	Sensor_Service@sensor,w
 10283  0C21  00F2               	movwf	Sensor_RawSample_Update@sensor
 10284  0C22  3191  21BA  318B   	fcall	_Sensor_RawSample_Update
 10285  0C25                     l143:	
 10286                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 259:                 }
 10287                           
 10288                           
 10289                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 260:                 Sensor_setSampled(sens
      +                          or);
 10290  0C25  0020               	movlb	0	; select bank0
 10291  0C26  0836               	movf	Sensor_Service@sensor+1,w
 10292  0C27  00F3               	movwf	Sensor_setSampled@sensor+1
 10293  0C28  0835               	movf	Sensor_Service@sensor,w
 10294  0C29  00F2               	movwf	Sensor_setSampled@sensor
 10295  0C2A  319E  26AE  318B   	fcall	_Sensor_setSampled
 10296  0C2D                     l6703:
 10297                           
 10298                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 261:                 callback_sampled(name)
      +                          ;
 10299  0C2D  0020               	movlb	0	; select bank0
 10300  0C2E  0833               	movf	Sensor_Service@name,w
 10301  0C2F  00AF               	movwf	??_Sensor_Service
 10302  0C30  082F               	movf	??_Sensor_Service,w
 10303  0C31  00F2               	movwf	Sensor_DefaultCallback@sensor
 10304  0C32  319E  265A  318B   	fcall	_Sensor_DefaultCallback
 10305  0C35  2C53               	goto	l6709
 10306  0C36                     l6707:
 10307  0C36  0834               	movf	Sensor_Service@error,w
 10308  0C37  00AF               	movwf	??_Sensor_Service
 10309  0C38  01B0               	clrf	??_Sensor_Service+1
 10310  0C39  1BAF               	btfsc	??_Sensor_Service,7
 10311  0C3A  03B0               	decf	??_Sensor_Service+1,f
 10312                           
 10313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10314                           ; Switch size 1, requested type "simple"
 10315                           ; Number of cases is 2, Range of values is 0 to 255
 10316                           ; switch strategies available:
 10317                           ; Name         Instructions Cycles
 10318                           ; simple_byte            7     4 (average)
 10319                           ; jumptable            260     6 (fixed)
 10320                           ;	Chosen strategy is simple_byte
 10321  0C3B  0830               	movf	??_Sensor_Service+1,w
 10322  0C3C  3A00               	xorlw	0	; case 0
 10323  0C3D  1903               	skipnz
 10324  0C3E  2C43               	goto	l8073
 10325  0C3F  3AFF               	xorlw	255	; case 255
 10326  0C40  1903               	skipnz
 10327  0C41  2C48               	goto	l8075
 10328  0C42  2C53               	goto	l6709
 10329  0C43                     l8073:
 10330                           
 10331                           ; Switch size 1, requested type "simple"
 10332                           ; Number of cases is 1, Range of values is 0 to 0
 10333                           ; switch strategies available:
 10334                           ; Name         Instructions Cycles
 10335                           ; simple_byte            4     3 (average)
 10336                           ; direct_byte            8     6 (fixed)
 10337                           ; jumptable            260     6 (fixed)
 10338                           ;	Chosen strategy is simple_byte
 10339  0C43  082F               	movf	??_Sensor_Service,w
 10340  0C44  3A00               	xorlw	0	; case 0
 10341  0C45  1903               	skipnz
 10342  0C46  2C0C               	goto	l6697
 10343  0C47  2C53               	goto	l6709
 10344  0C48                     l8075:
 10345                           
 10346                           ; Switch size 1, requested type "simple"
 10347                           ; Number of cases is 3, Range of values is 253 to 255
 10348                           ; switch strategies available:
 10349                           ; Name         Instructions Cycles
 10350                           ; simple_byte           10     6 (average)
 10351                           ; direct_byte           11     5 (fixed)
 10352                           ; jumptable            263     9 (fixed)
 10353                           ;	Chosen strategy is simple_byte
 10354  0C48  082F               	movf	??_Sensor_Service,w
 10355  0C49  3AFD               	xorlw	253	; case 253
 10356  0C4A  1903               	skipnz
 10357  0C4B  2C53               	goto	l6709
 10358  0C4C  3A03               	xorlw	3	; case 254
 10359  0C4D  1903               	skipnz
 10360  0C4E  2C53               	goto	l6709
 10361  0C4F  3A01               	xorlw	1	; case 255
 10362  0C50  1903               	skipnz
 10363  0C51  2C53               	goto	l6709
 10364  0C52  2C53               	goto	l6709
 10365  0C53                     l6709:
 10366                           
 10367                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 273:     return error;
 10368  0C53  0020               	movlb	0	; select bank0
 10369  0C54  0834               	movf	Sensor_Service@error,w
 10370  0C55                     l149:
 10371  0C55  0008               	return
 10372  0C56                     __end_of_Sensor_Service:
 10373                           
 10374                           	psect	text41
 10375  1EAE                     __ptext41:	
 10376 ;; *************** function _Sensor_setSampled *****************
 10377 ;; Defined at:
 10378 ;;		line 576 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  sensor          2    2[COMMON] PTR struct .
 10381 ;;		 -> mtouch_sensor(81), 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;		None
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  1    wreg      void 
 10386 ;; Registers used:
 10387 ;;		wreg, fsr1l, fsr1h
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;Total ram usage:        2 bytes
 10398 ;; Hardware stack levels used: 1
 10399 ;; Hardware stack levels required when called: 4
 10400 ;; This function calls:
 10401 ;;		Nothing
 10402 ;; This function is called by:
 10403 ;;		_Sensor_Service
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           
 10408                           ;psect for function _Sensor_setSampled
 10409  1EAE                     _Sensor_setSampled:
 10410  1EAE                     l6567:	
 10411                           ;incstack = 0
 10412                           ; Regs used in _Sensor_setSampled: [wregfsr1]
 10413                           
 10414                           
 10415                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 576: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 577
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 578:     sensor->sampled = 1;
 10416  1EAE  0872               	movf	Sensor_setSampled@sensor,w
 10417  1EAF  0086               	movwf	6
 10418  1EB0  0873               	movf	Sensor_setSampled@sensor+1,w
 10419  1EB1  0087               	movwf	7
 10420  1EB2  3148               	addfsr 1,8
 10421  1EB3  1481               	bsf	1,1
 10422  1EB4                     l259:
 10423  1EB4  0008               	return
 10424  1EB5                     __end_of_Sensor_setSampled:
 10425                           
 10426                           	psect	text42
 10427  11BA                     __ptext42:	
 10428 ;; *************** function _Sensor_RawSample_Update *****************
 10429 ;; Defined at:
 10430 ;;		line 437 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;  sensor          2    2[COMMON] PTR struct .
 10433 ;;		 -> mtouch_sensor(81), 
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;		None
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, fsr1l, fsr1h
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;Total ram usage:        2 bytes
 10450 ;; Hardware stack levels used: 1
 10451 ;; Hardware stack levels required when called: 4
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_Sensor_Service
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           
 10460                           ;psect for function _Sensor_RawSample_Update
 10461  11BA                     _Sensor_RawSample_Update:
 10462  11BA                     l6557:	
 10463                           ;incstack = 0
 10464                           ; Regs used in _Sensor_RawSample_Update: [wregfsr1]
 10465                           
 10466  11BA  1F8B               	btfss	11,7	;volatile
 10467  11BB  29BD               	goto	u4731
 10468  11BC  29BE               	goto	u4730
 10469  11BD                     u4731:
 10470  11BD  29CB               	goto	l6565
 10471  11BE                     u4730:
 10472  11BE                     l6559:
 10473  11BE  138B               	bcf	11,7	;volatile
 10474  11BF                     l6561:
 10475  11BF  0872               	movf	Sensor_RawSample_Update@sensor,w
 10476  11C0  0086               	movwf	6
 10477  11C1  0873               	movf	Sensor_RawSample_Update@sensor+1,w
 10478  11C2  0087               	movwf	7
 10479  11C3  3146               	addfsr 1,6
 10480  11C4  0021               	movlb	1	; select bank1
 10481  11C5  0832               	movf	_packet_sample^(0+128),w
 10482  11C6  3FC0               	movwi [0]fsr1
 10483  11C7  0833               	movf	(_packet_sample+1)^(0+128),w
 10484  11C8  3FC1               	movwi [1]fsr1
 10485  11C9                     l6563:
 10486  11C9  178B               	bsf	11,7	;volatile
 10487  11CA  29D5               	goto	l200
 10488  11CB                     l6565:
 10489  11CB  0872               	movf	Sensor_RawSample_Update@sensor,w
 10490  11CC  0086               	movwf	6
 10491  11CD  0873               	movf	Sensor_RawSample_Update@sensor+1,w
 10492  11CE  0087               	movwf	7
 10493  11CF  3146               	addfsr 1,6
 10494  11D0  0021               	movlb	1	; select bank1
 10495  11D1  0832               	movf	_packet_sample^(0+128),w
 10496  11D2  3FC0               	movwi [0]fsr1
 10497  11D3  0833               	movf	(_packet_sample+1)^(0+128),w
 10498  11D4  3FC1               	movwi [1]fsr1
 10499  11D5                     l200:
 10500  11D5  0008               	return
 10501  11D6                     __end_of_Sensor_RawSample_Update:
 10502                           
 10503                           	psect	text43
 10504  1E5A                     __ptext43:	
 10505 ;; *************** function _Sensor_DefaultCallback *****************
 10506 ;; Defined at:
 10507 ;;		line 457 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  sensor          1    2[COMMON] enum E2599
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;		None
 10512 ;; Return value:  Size  Location     Type
 10513 ;;                  1    wreg      void 
 10514 ;; Registers used:
 10515 ;;		None
 10516 ;; Tracked objects:
 10517 ;;		On entry : 0/0
 10518 ;;		On exit  : 0/0
 10519 ;;		Unchanged: 0/0
 10520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10521 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10525 ;;Total ram usage:        1 bytes
 10526 ;; Hardware stack levels used: 1
 10527 ;; Hardware stack levels required when called: 4
 10528 ;; This function calls:
 10529 ;;		Nothing
 10530 ;; This function is called by:
 10531 ;;		_Sensor_Service
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           
 10536                           ;psect for function _Sensor_DefaultCallback
 10537  1E5A                     _Sensor_DefaultCallback:
 10538  1E5A                     l203:	
 10539                           ;incstack = 0
 10540                           ; Regs used in _Sensor_DefaultCallback: []
 10541                           
 10542  1E5A  0008               	return
 10543  1E5B                     __end_of_Sensor_DefaultCallback:
 10544                           
 10545                           	psect	text44
 10546  079E                     __ptext44:	
 10547 ;; *************** function _Sensor_Acquisition *****************
 10548 ;; Defined at:
 10549 ;;		line 287 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;  sensor          2   11[BANK0 ] PTR struct .
 10552 ;;		 -> mtouch_sensor(81), 
 10553 ;; Auto vars:     Size  Location     Type
 10554 ;;  retry           1   14[BANK0 ] unsigned char 
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  1    wreg      enum E2609
 10557 ;; Registers used:
 10558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 0/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10564 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10567 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10568 ;;Total ram usage:        4 bytes
 10569 ;; Hardware stack levels used: 1
 10570 ;; Hardware stack levels required when called: 7
 10571 ;; This function calls:
 10572 ;;		_Sensor_Acq_ExecutePacket
 10573 ;;		_Sensor_isEnabled
 10574 ;;		_Sensor_setActive
 10575 ;;		_Sensor_setInactive
 10576 ;;		_abs
 10577 ;; This function is called by:
 10578 ;;		_Sensor_Service
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           
 10583                           ;psect for function _Sensor_Acquisition
 10584  079E                     _Sensor_Acquisition:
 10585  079E                     l6531:	
 10586                           ;incstack = 0
 10587                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10588                           
 10589                           
 10590                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 287: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 288: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 290:     uint8_t retry = (uint8_t)5u;
 10591  079E  3005               	movlw	5
 10592  079F  0020               	movlb	0	; select bank0
 10593  07A0  00AD               	movwf	??_Sensor_Acquisition
 10594  07A1  082D               	movf	??_Sensor_Acquisition,w
 10595  07A2  00AE               	movwf	Sensor_Acquisition@retry
 10596  07A3                     l6533:
 10597                           
 10598                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 292:     if(!Sensor_isEnabled(sensor))
 10599  07A3  082C               	movf	Sensor_Acquisition@sensor+1,w
 10600  07A4  00F3               	movwf	Sensor_isEnabled@sensor+1
 10601  07A5  082B               	movf	Sensor_Acquisition@sensor,w
 10602  07A6  00F2               	movwf	Sensor_isEnabled@sensor
 10603  07A7  319F  272D  3187   	fcall	_Sensor_isEnabled
 10604  07AA  3A00               	xorlw	0
 10605  07AB  1D03               	skipz
 10606  07AC  2FAE               	goto	u4691
 10607  07AD  2FAF               	goto	u4690
 10608  07AE                     u4691:
 10609  07AE  2FBB               	goto	l6545
 10610  07AF                     u4690:
 10611  07AF                     l6535:
 10612                           
 10613                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
 10614  07AF  3000               	movlw	0
 10615  07B0  2FF3               	goto	l157
 10616  07B1                     l6539:
 10617                           
 10618                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 296:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 297:         retry--;
 10619  07B1  3001               	movlw	1
 10620  07B2  0020               	movlb	0	; select bank0
 10621  07B3  02AE               	subwf	Sensor_Acquisition@retry,f
 10622                           
 10623                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 298:         if(retry == 0)
 10624  07B4  082E               	movf	Sensor_Acquisition@retry,w
 10625  07B5  1D03               	btfss	3,2
 10626  07B6  2FB8               	goto	u4701
 10627  07B7  2FB9               	goto	u4700
 10628  07B8                     u4701:
 10629  07B8  2FBB               	goto	l6545
 10630  07B9                     u4700:
 10631  07B9                     l6541:
 10632                           
 10633                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 299:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 300:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
 10634  07B9  30FC               	movlw	252
 10635  07BA  2FF3               	goto	l157
 10636  07BB                     l6545:
 10637                           
 10638                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 295:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
 10639  07BB  0020               	movlb	0	; select bank0
 10640  07BC  082C               	movf	Sensor_Acquisition@sensor+1,w
 10641  07BD  00A5               	movwf	Sensor_Acq_ExecutePacket@sensor+1
 10642  07BE  082B               	movf	Sensor_Acquisition@sensor,w
 10643  07BF  00A4               	movwf	Sensor_Acq_ExecutePacket@sensor
 10644  07C0  3189  21C4  3187   	fcall	_Sensor_Acq_ExecutePacket
 10645  07C3  3A00               	xorlw	0
 10646  07C4  1D03               	skipz
 10647  07C5  2FC7               	goto	u4711
 10648  07C6  2FC8               	goto	u4710
 10649  07C7                     u4711:
 10650  07C7  2FB1               	goto	l6539
 10651  07C8                     u4710:
 10652  07C8                     l6547:
 10653                           
 10654                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 304:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
 10655  07C8  0020               	movlb	0	; select bank0
 10656  07C9  082B               	movf	Sensor_Acquisition@sensor,w
 10657  07CA  0086               	movwf	6
 10658  07CB  082C               	movf	Sensor_Acquisition@sensor+1,w
 10659  07CC  0087               	movwf	7
 10660  07CD  3146               	addfsr 1,6
 10661  07CE  3F40               	moviw [0]fsr1
 10662  07CF  0021               	movlb	1	; select bank1
 10663  07D0  0232               	subwf	_packet_sample^(0+128),w
 10664  07D1  00F2               	movwf	abs@a
 10665  07D2  3F41               	moviw [1]fsr1
 10666  07D3  3B33               	subwfb	(_packet_sample+1)^(0+128),w
 10667  07D4  00F3               	movwf	abs@a+1
 10668  07D5  3191  2137  3187   	fcall	_abs
 10669  07D8  3000               	movlw	0
 10670  07D9  0273               	subwf	?_abs+1,w
 10671  07DA  3065               	movlw	101
 10672  07DB  1903               	skipnz
 10673  07DC  0272               	subwf	?_abs,w
 10674  07DD  1C03               	skipc
 10675  07DE  2FE0               	goto	u4721
 10676  07DF  2FE1               	goto	u4720
 10677  07E0                     u4721:
 10678  07E0  2FEA               	goto	l6551
 10679  07E1                     u4720:
 10680  07E1                     l6549:
 10681                           
 10682                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 305:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 306:         Sensor_setActive(sensor);
 10683  07E1  0020               	movlb	0	; select bank0
 10684  07E2  082C               	movf	Sensor_Acquisition@sensor+1,w
 10685  07E3  00F3               	movwf	Sensor_setActive@sensor+1
 10686  07E4  082B               	movf	Sensor_Acquisition@sensor,w
 10687  07E5  00F2               	movwf	Sensor_setActive@sensor
 10688  07E6  319E  26A0  3187   	fcall	_Sensor_setActive
 10689                           
 10690                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 307:     }
 10691  07E9  2FAF               	goto	l6535
 10692  07EA                     l6551:
 10693                           
 10694                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 309:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 310:         Sensor_setInactive(sensor);
 10695  07EA  0020               	movlb	0	; select bank0
 10696  07EB  082C               	movf	Sensor_Acquisition@sensor+1,w
 10697  07EC  00F3               	movwf	Sensor_setInactive@sensor+1
 10698  07ED  082B               	movf	Sensor_Acquisition@sensor,w
 10699  07EE  00F2               	movwf	Sensor_setInactive@sensor
 10700  07EF  319E  26A7  3187   	fcall	_Sensor_setInactive
 10701  07F2  2FAF               	goto	l6535
 10702  07F3                     l157:
 10703  07F3  0008               	return
 10704  07F4                     __end_of_Sensor_Acquisition:
 10705                           
 10706                           	psect	text45
 10707  1137                     __ptext45:	
 10708 ;; *************** function _abs *****************
 10709 ;; Defined at:
 10710 ;;		line 1 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;  a               2    2[COMMON] int 
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;		None
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  2    2[COMMON] int 
 10717 ;; Registers used:
 10718 ;;		wreg, status,2, status,0
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;Total ram usage:        4 bytes
 10729 ;; Hardware stack levels used: 1
 10730 ;; Hardware stack levels required when called: 4
 10731 ;; This function calls:
 10732 ;;		Nothing
 10733 ;; This function is called by:
 10734 ;;		_Sensor_Acquisition
 10735 ;; This function uses a non-reentrant model
 10736 ;;
 10737                           
 10738                           
 10739                           ;psect for function _abs
 10740  1137                     _abs:
 10741  1137                     l6481:	
 10742                           ;incstack = 0
 10743                           ; Regs used in _abs: [wreg+status,2+status,0]
 10744                           
 10745  1137  0873               	movf	abs@a+1,w
 10746  1138  3A80               	xorlw	128
 10747  1139  00F4               	movwf	??_abs
 10748  113A  3080               	movlw	128
 10749  113B  0274               	subwf	??_abs,w
 10750  113C  1D03               	skipz
 10751  113D  2940               	goto	u4635
 10752  113E  3001               	movlw	1
 10753  113F  0272               	subwf	abs@a,w
 10754  1140                     u4635:
 10755  1140  1803               	skipnc
 10756  1141  2943               	goto	u4631
 10757  1142  2944               	goto	u4630
 10758  1143                     u4631:
 10759  1143  2950               	goto	l1930
 10760  1144                     u4630:
 10761  1144                     l6483:
 10762  1144  0972               	comf	abs@a,w
 10763  1145  00F4               	movwf	??_abs
 10764  1146  0973               	comf	abs@a+1,w
 10765  1147  00F5               	movwf	??_abs+1
 10766  1148  0AF4               	incf	??_abs,f
 10767  1149  1903               	skipnz
 10768  114A  0AF5               	incf	??_abs+1,f
 10769  114B  0874               	movf	??_abs,w
 10770  114C  00F2               	movwf	?_abs
 10771  114D  0875               	movf	??_abs+1,w
 10772  114E  00F3               	movwf	?_abs+1
 10773  114F  2950               	goto	l1933
 10774  1150                     l1930:
 10775  1150                     l1933:
 10776  1150  0008               	return
 10777  1151                     __end_of_abs:
 10778                           
 10779                           	psect	text46
 10780  1EA7                     __ptext46:	
 10781 ;; *************** function _Sensor_setInactive *****************
 10782 ;; Defined at:
 10783 ;;		line 522 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  sensor          2    2[COMMON] PTR struct .
 10786 ;;		 -> mtouch_sensor(81), 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		wreg, fsr1l, fsr1h
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;Total ram usage:        2 bytes
 10803 ;; Hardware stack levels used: 1
 10804 ;; Hardware stack levels required when called: 4
 10805 ;; This function calls:
 10806 ;;		Nothing
 10807 ;; This function is called by:
 10808 ;;		_Sensor_Acquisition
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           
 10813                           ;psect for function _Sensor_setInactive
 10814  1EA7                     _Sensor_setInactive:
 10815  1EA7                     l6487:	
 10816                           ;incstack = 0
 10817                           ; Regs used in _Sensor_setInactive: [wregfsr1]
 10818                           
 10819                           
 10820                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 522: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 52
      +                          3: {;mcc_generated_files/mtouch/mtouch_sensor.c: 524:     sensor->active = 0;
 10821  1EA7  0872               	movf	Sensor_setInactive@sensor,w
 10822  1EA8  0086               	movwf	6
 10823  1EA9  0873               	movf	Sensor_setInactive@sensor+1,w
 10824  1EAA  0087               	movwf	7
 10825  1EAB  3148               	addfsr 1,8
 10826  1EAC  1101               	bcf	1,2
 10827  1EAD                     l233:
 10828  1EAD  0008               	return
 10829  1EAE                     __end_of_Sensor_setInactive:
 10830                           
 10831                           	psect	text47
 10832  1EA0                     __ptext47:	
 10833 ;; *************** function _Sensor_setActive *****************
 10834 ;; Defined at:
 10835 ;;		line 517 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;  sensor          2    2[COMMON] PTR struct .
 10838 ;;		 -> mtouch_sensor(81), 
 10839 ;; Auto vars:     Size  Location     Type
 10840 ;;		None
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  1    wreg      void 
 10843 ;; Registers used:
 10844 ;;		wreg, fsr1l, fsr1h
 10845 ;; Tracked objects:
 10846 ;;		On entry : 0/0
 10847 ;;		On exit  : 0/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;Total ram usage:        2 bytes
 10855 ;; Hardware stack levels used: 1
 10856 ;; Hardware stack levels required when called: 4
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		_Sensor_Acquisition
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           
 10865                           ;psect for function _Sensor_setActive
 10866  1EA0                     _Sensor_setActive:
 10867  1EA0                     l6485:	
 10868                           ;incstack = 0
 10869                           ; Regs used in _Sensor_setActive: [wregfsr1]
 10870                           
 10871                           
 10872                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 517: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 518:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 519:     sensor->active = 1;
 10873  1EA0  0872               	movf	Sensor_setActive@sensor,w
 10874  1EA1  0086               	movwf	6
 10875  1EA2  0873               	movf	Sensor_setActive@sensor+1,w
 10876  1EA3  0087               	movwf	7
 10877  1EA4  3148               	addfsr 1,8
 10878  1EA5  1501               	bsf	1,2
 10879  1EA6                     l230:
 10880  1EA6  0008               	return
 10881  1EA7                     __end_of_Sensor_setActive:
 10882                           
 10883                           	psect	text48
 10884  1F2D                     __ptext48:	
 10885 ;; *************** function _Sensor_isEnabled *****************
 10886 ;; Defined at:
 10887 ;;		line 502 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;  sensor          2    2[COMMON] PTR struct .
 10890 ;;		 -> mtouch_sensor(81), 
 10891 ;; Auto vars:     Size  Location     Type
 10892 ;;		None
 10893 ;; Return value:  Size  Location     Type
 10894 ;;                  1    wreg      _Bool 
 10895 ;; Registers used:
 10896 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10897 ;; Tracked objects:
 10898 ;;		On entry : 0/0
 10899 ;;		On exit  : 0/0
 10900 ;;		Unchanged: 0/0
 10901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10906 ;;Total ram usage:        2 bytes
 10907 ;; Hardware stack levels used: 1
 10908 ;; Hardware stack levels required when called: 4
 10909 ;; This function calls:
 10910 ;;		Nothing
 10911 ;; This function is called by:
 10912 ;;		_Sensor_Service
 10913 ;;		_Sensor_Acquisition
 10914 ;; This function uses a non-reentrant model
 10915 ;;
 10916                           
 10917                           
 10918                           ;psect for function _Sensor_isEnabled
 10919  1F2D                     _Sensor_isEnabled:
 10920  1F2D                     l6431:	
 10921                           ;incstack = 0
 10922                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
 10923                           
 10924                           
 10925                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 502: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 503: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 504:     if(sensor!=((void*)0))
 10926  1F2D  0872               	movf	Sensor_isEnabled@sensor,w
 10927  1F2E  0473               	iorwf	Sensor_isEnabled@sensor+1,w
 10928  1F2F  1903               	btfsc	3,2
 10929  1F30  2F32               	goto	u4591
 10930  1F31  2F33               	goto	u4590
 10931  1F32                     u4591:
 10932  1F32  2F3B               	goto	l6439
 10933  1F33                     u4590:
 10934  1F33                     l6433:
 10935                           
 10936                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 505:         return (_Bool)sensor->enabled;
 10937  1F33  0872               	movf	Sensor_isEnabled@sensor,w
 10938  1F34  0086               	movwf	6
 10939  1F35  0873               	movf	Sensor_isEnabled@sensor+1,w
 10940  1F36  0087               	movwf	7
 10941  1F37  3148               	addfsr 1,8
 10942  1F38  0801               	movf	1,w
 10943  1F39  3901               	andlw	1
 10944  1F3A  2F3C               	goto	l226
 10945  1F3B                     l6439:
 10946                           
 10947                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 507:         return 0;
 10948  1F3B  3000               	movlw	0
 10949  1F3C                     l226:
 10950  1F3C  0008               	return
 10951  1F3D                     __end_of_Sensor_isEnabled:
 10952                           
 10953                           	psect	text49
 10954  09C4                     __ptext49:	
 10955 ;; *************** function _Sensor_Acq_ExecutePacket *****************
 10956 ;; Defined at:
 10957 ;;		line 322 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;  sensor          2    4[BANK0 ] PTR struct .
 10960 ;;		 -> mtouch_sensor(81), 
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;  error           1   10[BANK0 ] enum E2609
 10963 ;;  GIE_state       1    9[BANK0 ] unsigned char 
 10964 ;;  ADCON1_temp     1    8[BANK0 ] unsigned char 
 10965 ;;  ADCON0_temp     1    7[BANK0 ] unsigned char 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  1    wreg      enum E2609
 10968 ;; Registers used:
 10969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10976 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10978 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;Total ram usage:        7 bytes
 10980 ;; Hardware stack levels used: 1
 10981 ;; Hardware stack levels required when called: 6
 10982 ;; This function calls:
 10983 ;;		_MTOUCH_Delay
 10984 ;;		_MTOUCH_Random
 10985 ;;		_MTOUCH_Sensor_Scan_Initialize
 10986 ;;		_Sensor_Acq_ExecuteScan
 10987 ;;		_Sensor_setScanFunction
 10988 ;; This function is called by:
 10989 ;;		_Sensor_Acquisition
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993                           
 10994                           ;psect for function _Sensor_Acq_ExecutePacket
 10995  09C4                     _Sensor_Acq_ExecutePacket:
 10996  09C4                     l6443:	
 10997                           ;incstack = 0
 10998                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10999                           
 11000                           
 11001                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 322: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          323: {;mcc_generated_files/mtouch/mtouch_sensor.c: 325:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
 11002  09C4  0020               	movlb	0	; select bank0
 11003  09C5  01AA               	clrf	Sensor_Acq_ExecutePacket@error
 11004  09C6                     l6445:
 11005                           
 11006                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 326:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 327:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 329:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           331:     ADCON0_temp = ADCON0;
 11007  09C6  0021               	movlb	1	; select bank1
 11008  09C7  081D               	movf	29,w	;volatile
 11009  09C8  0020               	movlb	0	; select bank0
 11010  09C9  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 11011  09CA  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 11012  09CB  00A7               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
 11013  09CC                     l6447:
 11014                           
 11015                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 332:     ADCON1_temp = ADCON1;
 11016  09CC  0021               	movlb	1	; select bank1
 11017  09CD  081E               	movf	30,w	;volatile
 11018  09CE  0020               	movlb	0	; select bank0
 11019  09CF  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 11020  09D0  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 11021  09D1  00A8               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
 11022  09D2                     l6449:
 11023                           
 11024                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 333:     MTOUCH_Sensor_Scan_Initialize();
 11025  09D2  319E  2670  3189   	fcall	_MTOUCH_Sensor_Scan_Initialize
 11026  09D5                     l6451:
 11027                           
 11028                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 335:     GIE_state = INTCONbits.GIE;
 11029  09D5  3000               	movlw	0
 11030  09D6  1B8B               	btfsc	11,7	;volatile
 11031  09D7  3001               	movlw	1
 11032  09D8  0020               	movlb	0	; select bank0
 11033  09D9  00A9               	movwf	Sensor_Acq_ExecutePacket@GIE_state
 11034  09DA                     l6453:
 11035                           
 11036                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 337:     Sensor_setScanFunction(sensor);
 11037  09DA  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 11038  09DB  00F3               	movwf	Sensor_setScanFunction@sensor+1
 11039  09DC  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 11040  09DD  00F2               	movwf	Sensor_setScanFunction@sensor
 11041  09DE  319F  27EC  3189   	fcall	_Sensor_setScanFunction
 11042                           
 11043                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 339:     currentScannSensor = sensor->senso
      +                          r_name;
 11044  09E1  0020               	movlb	0	; select bank0
 11045  09E2  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 11046  09E3  0086               	movwf	6
 11047  09E4  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 11048  09E5  0087               	movwf	7
 11049  09E6  0801               	movf	1,w
 11050  09E7  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 11051  09E8  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 11052  09E9  00E8               	movwf	_currentScannSensor
 11053                           
 11054                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 340:     packet_counter = sensor->oversampl
      +                          ing;
 11055  09EA  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 11056  09EB  0086               	movwf	6
 11057  09EC  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 11058  09ED  0087               	movwf	7
 11059  09EE  3145               	addfsr 1,5
 11060  09EF  0801               	movf	1,w
 11061  09F0  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 11062  09F1  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 11063  09F2  00E7               	movwf	_packet_counter
 11064  09F3                     l6455:
 11065                           
 11066                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 341:     packet_sample = 0;
 11067  09F3  0021               	movlb	1	; select bank1
 11068  09F4  01B2               	clrf	_packet_sample^(0+128)
 11069  09F5  01B3               	clrf	(_packet_sample+1)^(0+128)
 11070  09F6                     l6457:
 11071                           
 11072                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 342:     sensor_globalFlags.packet_done = 0
      +                          ;
 11073  09F6  0020               	movlb	0	; select bank0
 11074  09F7  1069               	bcf	_sensor_globalFlags,0	;volatile
 11075  09F8                     l6459:
 11076                           
 11077                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     sample_delay = MTOUCH_Random();
 11078  09F8  3190  2097  3189   	fcall	_MTOUCH_Random
 11079  09FB  0020               	movlb	0	; select bank0
 11080  09FC  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 11081  09FD  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 11082  09FE  00E6               	movwf	_sample_delay
 11083  09FF                     l6461:
 11084                           
 11085                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 344:     packet_sample = 0;
 11086  09FF  0021               	movlb	1	; select bank1
 11087  0A00  01B2               	clrf	_packet_sample^(0+128)
 11088  0A01  01B3               	clrf	(_packet_sample+1)^(0+128)
 11089  0A02                     l6463:
 11090                           
 11091                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 346:     sensor_globalFlags.interrupted = 0
      +                          ;
 11092  0A02  0020               	movlb	0	; select bank0
 11093  0A03  10E9               	bcf	_sensor_globalFlags,1	;volatile
 11094  0A04                     l6465:
 11095                           
 11096                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 350:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 351:         INTCONbits.GIE = (uint8_t)0;
 11097  0A04  138B               	bcf	11,7	;volatile
 11098  0A05                     l6467:
 11099                           
 11100                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 352:         Sensor_Acq_ExecuteScan();
 11101  0A05  318B  2305  3189   	fcall	_Sensor_Acq_ExecuteScan
 11102  0A08                     l6469:
 11103                           
 11104                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:         INTCONbits.GIE = GIE_state;
 11105  0A08  0020               	movlb	0	; select bank0
 11106  0A09  0C29               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
 11107  0A0A  1C03               	skipc
 11108  0A0B  138B               	bcf	11,7	;volatile
 11109  0A0C  1803               	skipnc
 11110  0A0D  178B               	bsf	11,7	;volatile
 11111  0A0E                     l6471:
 11112                           
 11113                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 354:         MTOUCH_Delay();
 11114  0A0E  319F  27C5  3189   	fcall	_MTOUCH_Delay
 11115  0A11                     l167:	
 11116                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:         while(ADCON0bits.GO_nDONE == 1
      +                          );
 11117                           
 11118  0A11  0021               	movlb	1	; select bank1
 11119  0A12  189D               	btfsc	29,1	;volatile
 11120  0A13  2A15               	goto	u4601
 11121  0A14  2A16               	goto	u4600
 11122  0A15                     u4601:
 11123  0A15  2A11               	goto	l167
 11124  0A16                     u4600:
 11125  0A16                     l169:
 11126                           
 11127                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:     } while(sensor_globalFlags.packet_
      +                          done == 0);
 11128  0A16  0020               	movlb	0	; select bank0
 11129  0A17  1C69               	btfss	_sensor_globalFlags,0	;volatile
 11130  0A18  2A1A               	goto	u4611
 11131  0A19  2A1B               	goto	u4610
 11132  0A1A                     u4611:
 11133  0A1A  2A04               	goto	l6465
 11134  0A1B                     u4610:
 11135  0A1B                     l6473:
 11136                           
 11137                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 359:     ADCON0 = ADCON0_temp;
 11138  0A1B  0827               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
 11139  0A1C  0021               	movlb	1	; select bank1
 11140  0A1D  009D               	movwf	29	;volatile
 11141                           
 11142                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:     ADCON1 = ADCON1_temp;
 11143  0A1E  0020               	movlb	0	; select bank0
 11144  0A1F  0828               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
 11145  0A20  0021               	movlb	1	; select bank1
 11146  0A21  009E               	movwf	30	;volatile
 11147  0A22                     l6475:
 11148                           
 11149                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 362:     if(sensor_globalFlags.interrupted)
 11150  0A22  0020               	movlb	0	; select bank0
 11151  0A23  1CE9               	btfss	_sensor_globalFlags,1	;volatile
 11152  0A24  2A26               	goto	u4621
 11153  0A25  2A27               	goto	u4620
 11154  0A26                     u4621:
 11155  0A26  2A2B               	goto	l171
 11156  0A27                     u4620:
 11157  0A27                     l6477:
 11158                           
 11159                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 363:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 364:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
 11160  0A27  30FA               	movlw	250
 11161  0A28  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 11162  0A29  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 11163  0A2A  00AA               	movwf	Sensor_Acq_ExecutePacket@error
 11164  0A2B                     l171:	
 11165                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:     }
 11166                           
 11167                           
 11168                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 367:     return error;
 11169  0A2B  082A               	movf	Sensor_Acq_ExecutePacket@error,w
 11170  0A2C                     l172:
 11171  0A2C  0008               	return
 11172  0A2D                     __end_of_Sensor_Acq_ExecutePacket:
 11173                           
 11174                           	psect	text50
 11175  1FEC                     __ptext50:	
 11176 ;; *************** function _Sensor_setScanFunction *****************
 11177 ;; Defined at:
 11178 ;;		line 469 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  sensor          2    2[COMMON] PTR struct .
 11181 ;;		 -> mtouch_sensor(81), 
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;		None
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  1    wreg      void 
 11186 ;; Registers used:
 11187 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;Total ram usage:        2 bytes
 11198 ;; Hardware stack levels used: 1
 11199 ;; Hardware stack levels required when called: 4
 11200 ;; This function calls:
 11201 ;;		Nothing
 11202 ;; This function is called by:
 11203 ;;		_Sensor_Acq_ExecutePacket
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           
 11208                           ;psect for function _Sensor_setScanFunction
 11209  1FEC                     _Sensor_setScanFunction:
 11210  1FEC                     l6355:	
 11211                           ;incstack = 0
 11212                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
 11213                           
 11214  1FEC  0872               	movf	Sensor_setScanFunction@sensor,w
 11215  1FED  0086               	movwf	6
 11216  1FEE  0873               	movf	Sensor_setScanFunction@sensor+1,w
 11217  1FEF  0087               	movwf	7
 11218  1FF0  3141               	addfsr 1,1
 11219  1FF1  3F40               	moviw [0]fsr1
 11220  1FF2  0021               	movlb	1	; select bank1
 11221  1FF3  00C3               	movwf	_Sensor_scanA^(0+128)
 11222  1FF4  3F41               	moviw [1]fsr1
 11223  1FF5  00C4               	movwf	(_Sensor_scanA+1)^(0+128)
 11224  1FF6  0872               	movf	Sensor_setScanFunction@sensor,w
 11225  1FF7  0086               	movwf	6
 11226  1FF8  0873               	movf	Sensor_setScanFunction@sensor+1,w
 11227  1FF9  0087               	movwf	7
 11228  1FFA  3143               	addfsr 1,3
 11229  1FFB  3F40               	moviw [0]fsr1
 11230  1FFC  00C1               	movwf	_Sensor_scanB^(0+128)
 11231  1FFD  3F41               	moviw [1]fsr1
 11232  1FFE  00C2               	movwf	(_Sensor_scanB+1)^(0+128)
 11233  1FFF                     l209:
 11234  1FFF  0008               	return
 11235  2000                     __end_of_Sensor_setScanFunction:
 11236                           
 11237                           	psect	text51
 11238  0B05                     __ptext51:	
 11239 ;; *************** function _Sensor_Acq_ExecuteScan *****************
 11240 ;; Defined at:
 11241 ;;		line 386 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;		None
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;  result          2    8[COMMON] unsigned short 
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  1    wreg      void 
 11248 ;; Registers used:
 11249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;Total ram usage:        6 bytes
 11260 ;; Hardware stack levels used: 1
 11261 ;; Hardware stack levels required when called: 5
 11262 ;; This function calls:
 11263 ;;		_MTOUCH_CVD_ScanA_0
 11264 ;;		_MTOUCH_CVD_ScanA_1
 11265 ;;		_MTOUCH_CVD_ScanA_2
 11266 ;;		_MTOUCH_CVD_ScanA_3
 11267 ;;		_MTOUCH_CVD_ScanA_4
 11268 ;;		_MTOUCH_CVD_ScanA_5
 11269 ;;		_MTOUCH_CVD_ScanA_6
 11270 ;;		_MTOUCH_CVD_ScanA_7
 11271 ;;		_MTOUCH_CVD_ScanA_8
 11272 ;;		_MTOUCH_CVD_ScanB_0
 11273 ;;		_MTOUCH_CVD_ScanB_1
 11274 ;;		_MTOUCH_CVD_ScanB_2
 11275 ;;		_MTOUCH_CVD_ScanB_3
 11276 ;;		_MTOUCH_CVD_ScanB_4
 11277 ;;		_MTOUCH_CVD_ScanB_5
 11278 ;;		_MTOUCH_CVD_ScanB_6
 11279 ;;		_MTOUCH_CVD_ScanB_7
 11280 ;;		_MTOUCH_CVD_ScanB_8
 11281 ;;		___wmul
 11282 ;; This function is called by:
 11283 ;;		_Sensor_Acq_ExecutePacket
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           
 11288                           ;psect for function _Sensor_Acq_ExecuteScan
 11289  0B05                     _Sensor_Acq_ExecuteScan:
 11290  0B05                     l6369:	
 11291                           ;incstack = 0
 11292                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11293                           
 11294                           
 11295                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 389:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
 11296  0B05  0021               	movlb	1	; select bank1
 11297  0B06  081C               	movf	28,w	;volatile
 11298  0B07  00F9               	movwf	Sensor_Acq_ExecuteScan@result+1
 11299  0B08  081B               	movf	27,w	;volatile
 11300  0B09  00F8               	movwf	Sensor_Acq_ExecuteScan@result
 11301  0B0A                     l6371:
 11302                           
 11303                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 391:     if(sensor_globalFlags.packet_done)
 11304  0B0A  0020               	movlb	0	; select bank0
 11305  0B0B  1C69               	btfss	_sensor_globalFlags,0	;volatile
 11306  0B0C  2B0E               	goto	u4511
 11307  0B0D  2B0F               	goto	u4510
 11308  0B0E                     u4511:
 11309  0B0E  2B10               	goto	l6375
 11310  0B0F                     u4510:
 11311  0B0F  2B73               	goto	l181
 11312  0B10                     l6375:
 11313                           
 11314                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 394:     if (packet_counter != (uint8_t)0)
 11315  0B10  0867               	movf	_packet_counter,w
 11316  0B11  1903               	btfsc	3,2
 11317  0B12  2B14               	goto	u4521
 11318  0B13  2B15               	goto	u4520
 11319  0B14                     u4521:
 11320  0B14  2B6C               	goto	l6397
 11321  0B15                     u4520:
 11322  0B15  2B24               	goto	l6385
 11323  0B16                     l6379:
 11324  0B16  0021               	movlb	1	; select bank1
 11325  0B17  0844               	movf	(_Sensor_scanA+1)^(0+128),w
 11326  0B18  008A               	movwf	10
 11327  0B19  0843               	movf	_Sensor_scanA^(0+128),w
 11328  0B1A  000A               	callw
 11329  0B1B  318B               	pagesel	$
 11330  0B1C  2B35               	goto	l6387
 11331  0B1D                     l6381:
 11332  0B1D  0021               	movlb	1	; select bank1
 11333  0B1E  0842               	movf	(_Sensor_scanB+1)^(0+128),w
 11334  0B1F  008A               	movwf	10
 11335  0B20  0841               	movf	_Sensor_scanB^(0+128),w
 11336  0B21  000A               	callw
 11337  0B22  318B               	pagesel	$
 11338  0B23  2B35               	goto	l6387
 11339  0B24                     l6385:
 11340  0B24  0867               	movf	_packet_counter,w
 11341  0B25  3901               	andlw	1
 11342  0B26  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 11343  0B27  01A1               	clrf	??_Sensor_Acq_ExecuteScan+1
 11344                           
 11345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11346                           ; Switch size 1, requested type "simple"
 11347                           ; Number of cases is 1, Range of values is 0 to 0
 11348                           ; switch strategies available:
 11349                           ; Name         Instructions Cycles
 11350                           ; simple_byte            4     3 (average)
 11351                           ; direct_byte            8     6 (fixed)
 11352                           ; jumptable            260     6 (fixed)
 11353                           ;	Chosen strategy is simple_byte
 11354  0B28  0821               	movf	??_Sensor_Acq_ExecuteScan+1,w
 11355  0B29  3A00               	xorlw	0	; case 0
 11356  0B2A  1903               	skipnz
 11357  0B2B  2B2D               	goto	l8077
 11358  0B2C  2B35               	goto	l6387
 11359  0B2D                     l8077:
 11360                           
 11361                           ; Switch size 1, requested type "simple"
 11362                           ; Number of cases is 2, Range of values is 0 to 1
 11363                           ; switch strategies available:
 11364                           ; Name         Instructions Cycles
 11365                           ; simple_byte            7     4 (average)
 11366                           ; direct_byte           10     6 (fixed)
 11367                           ; jumptable            260     6 (fixed)
 11368                           ;	Chosen strategy is simple_byte
 11369  0B2D  0820               	movf	??_Sensor_Acq_ExecuteScan,w
 11370  0B2E  3A00               	xorlw	0	; case 0
 11371  0B2F  1903               	skipnz
 11372  0B30  2B16               	goto	l6379
 11373  0B31  3A01               	xorlw	1	; case 1
 11374  0B32  1903               	skipnz
 11375  0B33  2B1D               	goto	l6381
 11376  0B34  2B35               	goto	l6387
 11377  0B35                     l6387:
 11378  0B35  0020               	movlb	0	; select bank0
 11379  0B36  0868               	movf	_currentScannSensor,w
 11380  0B37  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 11381  0B38  01A1               	clrf	??_Sensor_Acq_ExecuteScan+1
 11382  0B39  0820               	movf	??_Sensor_Acq_ExecuteScan,w
 11383  0B3A  00F2               	movwf	___wmul@multiplier
 11384  0B3B  0821               	movf	??_Sensor_Acq_ExecuteScan+1,w
 11385  0B3C  00F3               	movwf	___wmul@multiplier+1
 11386  0B3D  3009               	movlw	9
 11387  0B3E  00F4               	movwf	___wmul@multiplicand
 11388  0B3F  3000               	movlw	0
 11389  0B40  00F5               	movwf	___wmul@multiplicand+1
 11390  0B41  3192  2211  318B   	fcall	___wmul
 11391  0B44  3014               	movlw	20
 11392  0B45  0020               	movlb	0	; select bank0
 11393  0B46  00A2               	movwf	??_Sensor_Acq_ExecuteScan+2
 11394  0B47  3023               	movlw	35
 11395  0B48  00A3               	movwf	??_Sensor_Acq_ExecuteScan+3
 11396  0B49  0872               	movf	?___wmul,w
 11397  0B4A  0722               	addwf	??_Sensor_Acq_ExecuteScan+2,w
 11398  0B4B  0086               	movwf	6
 11399  0B4C  0873               	movf	?___wmul+1,w
 11400  0B4D  3D23               	addwfc	??_Sensor_Acq_ExecuteScan+3,w
 11401  0B4E  0087               	movwf	7
 11402  0B4F  0801               	movf	1,w
 11403  0B50  0667               	xorwf	_packet_counter,w
 11404  0B51  1903               	skipnz
 11405  0B52  2B54               	goto	u4531
 11406  0B53  2B55               	goto	u4530
 11407  0B54                     u4531:
 11408  0B54  2B68               	goto	l6395
 11409  0B55                     u4530:
 11410  0B55                     l6389:
 11411  0B55  1C67               	btfss	_packet_counter,0
 11412  0B56  2B58               	goto	u4541
 11413  0B57  2B59               	goto	u4540
 11414  0B58                     u4541:
 11415  0B58  2B63               	goto	l6393
 11416  0B59                     u4540:
 11417  0B59                     l6391:
 11418  0B59  3000               	movlw	0
 11419  0B5A  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 11420  0B5B  3004               	movlw	4
 11421  0B5C  00A1               	movwf	??_Sensor_Acq_ExecuteScan+1
 11422  0B5D  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 11423  0B5E  0220               	subwf	??_Sensor_Acq_ExecuteScan,w
 11424  0B5F  00F8               	movwf	Sensor_Acq_ExecuteScan@result
 11425  0B60  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 11426  0B61  3B21               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
 11427  0B62  00F9               	movwf	Sensor_Acq_ExecuteScan@result+1
 11428  0B63                     l6393:
 11429  0B63  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 11430  0B64  0021               	movlb	1	; select bank1
 11431  0B65  07B2               	addwf	_packet_sample^(0+128),f
 11432  0B66  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 11433  0B67  3DB3               	addwfc	(_packet_sample+1)^(0+128),f
 11434  0B68                     l6395:
 11435  0B68  3001               	movlw	1
 11436  0B69  0020               	movlb	0	; select bank0
 11437  0B6A  02E7               	subwf	_packet_counter,f
 11438  0B6B  2B73               	goto	l181
 11439  0B6C                     l6397:
 11440  0B6C  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 11441  0B6D  0021               	movlb	1	; select bank1
 11442  0B6E  07B2               	addwf	_packet_sample^(0+128),f
 11443  0B6F  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 11444  0B70  3DB3               	addwfc	(_packet_sample+1)^(0+128),f
 11445  0B71                     l6399:
 11446  0B71  0020               	movlb	0	; select bank0
 11447  0B72  1469               	bsf	_sensor_globalFlags,0	;volatile
 11448  0B73                     l181:
 11449  0B73  0008               	return
 11450  0B74                     __end_of_Sensor_Acq_ExecuteScan:
 11451                           
 11452                           	psect	text52
 11453  146F                     __ptext52:	
 11454 ;; *************** function _MTOUCH_CVD_ScanB_7 *****************
 11455 ;; Defined at:
 11456 ;;		line 1002 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;		None
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;		None
 11461 ;; Return value:  Size  Location     Type
 11462 ;;                  1    wreg      void 
 11463 ;; Registers used:
 11464 ;;		wreg
 11465 ;; Tracked objects:
 11466 ;;		On entry : 0/0
 11467 ;;		On exit  : 0/0
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11474 ;;Total ram usage:        0 bytes
 11475 ;; Hardware stack levels used: 1
 11476 ;; Hardware stack levels required when called: 4
 11477 ;; This function calls:
 11478 ;;		Nothing
 11479 ;; This function is called by:
 11480 ;;		_Sensor_Acq_ExecuteScan
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           
 11485                           ;psect for function _MTOUCH_CVD_ScanB_7
 11486  146F                     _MTOUCH_CVD_ScanB_7:
 11487  146F                     l6307:	
 11488                           ;incstack = 0
 11489                           ; Regs used in _MTOUCH_CVD_ScanB_7: [wreg]
 11490                           
 11491  146F  0022               	banksel	270	;# 
 11492  1470  110E               	bcf	14,2	;# 
 11493  1471  0021               	banksel	157	;# 
 11494  1472  3019               	movlw	25	;# 
 11495  1473  009D               	movwf	29	;# 
 11496  1474                     l6309:
 11497                           
 11498                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1014:     _delay(16u);
 11499  1474  3005               	movlw	5
 11500  1475                     u6557:
 11501  1475  0B89               	decfsz	9,f
 11502  1476  2C75               	goto	u6557
 11503  1477  0000               	nop
 11504  1478  308E               	movlw	142	;# 
 11505  1479  0084               	movwf	4	;# 
 11506  147A  3000               	movlw	0	;# 
 11507  147B  0085               	movwf	5	;# 
 11508  147C  300E               	movlw	14	;# 
 11509  147D  0086               	movwf	6	;# 
 11510  147E  3001               	movlw	1	;# 
 11511  147F  0087               	movwf	7	;# 
 11512  1480  301D               	movlw	29	;# 
 11513  1481  1580               	bsf	0,3	;# 
 11514  1482                     l6311:
 11515                           
 11516                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1032:     _delay(0u);
 11517  1482  009D               	movwf	29	;# 
 11518  1483                     l6313:
 11519                           
 11520                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1039:     _delay(8u);
 11521  1483  3200               	nop2	;2 cycle nop
 11522  1484  3200               	nop2	;2 cycle nop
 11523  1485  3200               	nop2	;2 cycle nop
 11524  1486  3200               	nop2	;2 cycle nop
 11525  1487  0021               	banksel	157	;# 
 11526  1488  149D               	bsf	29,1	;# 
 11527  1489                     l6315:
 11528                           
 11529                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1046:     _delay(3u);
 11530  1489  3200               	nop2	;2 cycle nop
 11531  148A  0000               	nop
 11532  148B  0022               	banksel	270	;# 
 11533  148C  118E               	bcf	14,3	;# 
 11534  148D  1180               	bcf	0,3	;# 
 11535  148E                     l365:
 11536  148E  0008               	return
 11537  148F                     __end_of_MTOUCH_CVD_ScanB_7:
 11538                           
 11539                           	psect	text53
 11540  144F                     __ptext53:	
 11541 ;; *************** function _MTOUCH_CVD_ScanB_6 *****************
 11542 ;; Defined at:
 11543 ;;		line 875 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;Total ram usage:        0 bytes
 11562 ;; Hardware stack levels used: 1
 11563 ;; Hardware stack levels required when called: 4
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_Sensor_Acq_ExecuteScan
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           
 11572                           ;psect for function _MTOUCH_CVD_ScanB_6
 11573  144F                     _MTOUCH_CVD_ScanB_6:
 11574  144F                     l6287:	
 11575                           ;incstack = 0
 11576                           ; Regs used in _MTOUCH_CVD_ScanB_6: [wreg]
 11577                           
 11578  144F  0022               	banksel	270	;# 
 11579  1450  108E               	bcf	14,1	;# 
 11580  1451  0021               	banksel	157	;# 
 11581  1452  3015               	movlw	21	;# 
 11582  1453  009D               	movwf	29	;# 
 11583  1454                     l6289:
 11584                           
 11585                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 887:     _delay(16u);
 11586  1454  3005               	movlw	5
 11587  1455                     u6567:
 11588  1455  0B89               	decfsz	9,f
 11589  1456  2C55               	goto	u6567
 11590  1457  0000               	nop
 11591  1458  308E               	movlw	142	;# 
 11592  1459  0084               	movwf	4	;# 
 11593  145A  3000               	movlw	0	;# 
 11594  145B  0085               	movwf	5	;# 
 11595  145C  300E               	movlw	14	;# 
 11596  145D  0086               	movwf	6	;# 
 11597  145E  3001               	movlw	1	;# 
 11598  145F  0087               	movwf	7	;# 
 11599  1460  3019               	movlw	25	;# 
 11600  1461  1500               	bsf	0,2	;# 
 11601  1462                     l6291:
 11602                           
 11603                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 905:     _delay(0u);
 11604  1462  009D               	movwf	29	;# 
 11605  1463                     l6293:
 11606                           
 11607                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 912:     _delay(8u);
 11608  1463  3200               	nop2	;2 cycle nop
 11609  1464  3200               	nop2	;2 cycle nop
 11610  1465  3200               	nop2	;2 cycle nop
 11611  1466  3200               	nop2	;2 cycle nop
 11612  1467  0021               	banksel	157	;# 
 11613  1468  149D               	bsf	29,1	;# 
 11614  1469                     l6295:
 11615                           
 11616                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 919:     _delay(3u);
 11617  1469  3200               	nop2	;2 cycle nop
 11618  146A  0000               	nop
 11619  146B  0022               	banksel	270	;# 
 11620  146C  110E               	bcf	14,2	;# 
 11621  146D  1100               	bcf	0,2	;# 
 11622  146E                     l359:
 11623  146E  0008               	return
 11624  146F                     __end_of_MTOUCH_CVD_ScanB_6:
 11625                           
 11626                           	psect	text54
 11627  142F                     __ptext54:	
 11628 ;; *************** function _MTOUCH_CVD_ScanB_5 *****************
 11629 ;; Defined at:
 11630 ;;		line 748 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;		None
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		wreg
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11648 ;;Total ram usage:        0 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 4
 11651 ;; This function calls:
 11652 ;;		Nothing
 11653 ;; This function is called by:
 11654 ;;		_Sensor_Acq_ExecuteScan
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658                           
 11659                           ;psect for function _MTOUCH_CVD_ScanB_5
 11660  142F                     _MTOUCH_CVD_ScanB_5:
 11661  142F                     l6267:	
 11662                           ;incstack = 0
 11663                           ; Regs used in _MTOUCH_CVD_ScanB_5: [wreg]
 11664                           
 11665  142F  0022               	banksel	270	;# 
 11666  1430  100E               	bcf	14,0	;# 
 11667  1431  0021               	banksel	157	;# 
 11668  1432  3011               	movlw	17	;# 
 11669  1433  009D               	movwf	29	;# 
 11670  1434                     l6269:
 11671                           
 11672                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 760:     _delay(16u);
 11673  1434  3005               	movlw	5
 11674  1435                     u6577:
 11675  1435  0B89               	decfsz	9,f
 11676  1436  2C35               	goto	u6577
 11677  1437  0000               	nop
 11678  1438  308E               	movlw	142	;# 
 11679  1439  0084               	movwf	4	;# 
 11680  143A  3000               	movlw	0	;# 
 11681  143B  0085               	movwf	5	;# 
 11682  143C  300E               	movlw	14	;# 
 11683  143D  0086               	movwf	6	;# 
 11684  143E  3001               	movlw	1	;# 
 11685  143F  0087               	movwf	7	;# 
 11686  1440  3015               	movlw	21	;# 
 11687  1441  1480               	bsf	0,1	;# 
 11688  1442                     l6271:
 11689                           
 11690                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 778:     _delay(0u);
 11691  1442  009D               	movwf	29	;# 
 11692  1443                     l6273:
 11693                           
 11694                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 785:     _delay(8u);
 11695  1443  3200               	nop2	;2 cycle nop
 11696  1444  3200               	nop2	;2 cycle nop
 11697  1445  3200               	nop2	;2 cycle nop
 11698  1446  3200               	nop2	;2 cycle nop
 11699  1447  0021               	banksel	157	;# 
 11700  1448  149D               	bsf	29,1	;# 
 11701  1449                     l6275:
 11702                           
 11703                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 792:     _delay(3u);
 11704  1449  3200               	nop2	;2 cycle nop
 11705  144A  0000               	nop
 11706  144B  0022               	banksel	270	;# 
 11707  144C  108E               	bcf	14,1	;# 
 11708  144D  1080               	bcf	0,1	;# 
 11709  144E                     l353:
 11710  144E  0008               	return
 11711  144F                     __end_of_MTOUCH_CVD_ScanB_5:
 11712                           
 11713                           	psect	text55
 11714  140F                     __ptext55:	
 11715 ;; *************** function _MTOUCH_CVD_ScanB_4 *****************
 11716 ;; Defined at:
 11717 ;;		line 621 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;		None
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;		None
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  1    wreg      void 
 11724 ;; Registers used:
 11725 ;;		wreg
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;Total ram usage:        0 bytes
 11736 ;; Hardware stack levels used: 1
 11737 ;; Hardware stack levels required when called: 4
 11738 ;; This function calls:
 11739 ;;		Nothing
 11740 ;; This function is called by:
 11741 ;;		_Sensor_Acq_ExecuteScan
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           
 11745                           
 11746                           ;psect for function _MTOUCH_CVD_ScanB_4
 11747  140F                     _MTOUCH_CVD_ScanB_4:
 11748  140F                     l6247:	
 11749                           ;incstack = 0
 11750                           ; Regs used in _MTOUCH_CVD_ScanB_4: [wreg]
 11751                           
 11752  140F  0022               	banksel	268	;# 
 11753  1410  120C               	bcf	12,4	;# 
 11754  1411  0021               	banksel	157	;# 
 11755  1412  300D               	movlw	13	;# 
 11756  1413  009D               	movwf	29	;# 
 11757  1414                     l6249:
 11758                           
 11759                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 633:     _delay(16u);
 11760  1414  3005               	movlw	5
 11761  1415                     u6587:
 11762  1415  0B89               	decfsz	9,f
 11763  1416  2C15               	goto	u6587
 11764  1417  0000               	nop
 11765  1418  308E               	movlw	142	;# 
 11766  1419  0084               	movwf	4	;# 
 11767  141A  3000               	movlw	0	;# 
 11768  141B  0085               	movwf	5	;# 
 11769  141C  300E               	movlw	14	;# 
 11770  141D  0086               	movwf	6	;# 
 11771  141E  3001               	movlw	1	;# 
 11772  141F  0087               	movwf	7	;# 
 11773  1420  3011               	movlw	17	;# 
 11774  1421  1400               	bsf	0,0	;# 
 11775  1422                     l6251:
 11776                           
 11777                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 651:     _delay(0u);
 11778  1422  009D               	movwf	29	;# 
 11779  1423                     l6253:
 11780                           
 11781                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 658:     _delay(8u);
 11782  1423  3200               	nop2	;2 cycle nop
 11783  1424  3200               	nop2	;2 cycle nop
 11784  1425  3200               	nop2	;2 cycle nop
 11785  1426  3200               	nop2	;2 cycle nop
 11786  1427  0021               	banksel	157	;# 
 11787  1428  149D               	bsf	29,1	;# 
 11788  1429                     l6255:
 11789                           
 11790                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 665:     _delay(3u);
 11791  1429  3200               	nop2	;2 cycle nop
 11792  142A  0000               	nop
 11793  142B  0022               	banksel	270	;# 
 11794  142C  100E               	bcf	14,0	;# 
 11795  142D  1000               	bcf	0,0	;# 
 11796  142E                     l347:
 11797  142E  0008               	return
 11798  142F                     __end_of_MTOUCH_CVD_ScanB_4:
 11799                           
 11800                           	psect	text56
 11801  13EF                     __ptext56:	
 11802 ;; *************** function _MTOUCH_CVD_ScanB_3 *****************
 11803 ;; Defined at:
 11804 ;;		line 494 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;		None
 11807 ;; Auto vars:     Size  Location     Type
 11808 ;;		None
 11809 ;; Return value:  Size  Location     Type
 11810 ;;                  1    wreg      void 
 11811 ;; Registers used:
 11812 ;;		wreg
 11813 ;; Tracked objects:
 11814 ;;		On entry : 0/0
 11815 ;;		On exit  : 0/0
 11816 ;;		Unchanged: 0/0
 11817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;Total ram usage:        0 bytes
 11823 ;; Hardware stack levels used: 1
 11824 ;; Hardware stack levels required when called: 4
 11825 ;; This function calls:
 11826 ;;		Nothing
 11827 ;; This function is called by:
 11828 ;;		_Sensor_Acq_ExecuteScan
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           
 11833                           ;psect for function _MTOUCH_CVD_ScanB_3
 11834  13EF                     _MTOUCH_CVD_ScanB_3:
 11835  13EF                     l6227:	
 11836                           ;incstack = 0
 11837                           ; Regs used in _MTOUCH_CVD_ScanB_3: [wreg]
 11838                           
 11839  13EF  0022               	banksel	268	;# 
 11840  13F0  110C               	bcf	12,2	;# 
 11841  13F1  0021               	banksel	157	;# 
 11842  13F2  3009               	movlw	9	;# 
 11843  13F3  009D               	movwf	29	;# 
 11844  13F4                     l6229:
 11845                           
 11846                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 506:     _delay(16u);
 11847  13F4  3005               	movlw	5
 11848  13F5                     u6597:
 11849  13F5  0B89               	decfsz	9,f
 11850  13F6  2BF5               	goto	u6597
 11851  13F7  0000               	nop
 11852  13F8  308C               	movlw	140	;# 
 11853  13F9  0084               	movwf	4	;# 
 11854  13FA  3000               	movlw	0	;# 
 11855  13FB  0085               	movwf	5	;# 
 11856  13FC  300C               	movlw	12	;# 
 11857  13FD  0086               	movwf	6	;# 
 11858  13FE  3001               	movlw	1	;# 
 11859  13FF  0087               	movwf	7	;# 
 11860  1400  300D               	movlw	13	;# 
 11861  1401  1600               	bsf	0,4	;# 
 11862  1402                     l6231:
 11863                           
 11864                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 524:     _delay(0u);
 11865  1402  009D               	movwf	29	;# 
 11866  1403                     l6233:
 11867                           
 11868                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 531:     _delay(8u);
 11869  1403  3200               	nop2	;2 cycle nop
 11870  1404  3200               	nop2	;2 cycle nop
 11871  1405  3200               	nop2	;2 cycle nop
 11872  1406  3200               	nop2	;2 cycle nop
 11873  1407  0021               	banksel	157	;# 
 11874  1408  149D               	bsf	29,1	;# 
 11875  1409                     l6235:
 11876                           
 11877                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 538:     _delay(3u);
 11878  1409  3200               	nop2	;2 cycle nop
 11879  140A  0000               	nop
 11880  140B  0022               	banksel	268	;# 
 11881  140C  120C               	bcf	12,4	;# 
 11882  140D  1200               	bcf	0,4	;# 
 11883  140E                     l341:
 11884  140E  0008               	return
 11885  140F                     __end_of_MTOUCH_CVD_ScanB_3:
 11886                           
 11887                           	psect	text57
 11888  13CF                     __ptext57:	
 11889 ;; *************** function _MTOUCH_CVD_ScanB_2 *****************
 11890 ;; Defined at:
 11891 ;;		line 367 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;		None
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;		None
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11909 ;;Total ram usage:        0 bytes
 11910 ;; Hardware stack levels used: 1
 11911 ;; Hardware stack levels required when called: 4
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		_Sensor_Acq_ExecuteScan
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           
 11920                           ;psect for function _MTOUCH_CVD_ScanB_2
 11921  13CF                     _MTOUCH_CVD_ScanB_2:
 11922  13CF                     l6207:	
 11923                           ;incstack = 0
 11924                           ; Regs used in _MTOUCH_CVD_ScanB_2: [wreg]
 11925                           
 11926  13CF  0022               	banksel	268	;# 
 11927  13D0  108C               	bcf	12,1	;# 
 11928  13D1  0021               	banksel	157	;# 
 11929  13D2  3005               	movlw	5	;# 
 11930  13D3  009D               	movwf	29	;# 
 11931  13D4                     l6209:
 11932                           
 11933                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 379:     _delay(16u);
 11934  13D4  3005               	movlw	5
 11935  13D5                     u6607:
 11936  13D5  0B89               	decfsz	9,f
 11937  13D6  2BD5               	goto	u6607
 11938  13D7  0000               	nop
 11939  13D8  308C               	movlw	140	;# 
 11940  13D9  0084               	movwf	4	;# 
 11941  13DA  3000               	movlw	0	;# 
 11942  13DB  0085               	movwf	5	;# 
 11943  13DC  300C               	movlw	12	;# 
 11944  13DD  0086               	movwf	6	;# 
 11945  13DE  3001               	movlw	1	;# 
 11946  13DF  0087               	movwf	7	;# 
 11947  13E0  3009               	movlw	9	;# 
 11948  13E1  1500               	bsf	0,2	;# 
 11949  13E2                     l6211:
 11950                           
 11951                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 397:     _delay(0u);
 11952  13E2  009D               	movwf	29	;# 
 11953  13E3                     l6213:
 11954                           
 11955                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 404:     _delay(8u);
 11956  13E3  3200               	nop2	;2 cycle nop
 11957  13E4  3200               	nop2	;2 cycle nop
 11958  13E5  3200               	nop2	;2 cycle nop
 11959  13E6  3200               	nop2	;2 cycle nop
 11960  13E7  0021               	banksel	157	;# 
 11961  13E8  149D               	bsf	29,1	;# 
 11962  13E9                     l6215:
 11963                           
 11964                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 411:     _delay(3u);
 11965  13E9  3200               	nop2	;2 cycle nop
 11966  13EA  0000               	nop
 11967  13EB  0022               	banksel	268	;# 
 11968  13EC  110C               	bcf	12,2	;# 
 11969  13ED  1100               	bcf	0,2	;# 
 11970  13EE                     l335:
 11971  13EE  0008               	return
 11972  13EF                     __end_of_MTOUCH_CVD_ScanB_2:
 11973                           
 11974                           	psect	text58
 11975  13AF                     __ptext58:	
 11976 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
 11977 ;; Defined at:
 11978 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;		None
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;		None
 11983 ;; Return value:  Size  Location     Type
 11984 ;;                  1    wreg      void 
 11985 ;; Registers used:
 11986 ;;		wreg
 11987 ;; Tracked objects:
 11988 ;;		On entry : 0/0
 11989 ;;		On exit  : 0/0
 11990 ;;		Unchanged: 0/0
 11991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;Total ram usage:        0 bytes
 11997 ;; Hardware stack levels used: 1
 11998 ;; Hardware stack levels required when called: 4
 11999 ;; This function calls:
 12000 ;;		Nothing
 12001 ;; This function is called by:
 12002 ;;		_Sensor_Acq_ExecuteScan
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           
 12007                           ;psect for function _MTOUCH_CVD_ScanB_1
 12008  13AF                     _MTOUCH_CVD_ScanB_1:
 12009  13AF                     l6187:	
 12010                           ;incstack = 0
 12011                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
 12012                           
 12013  13AF  0022               	banksel	268	;# 
 12014  13B0  100C               	bcf	12,0	;# 
 12015  13B1  0021               	banksel	157	;# 
 12016  13B2  3001               	movlw	1	;# 
 12017  13B3  009D               	movwf	29	;# 
 12018  13B4                     l6189:
 12019                           
 12020                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(16u);
 12021  13B4  3005               	movlw	5
 12022  13B5                     u6617:
 12023  13B5  0B89               	decfsz	9,f
 12024  13B6  2BB5               	goto	u6617
 12025  13B7  0000               	nop
 12026  13B8  308C               	movlw	140	;# 
 12027  13B9  0084               	movwf	4	;# 
 12028  13BA  3000               	movlw	0	;# 
 12029  13BB  0085               	movwf	5	;# 
 12030  13BC  300C               	movlw	12	;# 
 12031  13BD  0086               	movwf	6	;# 
 12032  13BE  3001               	movlw	1	;# 
 12033  13BF  0087               	movwf	7	;# 
 12034  13C0  3005               	movlw	5	;# 
 12035  13C1  1480               	bsf	0,1	;# 
 12036  13C2                     l6191:
 12037                           
 12038                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
 12039  13C2  009D               	movwf	29	;# 
 12040  13C3                     l6193:
 12041                           
 12042                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(8u);
 12043  13C3  3200               	nop2	;2 cycle nop
 12044  13C4  3200               	nop2	;2 cycle nop
 12045  13C5  3200               	nop2	;2 cycle nop
 12046  13C6  3200               	nop2	;2 cycle nop
 12047  13C7  0021               	banksel	157	;# 
 12048  13C8  149D               	bsf	29,1	;# 
 12049  13C9                     l6195:
 12050                           
 12051                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
 12052  13C9  3200               	nop2	;2 cycle nop
 12053  13CA  0000               	nop
 12054  13CB  0022               	banksel	268	;# 
 12055  13CC  108C               	bcf	12,1	;# 
 12056  13CD  1080               	bcf	0,1	;# 
 12057  13CE                     l329:
 12058  13CE  0008               	return
 12059  13CF                     __end_of_MTOUCH_CVD_ScanB_1:
 12060                           
 12061                           	psect	text59
 12062  138F                     __ptext59:	
 12063 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
 12064 ;; Defined at:
 12065 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;		None
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;		None
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;Total ram usage:        0 bytes
 12084 ;; Hardware stack levels used: 1
 12085 ;; Hardware stack levels required when called: 4
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		_Sensor_Acq_ExecuteScan
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           
 12094                           ;psect for function _MTOUCH_CVD_ScanB_0
 12095  138F                     _MTOUCH_CVD_ScanB_0:
 12096  138F                     l6167:	
 12097                           ;incstack = 0
 12098                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
 12099                           
 12100  138F  0022               	banksel	270	;# 
 12101  1390  130E               	bcf	14,6	;# 
 12102  1391  0021               	banksel	157	;# 
 12103  1392  3021               	movlw	33	;# 
 12104  1393  009D               	movwf	29	;# 
 12105  1394                     l6169:
 12106                           
 12107                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(16u);
 12108  1394  3005               	movlw	5
 12109  1395                     u6627:
 12110  1395  0B89               	decfsz	9,f
 12111  1396  2B95               	goto	u6627
 12112  1397  0000               	nop
 12113  1398  308C               	movlw	140	;# 
 12114  1399  0084               	movwf	4	;# 
 12115  139A  3000               	movlw	0	;# 
 12116  139B  0085               	movwf	5	;# 
 12117  139C  300C               	movlw	12	;# 
 12118  139D  0086               	movwf	6	;# 
 12119  139E  3001               	movlw	1	;# 
 12120  139F  0087               	movwf	7	;# 
 12121  13A0  3001               	movlw	1	;# 
 12122  13A1  1400               	bsf	0,0	;# 
 12123  13A2                     l6171:
 12124                           
 12125                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
 12126  13A2  009D               	movwf	29	;# 
 12127  13A3                     l6173:
 12128                           
 12129                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(8u);
 12130  13A3  3200               	nop2	;2 cycle nop
 12131  13A4  3200               	nop2	;2 cycle nop
 12132  13A5  3200               	nop2	;2 cycle nop
 12133  13A6  3200               	nop2	;2 cycle nop
 12134  13A7  0021               	banksel	157	;# 
 12135  13A8  149D               	bsf	29,1	;# 
 12136  13A9                     l6175:
 12137                           
 12138                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
 12139  13A9  3200               	nop2	;2 cycle nop
 12140  13AA  0000               	nop
 12141  13AB  0022               	banksel	268	;# 
 12142  13AC  100C               	bcf	12,0	;# 
 12143  13AD  1000               	bcf	0,0	;# 
 12144  13AE                     l323:
 12145  13AE  0008               	return
 12146  13AF                     __end_of_MTOUCH_CVD_ScanB_0:
 12147                           
 12148                           	psect	text60
 12149  136F                     __ptext60:	
 12150 ;; *************** function _MTOUCH_CVD_ScanB_8 *****************
 12151 ;; Defined at:
 12152 ;;		line 1129 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12153 ;; Parameters:    Size  Location     Type
 12154 ;;		None
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;		None
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  1    wreg      void 
 12159 ;; Registers used:
 12160 ;;		wreg
 12161 ;; Tracked objects:
 12162 ;;		On entry : 0/0
 12163 ;;		On exit  : 0/0
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;Total ram usage:        0 bytes
 12171 ;; Hardware stack levels used: 1
 12172 ;; Hardware stack levels required when called: 4
 12173 ;; This function calls:
 12174 ;;		Nothing
 12175 ;; This function is called by:
 12176 ;;		_Sensor_Acq_ExecuteScan
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           
 12181                           ;psect for function _MTOUCH_CVD_ScanB_8
 12182  136F                     _MTOUCH_CVD_ScanB_8:
 12183  136F                     l6327:	
 12184                           ;incstack = 0
 12185                           ; Regs used in _MTOUCH_CVD_ScanB_8: [wreg]
 12186                           
 12187  136F  0022               	banksel	270	;# 
 12188  1370  118E               	bcf	14,3	;# 
 12189  1371  0021               	banksel	157	;# 
 12190  1372  301D               	movlw	29	;# 
 12191  1373  009D               	movwf	29	;# 
 12192  1374                     l6329:
 12193                           
 12194                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1141:     _delay(16u);
 12195  1374  3005               	movlw	5
 12196  1375                     u6637:
 12197  1375  0B89               	decfsz	9,f
 12198  1376  2B75               	goto	u6637
 12199  1377  0000               	nop
 12200  1378  308E               	movlw	142	;# 
 12201  1379  0084               	movwf	4	;# 
 12202  137A  3000               	movlw	0	;# 
 12203  137B  0085               	movwf	5	;# 
 12204  137C  300E               	movlw	14	;# 
 12205  137D  0086               	movwf	6	;# 
 12206  137E  3001               	movlw	1	;# 
 12207  137F  0087               	movwf	7	;# 
 12208  1380  3021               	movlw	33	;# 
 12209  1381  1700               	bsf	0,6	;# 
 12210  1382                     l6331:
 12211                           
 12212                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1159:     _delay(0u);
 12213  1382  009D               	movwf	29	;# 
 12214  1383                     l6333:
 12215                           
 12216                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1166:     _delay(8u);
 12217  1383  3200               	nop2	;2 cycle nop
 12218  1384  3200               	nop2	;2 cycle nop
 12219  1385  3200               	nop2	;2 cycle nop
 12220  1386  3200               	nop2	;2 cycle nop
 12221  1387  0021               	banksel	157	;# 
 12222  1388  149D               	bsf	29,1	;# 
 12223  1389                     l6335:
 12224                           
 12225                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1173:     _delay(3u);
 12226  1389  3200               	nop2	;2 cycle nop
 12227  138A  0000               	nop
 12228  138B  0022               	banksel	270	;# 
 12229  138C  130E               	bcf	14,6	;# 
 12230  138D  1300               	bcf	0,6	;# 
 12231  138E                     l371:
 12232  138E  0008               	return
 12233  138F                     __end_of_MTOUCH_CVD_ScanB_8:
 12234                           
 12235                           	psect	text61
 12236  134F                     __ptext61:	
 12237 ;; *************** function _MTOUCH_CVD_ScanA_7 *****************
 12238 ;; Defined at:
 12239 ;;		line 939 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;		None
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;		None
 12244 ;; Return value:  Size  Location     Type
 12245 ;;                  1    wreg      void 
 12246 ;; Registers used:
 12247 ;;		wreg
 12248 ;; Tracked objects:
 12249 ;;		On entry : 0/0
 12250 ;;		On exit  : 0/0
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;Total ram usage:        0 bytes
 12258 ;; Hardware stack levels used: 1
 12259 ;; Hardware stack levels required when called: 4
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_Sensor_Acq_ExecuteScan
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           
 12268                           ;psect for function _MTOUCH_CVD_ScanA_7
 12269  134F                     _MTOUCH_CVD_ScanA_7:
 12270  134F                     l6297:	
 12271                           ;incstack = 0
 12272                           ; Regs used in _MTOUCH_CVD_ScanA_7: [wreg]
 12273                           
 12274  134F  0022               	banksel	270	;# 
 12275  1350  150E               	bsf	14,2	;# 
 12276  1351  0021               	banksel	157	;# 
 12277  1352  3019               	movlw	25	;# 
 12278  1353  009D               	movwf	29	;# 
 12279  1354                     l6299:
 12280                           
 12281                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 951:     _delay(16u);
 12282  1354  3005               	movlw	5
 12283  1355                     u6647:
 12284  1355  0B89               	decfsz	9,f
 12285  1356  2B55               	goto	u6647
 12286  1357  0000               	nop
 12287  1358  308E               	movlw	142	;# 
 12288  1359  0084               	movwf	4	;# 
 12289  135A  3000               	movlw	0	;# 
 12290  135B  0085               	movwf	5	;# 
 12291  135C  300E               	movlw	14	;# 
 12292  135D  0086               	movwf	6	;# 
 12293  135E  3001               	movlw	1	;# 
 12294  135F  0087               	movwf	7	;# 
 12295  1360  301D               	movlw	29	;# 
 12296  1361  1580               	bsf	0,3	;# 
 12297  1362                     l6301:
 12298                           
 12299                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 969:     _delay(0u);
 12300  1362  009D               	movwf	29	;# 
 12301  1363                     l6303:
 12302                           
 12303                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 975:     _delay(8u);
 12304  1363  3200               	nop2	;2 cycle nop
 12305  1364  3200               	nop2	;2 cycle nop
 12306  1365  3200               	nop2	;2 cycle nop
 12307  1366  3200               	nop2	;2 cycle nop
 12308  1367  0021               	banksel	157	;# 
 12309  1368  149D               	bsf	29,1	;# 
 12310  1369                     l6305:
 12311                           
 12312                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 982:     _delay(3u);
 12313  1369  3200               	nop2	;2 cycle nop
 12314  136A  0000               	nop
 12315  136B  0022               	banksel	270	;# 
 12316  136C  158E               	bsf	14,3	;# 
 12317  136D  1180               	bcf	0,3	;# 
 12318  136E                     l362:
 12319  136E  0008               	return
 12320  136F                     __end_of_MTOUCH_CVD_ScanA_7:
 12321                           
 12322                           	psect	text62
 12323  132F                     __ptext62:	
 12324 ;; *************** function _MTOUCH_CVD_ScanA_6 *****************
 12325 ;; Defined at:
 12326 ;;		line 812 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12327 ;; Parameters:    Size  Location     Type
 12328 ;;		None
 12329 ;; Auto vars:     Size  Location     Type
 12330 ;;		None
 12331 ;; Return value:  Size  Location     Type
 12332 ;;                  1    wreg      void 
 12333 ;; Registers used:
 12334 ;;		wreg
 12335 ;; Tracked objects:
 12336 ;;		On entry : 0/0
 12337 ;;		On exit  : 0/0
 12338 ;;		Unchanged: 0/0
 12339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12344 ;;Total ram usage:        0 bytes
 12345 ;; Hardware stack levels used: 1
 12346 ;; Hardware stack levels required when called: 4
 12347 ;; This function calls:
 12348 ;;		Nothing
 12349 ;; This function is called by:
 12350 ;;		_Sensor_Acq_ExecuteScan
 12351 ;; This function uses a non-reentrant model
 12352 ;;
 12353                           
 12354                           
 12355                           ;psect for function _MTOUCH_CVD_ScanA_6
 12356  132F                     _MTOUCH_CVD_ScanA_6:
 12357  132F                     l6277:	
 12358                           ;incstack = 0
 12359                           ; Regs used in _MTOUCH_CVD_ScanA_6: [wreg]
 12360                           
 12361  132F  0022               	banksel	270	;# 
 12362  1330  148E               	bsf	14,1	;# 
 12363  1331  0021               	banksel	157	;# 
 12364  1332  3015               	movlw	21	;# 
 12365  1333  009D               	movwf	29	;# 
 12366  1334                     l6279:
 12367                           
 12368                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 824:     _delay(16u);
 12369  1334  3005               	movlw	5
 12370  1335                     u6657:
 12371  1335  0B89               	decfsz	9,f
 12372  1336  2B35               	goto	u6657
 12373  1337  0000               	nop
 12374  1338  308E               	movlw	142	;# 
 12375  1339  0084               	movwf	4	;# 
 12376  133A  3000               	movlw	0	;# 
 12377  133B  0085               	movwf	5	;# 
 12378  133C  300E               	movlw	14	;# 
 12379  133D  0086               	movwf	6	;# 
 12380  133E  3001               	movlw	1	;# 
 12381  133F  0087               	movwf	7	;# 
 12382  1340  3019               	movlw	25	;# 
 12383  1341  1500               	bsf	0,2	;# 
 12384  1342                     l6281:
 12385                           
 12386                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 842:     _delay(0u);
 12387  1342  009D               	movwf	29	;# 
 12388  1343                     l6283:
 12389                           
 12390                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 848:     _delay(8u);
 12391  1343  3200               	nop2	;2 cycle nop
 12392  1344  3200               	nop2	;2 cycle nop
 12393  1345  3200               	nop2	;2 cycle nop
 12394  1346  3200               	nop2	;2 cycle nop
 12395  1347  0021               	banksel	157	;# 
 12396  1348  149D               	bsf	29,1	;# 
 12397  1349                     l6285:
 12398                           
 12399                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 855:     _delay(3u);
 12400  1349  3200               	nop2	;2 cycle nop
 12401  134A  0000               	nop
 12402  134B  0022               	banksel	270	;# 
 12403  134C  150E               	bsf	14,2	;# 
 12404  134D  1100               	bcf	0,2	;# 
 12405  134E                     l356:
 12406  134E  0008               	return
 12407  134F                     __end_of_MTOUCH_CVD_ScanA_6:
 12408                           
 12409                           	psect	text63
 12410  130F                     __ptext63:	
 12411 ;; *************** function _MTOUCH_CVD_ScanA_5 *****************
 12412 ;; Defined at:
 12413 ;;		line 685 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;		None
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;		None
 12418 ;; Return value:  Size  Location     Type
 12419 ;;                  1    wreg      void 
 12420 ;; Registers used:
 12421 ;;		wreg
 12422 ;; Tracked objects:
 12423 ;;		On entry : 0/0
 12424 ;;		On exit  : 0/0
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;Total ram usage:        0 bytes
 12432 ;; Hardware stack levels used: 1
 12433 ;; Hardware stack levels required when called: 4
 12434 ;; This function calls:
 12435 ;;		Nothing
 12436 ;; This function is called by:
 12437 ;;		_Sensor_Acq_ExecuteScan
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           
 12442                           ;psect for function _MTOUCH_CVD_ScanA_5
 12443  130F                     _MTOUCH_CVD_ScanA_5:
 12444  130F                     l6257:	
 12445                           ;incstack = 0
 12446                           ; Regs used in _MTOUCH_CVD_ScanA_5: [wreg]
 12447                           
 12448  130F  0022               	banksel	270	;# 
 12449  1310  140E               	bsf	14,0	;# 
 12450  1311  0021               	banksel	157	;# 
 12451  1312  3011               	movlw	17	;# 
 12452  1313  009D               	movwf	29	;# 
 12453  1314                     l6259:
 12454                           
 12455                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 697:     _delay(16u);
 12456  1314  3005               	movlw	5
 12457  1315                     u6667:
 12458  1315  0B89               	decfsz	9,f
 12459  1316  2B15               	goto	u6667
 12460  1317  0000               	nop
 12461  1318  308E               	movlw	142	;# 
 12462  1319  0084               	movwf	4	;# 
 12463  131A  3000               	movlw	0	;# 
 12464  131B  0085               	movwf	5	;# 
 12465  131C  300E               	movlw	14	;# 
 12466  131D  0086               	movwf	6	;# 
 12467  131E  3001               	movlw	1	;# 
 12468  131F  0087               	movwf	7	;# 
 12469  1320  3015               	movlw	21	;# 
 12470  1321  1480               	bsf	0,1	;# 
 12471  1322                     l6261:
 12472                           
 12473                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 715:     _delay(0u);
 12474  1322  009D               	movwf	29	;# 
 12475  1323                     l6263:
 12476                           
 12477                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 721:     _delay(8u);
 12478  1323  3200               	nop2	;2 cycle nop
 12479  1324  3200               	nop2	;2 cycle nop
 12480  1325  3200               	nop2	;2 cycle nop
 12481  1326  3200               	nop2	;2 cycle nop
 12482  1327  0021               	banksel	157	;# 
 12483  1328  149D               	bsf	29,1	;# 
 12484  1329                     l6265:
 12485                           
 12486                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 728:     _delay(3u);
 12487  1329  3200               	nop2	;2 cycle nop
 12488  132A  0000               	nop
 12489  132B  0022               	banksel	270	;# 
 12490  132C  148E               	bsf	14,1	;# 
 12491  132D  1080               	bcf	0,1	;# 
 12492  132E                     l350:
 12493  132E  0008               	return
 12494  132F                     __end_of_MTOUCH_CVD_ScanA_5:
 12495                           
 12496                           	psect	text64
 12497  12EF                     __ptext64:	
 12498 ;; *************** function _MTOUCH_CVD_ScanA_4 *****************
 12499 ;; Defined at:
 12500 ;;		line 558 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;		None
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;		None
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  1    wreg      void 
 12507 ;; Registers used:
 12508 ;;		wreg
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12518 ;;Total ram usage:        0 bytes
 12519 ;; Hardware stack levels used: 1
 12520 ;; Hardware stack levels required when called: 4
 12521 ;; This function calls:
 12522 ;;		Nothing
 12523 ;; This function is called by:
 12524 ;;		_Sensor_Acq_ExecuteScan
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           
 12529                           ;psect for function _MTOUCH_CVD_ScanA_4
 12530  12EF                     _MTOUCH_CVD_ScanA_4:
 12531  12EF                     l6237:	
 12532                           ;incstack = 0
 12533                           ; Regs used in _MTOUCH_CVD_ScanA_4: [wreg]
 12534                           
 12535  12EF  0022               	banksel	268	;# 
 12536  12F0  160C               	bsf	12,4	;# 
 12537  12F1  0021               	banksel	157	;# 
 12538  12F2  300D               	movlw	13	;# 
 12539  12F3  009D               	movwf	29	;# 
 12540  12F4                     l6239:
 12541                           
 12542                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 570:     _delay(16u);
 12543  12F4  3005               	movlw	5
 12544  12F5                     u6677:
 12545  12F5  0B89               	decfsz	9,f
 12546  12F6  2AF5               	goto	u6677
 12547  12F7  0000               	nop
 12548  12F8  308E               	movlw	142	;# 
 12549  12F9  0084               	movwf	4	;# 
 12550  12FA  3000               	movlw	0	;# 
 12551  12FB  0085               	movwf	5	;# 
 12552  12FC  300E               	movlw	14	;# 
 12553  12FD  0086               	movwf	6	;# 
 12554  12FE  3001               	movlw	1	;# 
 12555  12FF  0087               	movwf	7	;# 
 12556  1300  3011               	movlw	17	;# 
 12557  1301  1400               	bsf	0,0	;# 
 12558  1302                     l6241:
 12559                           
 12560                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 588:     _delay(0u);
 12561  1302  009D               	movwf	29	;# 
 12562  1303                     l6243:
 12563                           
 12564                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 594:     _delay(8u);
 12565  1303  3200               	nop2	;2 cycle nop
 12566  1304  3200               	nop2	;2 cycle nop
 12567  1305  3200               	nop2	;2 cycle nop
 12568  1306  3200               	nop2	;2 cycle nop
 12569  1307  0021               	banksel	157	;# 
 12570  1308  149D               	bsf	29,1	;# 
 12571  1309                     l6245:
 12572                           
 12573                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 601:     _delay(3u);
 12574  1309  3200               	nop2	;2 cycle nop
 12575  130A  0000               	nop
 12576  130B  0022               	banksel	270	;# 
 12577  130C  140E               	bsf	14,0	;# 
 12578  130D  1000               	bcf	0,0	;# 
 12579  130E                     l344:
 12580  130E  0008               	return
 12581  130F                     __end_of_MTOUCH_CVD_ScanA_4:
 12582                           
 12583                           	psect	text65
 12584  12CF                     __ptext65:	
 12585 ;; *************** function _MTOUCH_CVD_ScanA_3 *****************
 12586 ;; Defined at:
 12587 ;;		line 431 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12588 ;; Parameters:    Size  Location     Type
 12589 ;;		None
 12590 ;; Auto vars:     Size  Location     Type
 12591 ;;		None
 12592 ;; Return value:  Size  Location     Type
 12593 ;;                  1    wreg      void 
 12594 ;; Registers used:
 12595 ;;		wreg
 12596 ;; Tracked objects:
 12597 ;;		On entry : 0/0
 12598 ;;		On exit  : 0/0
 12599 ;;		Unchanged: 0/0
 12600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;Total ram usage:        0 bytes
 12606 ;; Hardware stack levels used: 1
 12607 ;; Hardware stack levels required when called: 4
 12608 ;; This function calls:
 12609 ;;		Nothing
 12610 ;; This function is called by:
 12611 ;;		_Sensor_Acq_ExecuteScan
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           
 12616                           ;psect for function _MTOUCH_CVD_ScanA_3
 12617  12CF                     _MTOUCH_CVD_ScanA_3:
 12618  12CF                     l6217:	
 12619                           ;incstack = 0
 12620                           ; Regs used in _MTOUCH_CVD_ScanA_3: [wreg]
 12621                           
 12622  12CF  0022               	banksel	268	;# 
 12623  12D0  150C               	bsf	12,2	;# 
 12624  12D1  0021               	banksel	157	;# 
 12625  12D2  3009               	movlw	9	;# 
 12626  12D3  009D               	movwf	29	;# 
 12627  12D4                     l6219:
 12628                           
 12629                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 443:     _delay(16u);
 12630  12D4  3005               	movlw	5
 12631  12D5                     u6687:
 12632  12D5  0B89               	decfsz	9,f
 12633  12D6  2AD5               	goto	u6687
 12634  12D7  0000               	nop
 12635  12D8  308C               	movlw	140	;# 
 12636  12D9  0084               	movwf	4	;# 
 12637  12DA  3000               	movlw	0	;# 
 12638  12DB  0085               	movwf	5	;# 
 12639  12DC  300C               	movlw	12	;# 
 12640  12DD  0086               	movwf	6	;# 
 12641  12DE  3001               	movlw	1	;# 
 12642  12DF  0087               	movwf	7	;# 
 12643  12E0  300D               	movlw	13	;# 
 12644  12E1  1600               	bsf	0,4	;# 
 12645  12E2                     l6221:
 12646                           
 12647                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 461:     _delay(0u);
 12648  12E2  009D               	movwf	29	;# 
 12649  12E3                     l6223:
 12650                           
 12651                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 467:     _delay(8u);
 12652  12E3  3200               	nop2	;2 cycle nop
 12653  12E4  3200               	nop2	;2 cycle nop
 12654  12E5  3200               	nop2	;2 cycle nop
 12655  12E6  3200               	nop2	;2 cycle nop
 12656  12E7  0021               	banksel	157	;# 
 12657  12E8  149D               	bsf	29,1	;# 
 12658  12E9                     l6225:
 12659                           
 12660                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 474:     _delay(3u);
 12661  12E9  3200               	nop2	;2 cycle nop
 12662  12EA  0000               	nop
 12663  12EB  0022               	banksel	268	;# 
 12664  12EC  160C               	bsf	12,4	;# 
 12665  12ED  1200               	bcf	0,4	;# 
 12666  12EE                     l338:
 12667  12EE  0008               	return
 12668  12EF                     __end_of_MTOUCH_CVD_ScanA_3:
 12669                           
 12670                           	psect	text66
 12671  12AF                     __ptext66:	
 12672 ;; *************** function _MTOUCH_CVD_ScanA_2 *****************
 12673 ;; Defined at:
 12674 ;;		line 304 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;		None
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;		None
 12679 ;; Return value:  Size  Location     Type
 12680 ;;                  1    wreg      void 
 12681 ;; Registers used:
 12682 ;;		wreg
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;Total ram usage:        0 bytes
 12693 ;; Hardware stack levels used: 1
 12694 ;; Hardware stack levels required when called: 4
 12695 ;; This function calls:
 12696 ;;		Nothing
 12697 ;; This function is called by:
 12698 ;;		_Sensor_Acq_ExecuteScan
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           
 12703                           ;psect for function _MTOUCH_CVD_ScanA_2
 12704  12AF                     _MTOUCH_CVD_ScanA_2:
 12705  12AF                     l6197:	
 12706                           ;incstack = 0
 12707                           ; Regs used in _MTOUCH_CVD_ScanA_2: [wreg]
 12708                           
 12709  12AF  0022               	banksel	268	;# 
 12710  12B0  148C               	bsf	12,1	;# 
 12711  12B1  0021               	banksel	157	;# 
 12712  12B2  3005               	movlw	5	;# 
 12713  12B3  009D               	movwf	29	;# 
 12714  12B4                     l6199:
 12715                           
 12716                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 316:     _delay(16u);
 12717  12B4  3005               	movlw	5
 12718  12B5                     u6697:
 12719  12B5  0B89               	decfsz	9,f
 12720  12B6  2AB5               	goto	u6697
 12721  12B7  0000               	nop
 12722  12B8  308C               	movlw	140	;# 
 12723  12B9  0084               	movwf	4	;# 
 12724  12BA  3000               	movlw	0	;# 
 12725  12BB  0085               	movwf	5	;# 
 12726  12BC  300C               	movlw	12	;# 
 12727  12BD  0086               	movwf	6	;# 
 12728  12BE  3001               	movlw	1	;# 
 12729  12BF  0087               	movwf	7	;# 
 12730  12C0  3009               	movlw	9	;# 
 12731  12C1  1500               	bsf	0,2	;# 
 12732  12C2                     l6201:
 12733                           
 12734                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 334:     _delay(0u);
 12735  12C2  009D               	movwf	29	;# 
 12736  12C3                     l6203:
 12737                           
 12738                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 340:     _delay(8u);
 12739  12C3  3200               	nop2	;2 cycle nop
 12740  12C4  3200               	nop2	;2 cycle nop
 12741  12C5  3200               	nop2	;2 cycle nop
 12742  12C6  3200               	nop2	;2 cycle nop
 12743  12C7  0021               	banksel	157	;# 
 12744  12C8  149D               	bsf	29,1	;# 
 12745  12C9                     l6205:
 12746                           
 12747                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 347:     _delay(3u);
 12748  12C9  3200               	nop2	;2 cycle nop
 12749  12CA  0000               	nop
 12750  12CB  0022               	banksel	268	;# 
 12751  12CC  150C               	bsf	12,2	;# 
 12752  12CD  1100               	bcf	0,2	;# 
 12753  12CE                     l332:
 12754  12CE  0008               	return
 12755  12CF                     __end_of_MTOUCH_CVD_ScanA_2:
 12756                           
 12757                           	psect	text67
 12758  128F                     __ptext67:	
 12759 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
 12760 ;; Defined at:
 12761 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;		None
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;		None
 12766 ;; Return value:  Size  Location     Type
 12767 ;;                  1    wreg      void 
 12768 ;; Registers used:
 12769 ;;		wreg
 12770 ;; Tracked objects:
 12771 ;;		On entry : 0/0
 12772 ;;		On exit  : 0/0
 12773 ;;		Unchanged: 0/0
 12774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;Total ram usage:        0 bytes
 12780 ;; Hardware stack levels used: 1
 12781 ;; Hardware stack levels required when called: 4
 12782 ;; This function calls:
 12783 ;;		Nothing
 12784 ;; This function is called by:
 12785 ;;		_Sensor_Acq_ExecuteScan
 12786 ;; This function uses a non-reentrant model
 12787 ;;
 12788                           
 12789                           
 12790                           ;psect for function _MTOUCH_CVD_ScanA_1
 12791  128F                     _MTOUCH_CVD_ScanA_1:
 12792  128F                     l6177:	
 12793                           ;incstack = 0
 12794                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
 12795                           
 12796  128F  0022               	banksel	268	;# 
 12797  1290  140C               	bsf	12,0	;# 
 12798  1291  0021               	banksel	157	;# 
 12799  1292  3001               	movlw	1	;# 
 12800  1293  009D               	movwf	29	;# 
 12801  1294                     l6179:
 12802                           
 12803                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(16u);
 12804  1294  3005               	movlw	5
 12805  1295                     u6707:
 12806  1295  0B89               	decfsz	9,f
 12807  1296  2A95               	goto	u6707
 12808  1297  0000               	nop
 12809  1298  308C               	movlw	140	;# 
 12810  1299  0084               	movwf	4	;# 
 12811  129A  3000               	movlw	0	;# 
 12812  129B  0085               	movwf	5	;# 
 12813  129C  300C               	movlw	12	;# 
 12814  129D  0086               	movwf	6	;# 
 12815  129E  3001               	movlw	1	;# 
 12816  129F  0087               	movwf	7	;# 
 12817  12A0  3005               	movlw	5	;# 
 12818  12A1  1480               	bsf	0,1	;# 
 12819  12A2                     l6181:
 12820                           
 12821                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
 12822  12A2  009D               	movwf	29	;# 
 12823  12A3                     l6183:
 12824                           
 12825                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(8u);
 12826  12A3  3200               	nop2	;2 cycle nop
 12827  12A4  3200               	nop2	;2 cycle nop
 12828  12A5  3200               	nop2	;2 cycle nop
 12829  12A6  3200               	nop2	;2 cycle nop
 12830  12A7  0021               	banksel	157	;# 
 12831  12A8  149D               	bsf	29,1	;# 
 12832  12A9                     l6185:
 12833                           
 12834                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
 12835  12A9  3200               	nop2	;2 cycle nop
 12836  12AA  0000               	nop
 12837  12AB  0022               	banksel	268	;# 
 12838  12AC  148C               	bsf	12,1	;# 
 12839  12AD  1080               	bcf	0,1	;# 
 12840  12AE                     l326:
 12841  12AE  0008               	return
 12842  12AF                     __end_of_MTOUCH_CVD_ScanA_1:
 12843                           
 12844                           	psect	text68
 12845  126F                     __ptext68:	
 12846 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
 12847 ;; Defined at:
 12848 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;		None
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;		None
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  1    wreg      void 
 12855 ;; Registers used:
 12856 ;;		wreg
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;Total ram usage:        0 bytes
 12867 ;; Hardware stack levels used: 1
 12868 ;; Hardware stack levels required when called: 4
 12869 ;; This function calls:
 12870 ;;		Nothing
 12871 ;; This function is called by:
 12872 ;;		_Sensor_Acq_ExecuteScan
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876                           
 12877                           ;psect for function _MTOUCH_CVD_ScanA_0
 12878  126F                     _MTOUCH_CVD_ScanA_0:
 12879  126F                     l6157:	
 12880                           ;incstack = 0
 12881                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
 12882                           
 12883  126F  0022               	banksel	270	;# 
 12884  1270  170E               	bsf	14,6	;# 
 12885  1271  0021               	banksel	157	;# 
 12886  1272  3021               	movlw	33	;# 
 12887  1273  009D               	movwf	29	;# 
 12888  1274                     l6159:
 12889                           
 12890                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(16u);
 12891  1274  3005               	movlw	5
 12892  1275                     u6717:
 12893  1275  0B89               	decfsz	9,f
 12894  1276  2A75               	goto	u6717
 12895  1277  0000               	nop
 12896  1278  308C               	movlw	140	;# 
 12897  1279  0084               	movwf	4	;# 
 12898  127A  3000               	movlw	0	;# 
 12899  127B  0085               	movwf	5	;# 
 12900  127C  300C               	movlw	12	;# 
 12901  127D  0086               	movwf	6	;# 
 12902  127E  3001               	movlw	1	;# 
 12903  127F  0087               	movwf	7	;# 
 12904  1280  3001               	movlw	1	;# 
 12905  1281  1400               	bsf	0,0	;# 
 12906  1282                     l6161:
 12907                           
 12908                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
 12909  1282  009D               	movwf	29	;# 
 12910  1283                     l6163:
 12911                           
 12912                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(8u);
 12913  1283  3200               	nop2	;2 cycle nop
 12914  1284  3200               	nop2	;2 cycle nop
 12915  1285  3200               	nop2	;2 cycle nop
 12916  1286  3200               	nop2	;2 cycle nop
 12917  1287  0021               	banksel	157	;# 
 12918  1288  149D               	bsf	29,1	;# 
 12919  1289                     l6165:
 12920                           
 12921                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
 12922  1289  3200               	nop2	;2 cycle nop
 12923  128A  0000               	nop
 12924  128B  0022               	banksel	268	;# 
 12925  128C  140C               	bsf	12,0	;# 
 12926  128D  1000               	bcf	0,0	;# 
 12927  128E                     l320:
 12928  128E  0008               	return
 12929  128F                     __end_of_MTOUCH_CVD_ScanA_0:
 12930                           
 12931                           	psect	text69
 12932  124F                     __ptext69:	
 12933 ;; *************** function _MTOUCH_CVD_ScanA_8 *****************
 12934 ;; Defined at:
 12935 ;;		line 1066 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;		None
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;		None
 12940 ;; Return value:  Size  Location     Type
 12941 ;;                  1    wreg      void 
 12942 ;; Registers used:
 12943 ;;		wreg
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/0
 12946 ;;		On exit  : 0/0
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;Total ram usage:        0 bytes
 12954 ;; Hardware stack levels used: 1
 12955 ;; Hardware stack levels required when called: 4
 12956 ;; This function calls:
 12957 ;;		Nothing
 12958 ;; This function is called by:
 12959 ;;		_Sensor_Acq_ExecuteScan
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           
 12964                           ;psect for function _MTOUCH_CVD_ScanA_8
 12965  124F                     _MTOUCH_CVD_ScanA_8:
 12966  124F                     l6317:	
 12967                           ;incstack = 0
 12968                           ; Regs used in _MTOUCH_CVD_ScanA_8: [wreg]
 12969                           
 12970  124F  0022               	banksel	270	;# 
 12971  1250  158E               	bsf	14,3	;# 
 12972  1251  0021               	banksel	157	;# 
 12973  1252  301D               	movlw	29	;# 
 12974  1253  009D               	movwf	29	;# 
 12975  1254                     l6319:
 12976                           
 12977                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1078:     _delay(16u);
 12978  1254  3005               	movlw	5
 12979  1255                     u6727:
 12980  1255  0B89               	decfsz	9,f
 12981  1256  2A55               	goto	u6727
 12982  1257  0000               	nop
 12983  1258  308E               	movlw	142	;# 
 12984  1259  0084               	movwf	4	;# 
 12985  125A  3000               	movlw	0	;# 
 12986  125B  0085               	movwf	5	;# 
 12987  125C  300E               	movlw	14	;# 
 12988  125D  0086               	movwf	6	;# 
 12989  125E  3001               	movlw	1	;# 
 12990  125F  0087               	movwf	7	;# 
 12991  1260  3021               	movlw	33	;# 
 12992  1261  1700               	bsf	0,6	;# 
 12993  1262                     l6321:
 12994                           
 12995                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1096:     _delay(0u);
 12996  1262  009D               	movwf	29	;# 
 12997  1263                     l6323:
 12998                           
 12999                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1102:     _delay(8u);
 13000  1263  3200               	nop2	;2 cycle nop
 13001  1264  3200               	nop2	;2 cycle nop
 13002  1265  3200               	nop2	;2 cycle nop
 13003  1266  3200               	nop2	;2 cycle nop
 13004  1267  0021               	banksel	157	;# 
 13005  1268  149D               	bsf	29,1	;# 
 13006  1269                     l6325:
 13007                           
 13008                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1109:     _delay(3u);
 13009  1269  3200               	nop2	;2 cycle nop
 13010  126A  0000               	nop
 13011  126B  0022               	banksel	270	;# 
 13012  126C  170E               	bsf	14,6	;# 
 13013  126D  1300               	bcf	0,6	;# 
 13014  126E                     l368:
 13015  126E  0008               	return
 13016  126F                     __end_of_MTOUCH_CVD_ScanA_8:
 13017                           
 13018                           	psect	text70
 13019  1097                     __ptext70:	
 13020 ;; *************** function _MTOUCH_Random *****************
 13021 ;; Defined at:
 13022 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;		None
 13025 ;; Auto vars:     Size  Location     Type
 13026 ;;		None
 13027 ;; Return value:  Size  Location     Type
 13028 ;;                  1    wreg      unsigned char 
 13029 ;; Registers used:
 13030 ;;		wreg, status,2, status,0
 13031 ;; Tracked objects:
 13032 ;;		On entry : 0/0
 13033 ;;		On exit  : 0/0
 13034 ;;		Unchanged: 0/0
 13035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13040 ;;Total ram usage:        1 bytes
 13041 ;; Hardware stack levels used: 1
 13042 ;; Hardware stack levels required when called: 4
 13043 ;; This function calls:
 13044 ;;		Nothing
 13045 ;; This function is called by:
 13046 ;;		_Sensor_Acq_ExecutePacket
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           
 13051                           ;psect for function _MTOUCH_Random
 13052  1097                     _MTOUCH_Random:
 13053  1097                     l6357:	
 13054                           ;incstack = 0
 13055                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
 13056                           
 13057                           
 13058                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
 13059  1097  1C7B               	btfss	MTOUCH_Random@seed,0
 13060  1098  289A               	goto	u4501
 13061  1099  289B               	goto	u4500
 13062  109A                     u4501:
 13063  109A  28A0               	goto	l6361
 13064  109B                     u4500:
 13065  109B                     l6359:
 13066                           
 13067                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
 13068  109B  367B               	lsrf	MTOUCH_Random@seed,w
 13069  109C  00F2               	movwf	??_MTOUCH_Random
 13070  109D  0872               	movf	??_MTOUCH_Random,w
 13071  109E  00FB               	movwf	MTOUCH_Random@seed
 13072                           
 13073                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
 13074  109F  28A9               	goto	l6365
 13075  10A0                     l6361:
 13076                           
 13077                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
 13078  10A0  367B               	lsrf	MTOUCH_Random@seed,w
 13079  10A1  00F2               	movwf	??_MTOUCH_Random
 13080  10A2  0872               	movf	??_MTOUCH_Random,w
 13081  10A3  00FB               	movwf	MTOUCH_Random@seed
 13082  10A4                     l6363:
 13083                           
 13084                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
 13085  10A4  087B               	movf	MTOUCH_Random@seed,w
 13086  10A5  3AB4               	xorlw	180
 13087  10A6  00F2               	movwf	??_MTOUCH_Random
 13088  10A7  0872               	movf	??_MTOUCH_Random,w
 13089  10A8  00FB               	movwf	MTOUCH_Random@seed
 13090  10A9                     l6365:
 13091                           
 13092                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
 13093  10A9  087B               	movf	MTOUCH_Random@seed,w
 13094  10AA  390F               	andlw	15
 13095  10AB                     l378:
 13096  10AB  0008               	return
 13097  10AC                     __end_of_MTOUCH_Random:
 13098                           
 13099                           	psect	text71
 13100  1FC5                     __ptext71:	
 13101 ;; *************** function _MTOUCH_Delay *****************
 13102 ;; Defined at:
 13103 ;;		line 370 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13104 ;; Parameters:    Size  Location     Type
 13105 ;;		None
 13106 ;; Auto vars:     Size  Location     Type
 13107 ;;  i               1    3[COMMON] unsigned char 
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  1    wreg      void 
 13110 ;; Registers used:
 13111 ;;		wreg, status,2, status,0
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/0
 13114 ;;		On exit  : 0/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13121 ;;Total ram usage:        2 bytes
 13122 ;; Hardware stack levels used: 1
 13123 ;; Hardware stack levels required when called: 4
 13124 ;; This function calls:
 13125 ;;		Nothing
 13126 ;; This function is called by:
 13127 ;;		_Sensor_Acq_ExecutePacket
 13128 ;; This function uses a non-reentrant model
 13129 ;;
 13130                           
 13131                           
 13132                           ;psect for function _MTOUCH_Delay
 13133  1FC5                     _MTOUCH_Delay:
 13134  1FC5                     l6405:	
 13135                           ;incstack = 0
 13136                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
 13137                           
 13138                           
 13139                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 372:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
 13140  1FC5  0020               	movlb	0	; select bank0
 13141  1FC6  0866               	movf	_sample_delay,w
 13142  1FC7  00F2               	movwf	??_MTOUCH_Delay
 13143  1FC8  0872               	movf	??_MTOUCH_Delay,w
 13144  1FC9  00F3               	movwf	MTOUCH_Delay@i
 13145  1FCA                     l6407:
 13146  1FCA  0873               	movf	MTOUCH_Delay@i,w
 13147  1FCB  1D03               	btfss	3,2
 13148  1FCC  2FCE               	goto	u4551
 13149  1FCD  2FCF               	goto	u4550
 13150  1FCE                     u4551:
 13151  1FCE  2FD0               	goto	l6411
 13152  1FCF                     u4550:
 13153  1FCF  2FD7               	goto	l177
 13154  1FD0                     l6411:
 13155                           
 13156                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 373:     { }
 13157  1FD0  3001               	movlw	1
 13158  1FD1  02F3               	subwf	MTOUCH_Delay@i,f
 13159  1FD2  0873               	movf	MTOUCH_Delay@i,w
 13160  1FD3  1D03               	btfss	3,2
 13161  1FD4  2FD6               	goto	u4561
 13162  1FD5  2FD7               	goto	u4560
 13163  1FD6                     u4561:
 13164  1FD6  2FD0               	goto	l6411
 13165  1FD7                     u4560:
 13166  1FD7                     l177:
 13167  1FD7  0008               	return
 13168  1FD8                     __end_of_MTOUCH_Delay:
 13169                           
 13170                           	psect	text72
 13171  1ED4                     __ptext72:	
 13172 ;; *************** function _MTOUCH_Initialize *****************
 13173 ;; Defined at:
 13174 ;;		line 81 in file "mcc_generated_files/mtouch/mtouch.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;Total ram usage:        0 bytes
 13193 ;; Hardware stack levels used: 1
 13194 ;; Hardware stack levels required when called: 8
 13195 ;; This function calls:
 13196 ;;		_MTOUCH_Button_InitializeAll
 13197 ;;		_MTOUCH_Sensor_InitializeAll
 13198 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 13199 ;;		_MTOUCH_Sensor_Scan_Initialize
 13200 ;; This function is called by:
 13201 ;;		_MTOUCH_Service_Mainloop
 13202 ;;		_SYSTEM_Initialize
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function _MTOUCH_Initialize
 13208  1ED4                     _MTOUCH_Initialize:
 13209  1ED4                     l6823:	
 13210                           ;incstack = 0
 13211                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13212                           
 13213                           
 13214                           ;mcc_generated_files/mtouch/mtouch.c: 83:     MTOUCH_Sensor_InitializeAll();
 13215  1ED4  319F  27A1  319E   	fcall	_MTOUCH_Sensor_InitializeAll
 13216  1ED7                     l6825:
 13217                           
 13218                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Button_InitializeAll();
 13219  1ED7  3194  248F  319E   	fcall	_MTOUCH_Button_InitializeAll
 13220  1EDA                     l6827:
 13221                           
 13222                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Sensor_Sampled_ResetAll();
 13223  1EDA  3197  2705  319E   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
 13224  1EDD                     l6829:
 13225                           
 13226                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Sensor_Scan_Initialize();
 13227  1EDD  319E  2670  319E   	fcall	_MTOUCH_Sensor_Scan_Initialize
 13228  1EE0                     l296:
 13229  1EE0  0008               	return
 13230  1EE1                     __end_of_MTOUCH_Initialize:
 13231                           
 13232                           	psect	text73
 13233  1E70                     __ptext73:	
 13234 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
 13235 ;; Defined at:
 13236 ;;		line 179 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13237 ;; Parameters:    Size  Location     Type
 13238 ;;		None
 13239 ;; Auto vars:     Size  Location     Type
 13240 ;;		None
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  1    wreg      void 
 13243 ;; Registers used:
 13244 ;;		wreg, status,2
 13245 ;; Tracked objects:
 13246 ;;		On entry : 0/0
 13247 ;;		On exit  : 0/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;Total ram usage:        0 bytes
 13255 ;; Hardware stack levels used: 1
 13256 ;; Hardware stack levels required when called: 4
 13257 ;; This function calls:
 13258 ;;		Nothing
 13259 ;; This function is called by:
 13260 ;;		_Sensor_Acq_ExecutePacket
 13261 ;;		_MTOUCH_Initialize
 13262 ;; This function uses a non-reentrant model
 13263 ;;
 13264                           
 13265                           
 13266                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
 13267  1E70                     _MTOUCH_Sensor_Scan_Initialize:
 13268  1E70                     l6351:	
 13269                           ;incstack = 0
 13270                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
 13271                           
 13272                           
 13273                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 182:     ADCON0 = (uint8_t)0;
 13274  1E70  0021               	movlb	1	; select bank1
 13275  1E71  019D               	clrf	29	;volatile
 13276  1E72                     l6353:
 13277                           
 13278                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 183:     ADCON1 = (uint8_t)( 0x1<<7 | 0x5<<
      +                          4 | 0x0 );
 13279  1E72  30D0               	movlw	208
 13280  1E73  009E               	movwf	30	;volatile
 13281  1E74                     l119:
 13282  1E74  0008               	return
 13283  1E75                     __end_of_MTOUCH_Sensor_Scan_Initialize:
 13284                           
 13285                           	psect	text74
 13286  1705                     __ptext74:	
 13287 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
 13288 ;; Defined at:
 13289 ;;		line 554 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;		None
 13292 ;; Auto vars:     Size  Location     Type
 13293 ;;  sensor          2    2[BANK0 ] PTR struct .
 13294 ;;		 -> mtouch_sensor(81), 
 13295 ;; Return value:  Size  Location     Type
 13296 ;;                  1    wreg      void 
 13297 ;; Registers used:
 13298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;Total ram usage:        4 bytes
 13309 ;; Hardware stack levels used: 1
 13310 ;; Hardware stack levels required when called: 5
 13311 ;; This function calls:
 13312 ;;		_Sensor_Sampled_Reset
 13313 ;; This function is called by:
 13314 ;;		_MTOUCH_Initialize
 13315 ;;		_MTOUCH_Service_Mainloop
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319                           
 13320                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
 13321  1705                     _MTOUCH_Sensor_Sampled_ResetAll:
 13322  1705                     l6721:	
 13323                           ;incstack = 0
 13324                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 13325                           
 13326                           
 13327                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 556:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 557:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[9u -1];sensor++)
 13328  1705  300F               	movlw	15
 13329  1706  0020               	movlb	0	; select bank0
 13330  1707  00A2               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
 13331  1708  3023               	movlw	35
 13332  1709  00A3               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1
 13333  170A  3057               	movlw	87
 13334  170B  00A0               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 13335  170C  3023               	movlw	35
 13336  170D  00A1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll+1
 13337  170E  0823               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
 13338  170F  0221               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll+1,w
 13339  1710  1D03               	skipz
 13340  1711  2F14               	goto	u4955
 13341  1712  0822               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 13342  1713  0220               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 13343  1714                     u4955:
 13344  1714  1803               	skipnc
 13345  1715  2F17               	goto	u4951
 13346  1716  2F18               	goto	u4950
 13347  1717                     u4951:
 13348  1717  2F19               	goto	l6725
 13349  1718                     u4950:
 13350  1718  2F33               	goto	l248
 13351  1719                     l6725:
 13352                           
 13353                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 558:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 559:         Sensor_Sampled_Reset(sensor);
 13354  1719  0823               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
 13355  171A  00F9               	movwf	Sensor_Sampled_Reset@sensor+1
 13356  171B  0822               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 13357  171C  00F8               	movwf	Sensor_Sampled_Reset@sensor
 13358  171D  319E  2699  3197   	fcall	_Sensor_Sampled_Reset
 13359  1720                     l6727:
 13360                           
 13361                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 560:     }
 13362  1720  3009               	movlw	9
 13363  1721  0020               	movlb	0	; select bank0
 13364  1722  07A2               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
 13365  1723  3000               	movlw	0
 13366  1724  3DA3               	addwfc	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,f
 13367  1725                     l6729:
 13368  1725  3057               	movlw	87
 13369  1726  00A0               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 13370  1727  3023               	movlw	35
 13371  1728  00A1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll+1
 13372  1729  0823               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
 13373  172A  0221               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll+1,w
 13374  172B  1D03               	skipz
 13375  172C  2F2F               	goto	u4965
 13376  172D  0822               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 13377  172E  0220               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 13378  172F                     u4965:
 13379  172F  1803               	skipnc
 13380  1730  2F32               	goto	u4961
 13381  1731  2F33               	goto	u4960
 13382  1732                     u4961:
 13383  1732  2F19               	goto	l6725
 13384  1733                     u4960:
 13385  1733                     l248:
 13386  1733  0008               	return
 13387  1734                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
 13388                           
 13389                           	psect	text75
 13390  1FA1                     __ptext75:	
 13391 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
 13392 ;; Defined at:
 13393 ;;		line 164 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;		None
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;  sensor          1   10[BANK0 ] enum E2599
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;Total ram usage:        2 bytes
 13412 ;; Hardware stack levels used: 1
 13413 ;; Hardware stack levels required when called: 7
 13414 ;; This function calls:
 13415 ;;		_MTOUCH_Sensor_Initialize
 13416 ;; This function is called by:
 13417 ;;		_MTOUCH_Initialize
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           
 13422                           ;psect for function _MTOUCH_Sensor_InitializeAll
 13423  1FA1                     _MTOUCH_Sensor_InitializeAll:
 13424  1FA1                     l6681:	
 13425                           ;incstack = 0
 13426                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13427                           
 13428                           
 13429                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 166:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 167:     for (sensor = 0; sensor < 9u; sensor
      +                          ++)
 13430  1FA1  0020               	movlb	0	; select bank0
 13431  1FA2  01AA               	clrf	MTOUCH_Sensor_InitializeAll@sensor
 13432  1FA3                     l6687:
 13433                           
 13434                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 168:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 169:         MTOUCH_Sensor_Initialize(sensor);
 13435  1FA3  082A               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
 13436  1FA4  3195  251A  319F   	fcall	_MTOUCH_Sensor_Initialize
 13437  1FA7                     l6689:
 13438                           
 13439                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 170:     }
 13440  1FA7  3001               	movlw	1
 13441  1FA8  0020               	movlb	0	; select bank0
 13442  1FA9  00A9               	movwf	??_MTOUCH_Sensor_InitializeAll
 13443  1FAA  0829               	movf	??_MTOUCH_Sensor_InitializeAll,w
 13444  1FAB  07AA               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
 13445  1FAC                     l6691:
 13446  1FAC  3009               	movlw	9
 13447  1FAD  022A               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
 13448  1FAE  1C03               	skipc
 13449  1FAF  2FB1               	goto	u4921
 13450  1FB0  2FB2               	goto	u4920
 13451  1FB1                     u4921:
 13452  1FB1  2FA3               	goto	l6687
 13453  1FB2                     u4920:
 13454  1FB2                     l116:
 13455  1FB2  0008               	return
 13456  1FB3                     __end_of_MTOUCH_Sensor_InitializeAll:
 13457                           
 13458                           	psect	text76
 13459  151A                     __ptext76:	
 13460 ;; *************** function _MTOUCH_Sensor_Initialize *****************
 13461 ;; Defined at:
 13462 ;;		line 150 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13463 ;; Parameters:    Size  Location     Type
 13464 ;;  sensor          1    wreg     enum E2599
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;  sensor          1    8[BANK0 ] enum E2599
 13467 ;; Return value:  Size  Location     Type
 13468 ;;                  1    wreg      enum E2609
 13469 ;; Registers used:
 13470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13471 ;; Tracked objects:
 13472 ;;		On entry : 0/0
 13473 ;;		On exit  : 0/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;Total ram usage:        5 bytes
 13481 ;; Hardware stack levels used: 1
 13482 ;; Hardware stack levels required when called: 6
 13483 ;; This function calls:
 13484 ;;		_MTOUCH_Sensor_Enable
 13485 ;;		_Sensor_Sampled_Reset
 13486 ;;		___wmul
 13487 ;; This function is called by:
 13488 ;;		_MTOUCH_Sensor_InitializeAll
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           
 13493                           ;psect for function _MTOUCH_Sensor_Initialize
 13494  151A                     _MTOUCH_Sensor_Initialize:
 13495                           
 13496                           ;incstack = 0
 13497                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 13498                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
 13499  151A  0020               	movlb	0	; select bank0
 13500  151B  00A8               	movwf	MTOUCH_Sensor_Initialize@sensor
 13501  151C                     l6527:
 13502                           
 13503                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 150: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           151: {;mcc_generated_files/mtouch/mtouch_sensor.c: 152:     MTOUCH_Sensor_Enable(sensor
      +                          );
 13504  151C  0828               	movf	MTOUCH_Sensor_Initialize@sensor,w
 13505  151D  3194  24B0  3195   	fcall	_MTOUCH_Sensor_Enable
 13506                           
 13507                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 153:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
 13508  1520  0020               	movlb	0	; select bank0
 13509  1521  0828               	movf	MTOUCH_Sensor_Initialize@sensor,w
 13510  1522  00A4               	movwf	??_MTOUCH_Sensor_Initialize
 13511  1523  01A5               	clrf	??_MTOUCH_Sensor_Initialize+1
 13512  1524  0824               	movf	??_MTOUCH_Sensor_Initialize,w
 13513  1525  00F2               	movwf	___wmul@multiplier
 13514  1526  0825               	movf	??_MTOUCH_Sensor_Initialize+1,w
 13515  1527  00F3               	movwf	___wmul@multiplier+1
 13516  1528  3009               	movlw	9
 13517  1529  00F4               	movwf	___wmul@multiplicand
 13518  152A  3000               	movlw	0
 13519  152B  00F5               	movwf	___wmul@multiplicand+1
 13520  152C  3192  2211  3195   	fcall	___wmul
 13521  152F  300F               	movlw	15
 13522  1530  0020               	movlb	0	; select bank0
 13523  1531  00A6               	movwf	??_MTOUCH_Sensor_Initialize+2
 13524  1532  3023               	movlw	35
 13525  1533  00A7               	movwf	??_MTOUCH_Sensor_Initialize+3
 13526  1534  0872               	movf	?___wmul,w
 13527  1535  0726               	addwf	??_MTOUCH_Sensor_Initialize+2,w
 13528  1536  00F8               	movwf	Sensor_Sampled_Reset@sensor
 13529  1537  0873               	movf	?___wmul+1,w
 13530  1538  3D27               	addwfc	??_MTOUCH_Sensor_Initialize+3,w
 13531  1539  00F9               	movwf	Sensor_Sampled_Reset@sensor+1
 13532  153A  319E  2699  3195   	fcall	_Sensor_Sampled_Reset
 13533  153D                     l111:
 13534  153D  0008               	return
 13535  153E                     __end_of_MTOUCH_Sensor_Initialize:
 13536                           
 13537                           	psect	text77
 13538  1E99                     __ptext77:	
 13539 ;; *************** function _Sensor_Sampled_Reset *****************
 13540 ;; Defined at:
 13541 ;;		line 571 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  sensor          2    8[COMMON] PTR struct .
 13544 ;;		 -> mtouch_sensor(81), 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;		None
 13547 ;; Return value:  Size  Location     Type
 13548 ;;                  1    wreg      void 
 13549 ;; Registers used:
 13550 ;;		wreg, fsr1l, fsr1h
 13551 ;; Tracked objects:
 13552 ;;		On entry : 0/0
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;Total ram usage:        2 bytes
 13561 ;; Hardware stack levels used: 1
 13562 ;; Hardware stack levels required when called: 4
 13563 ;; This function calls:
 13564 ;;		Nothing
 13565 ;; This function is called by:
 13566 ;;		_MTOUCH_Sensor_Initialize
 13567 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571                           
 13572                           ;psect for function _Sensor_Sampled_Reset
 13573  1E99                     _Sensor_Sampled_Reset:
 13574  1E99                     l6429:	
 13575                           ;incstack = 0
 13576                           ; Regs used in _Sensor_Sampled_Reset: [wregfsr1]
 13577                           
 13578                           
 13579                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 571: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          572: {;mcc_generated_files/mtouch/mtouch_sensor.c: 573:     sensor->sampled = 0;
 13580  1E99  0878               	movf	Sensor_Sampled_Reset@sensor,w
 13581  1E9A  0086               	movwf	6
 13582  1E9B  0879               	movf	Sensor_Sampled_Reset@sensor+1,w
 13583  1E9C  0087               	movwf	7
 13584  1E9D  3148               	addfsr 1,8
 13585  1E9E  1081               	bcf	1,1
 13586  1E9F                     l256:
 13587  1E9F  0008               	return
 13588  1EA0                     __end_of_Sensor_Sampled_Reset:
 13589                           
 13590                           	psect	text78
 13591  14B0                     __ptext78:	
 13592 ;; *************** function _MTOUCH_Sensor_Enable *****************
 13593 ;; Defined at:
 13594 ;;		line 488 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;  sensor          1    wreg     enum E2599
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;  sensor          1    8[COMMON] enum E2599
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  1    wreg      void 
 13601 ;; Registers used:
 13602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13603 ;; Tracked objects:
 13604 ;;		On entry : 0/0
 13605 ;;		On exit  : 0/0
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13610 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13611 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13612 ;;Total ram usage:        5 bytes
 13613 ;; Hardware stack levels used: 1
 13614 ;; Hardware stack levels required when called: 5
 13615 ;; This function calls:
 13616 ;;		___wmul
 13617 ;; This function is called by:
 13618 ;;		_MTOUCH_Sensor_Initialize
 13619 ;; This function uses a non-reentrant model
 13620 ;;
 13621                           
 13622                           
 13623                           ;psect for function _MTOUCH_Sensor_Enable
 13624  14B0                     _MTOUCH_Sensor_Enable:
 13625                           
 13626                           ;incstack = 0
 13627                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13628                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
 13629  14B0  00F8               	movwf	MTOUCH_Sensor_Enable@sensor
 13630  14B1                     l6425:
 13631                           
 13632                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 488: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 489: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 490:     if(sensor < 9u)
 13633  14B1  3009               	movlw	9
 13634  14B2  0278               	subwf	MTOUCH_Sensor_Enable@sensor,w
 13635  14B3  1803               	skipnc
 13636  14B4  2CB6               	goto	u4581
 13637  14B5  2CB7               	goto	u4580
 13638  14B6                     u4581:
 13639  14B6  2CD2               	goto	l217
 13640  14B7                     u4580:
 13641  14B7                     l6427:
 13642                           
 13643                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 491:         mtouch_sensor[sensor].enabled 
      +                          = 1;
 13644  14B7  0878               	movf	MTOUCH_Sensor_Enable@sensor,w
 13645  14B8  0020               	movlb	0	; select bank0
 13646  14B9  00A0               	movwf	??_MTOUCH_Sensor_Enable
 13647  14BA  01A1               	clrf	??_MTOUCH_Sensor_Enable+1
 13648  14BB  0820               	movf	??_MTOUCH_Sensor_Enable,w
 13649  14BC  00F2               	movwf	___wmul@multiplier
 13650  14BD  0821               	movf	??_MTOUCH_Sensor_Enable+1,w
 13651  14BE  00F3               	movwf	___wmul@multiplier+1
 13652  14BF  3009               	movlw	9
 13653  14C0  00F4               	movwf	___wmul@multiplicand
 13654  14C1  3000               	movlw	0
 13655  14C2  00F5               	movwf	___wmul@multiplicand+1
 13656  14C3  3192  2211  3194   	fcall	___wmul
 13657  14C6  3017               	movlw	23
 13658  14C7  0020               	movlb	0	; select bank0
 13659  14C8  00A2               	movwf	??_MTOUCH_Sensor_Enable+2
 13660  14C9  3023               	movlw	35
 13661  14CA  00A3               	movwf	??_MTOUCH_Sensor_Enable+3
 13662  14CB  0872               	movf	?___wmul,w
 13663  14CC  0722               	addwf	??_MTOUCH_Sensor_Enable+2,w
 13664  14CD  0086               	movwf	6
 13665  14CE  0873               	movf	?___wmul+1,w
 13666  14CF  3D23               	addwfc	??_MTOUCH_Sensor_Enable+3,w
 13667  14D0  0087               	movwf	7
 13668  14D1  1401               	bsf	1,0
 13669  14D2                     l217:
 13670  14D2  0008               	return
 13671  14D3                     __end_of_MTOUCH_Sensor_Enable:
 13672                           
 13673                           	psect	text79
 13674  148F                     __ptext79:	
 13675 ;; *************** function _MTOUCH_Button_InitializeAll *****************
 13676 ;; Defined at:
 13677 ;;		line 219 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13678 ;; Parameters:    Size  Location     Type
 13679 ;;		None
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;  button          1    5[BANK0 ] enum E2826
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  1    wreg      void 
 13684 ;; Registers used:
 13685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;Total ram usage:        2 bytes
 13696 ;; Hardware stack levels used: 1
 13697 ;; Hardware stack levels required when called: 6
 13698 ;; This function calls:
 13699 ;;		_MTOUCH_Button_Initialize
 13700 ;;		_memcpy
 13701 ;; This function is called by:
 13702 ;;		_MTOUCH_Initialize
 13703 ;; This function uses a non-reentrant model
 13704 ;;
 13705                           
 13706                           
 13707                           ;psect for function _MTOUCH_Button_InitializeAll
 13708  148F                     _MTOUCH_Button_InitializeAll:
 13709  148F                     l6731:	
 13710                           ;incstack = 0
 13711                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13712                           
 13713                           
 13714                           ;mcc_generated_files/mtouch/mtouch_button.c: 221:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 223:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
 13715  148F  3060               	movlw	96
 13716  1490  00F2               	movwf	memcpy@d1
 13717  1491  3023               	movlw	35
 13718  1492  00F3               	movwf	memcpy@d1+1
 13719  1493  3000               	movlw	low (_mtouch_button_init| (0+32768))
 13720  1494  00F4               	movwf	memcpy@s1
 13721  1495  3090               	movlw	high (_mtouch_button_init| (0+32768))
 13722  1496  00F5               	movwf	memcpy@s1+1
 13723  1497  3090               	movlw	144
 13724  1498  00F6               	movwf	memcpy@n
 13725  1499  3000               	movlw	0
 13726  149A  00F7               	movwf	memcpy@n+1
 13727  149B  3196  267C  3194   	fcall	_memcpy
 13728  149E                     l6733:
 13729                           
 13730                           ;mcc_generated_files/mtouch/mtouch_button.c: 225:     for (button = 0; button < 9u; butt
      +                          on++)
 13731  149E  0020               	movlb	0	; select bank0
 13732  149F  01A5               	clrf	MTOUCH_Button_InitializeAll@button
 13733  14A0                     l6739:
 13734                           
 13735                           ;mcc_generated_files/mtouch/mtouch_button.c: 226:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 227:         MTOUCH_Button_Initialize(button);
 13736  14A0  0825               	movf	MTOUCH_Button_InitializeAll@button,w
 13737  14A1  3188  2041  3194   	fcall	_MTOUCH_Button_Initialize
 13738  14A4                     l6741:
 13739                           
 13740                           ;mcc_generated_files/mtouch/mtouch_button.c: 228:     }
 13741  14A4  3001               	movlw	1
 13742  14A5  00F9               	movwf	??_MTOUCH_Button_InitializeAll
 13743  14A6  0879               	movf	??_MTOUCH_Button_InitializeAll,w
 13744  14A7  0020               	movlb	0	; select bank0
 13745  14A8  07A5               	addwf	MTOUCH_Button_InitializeAll@button,f
 13746  14A9                     l6743:
 13747  14A9  3009               	movlw	9
 13748  14AA  0225               	subwf	MTOUCH_Button_InitializeAll@button,w
 13749  14AB  1C03               	skipc
 13750  14AC  2CAE               	goto	u4971
 13751  14AD  2CAF               	goto	u4970
 13752  14AE                     u4971:
 13753  14AE  2CA0               	goto	l6739
 13754  14AF                     u4970:
 13755  14AF                     l436:
 13756  14AF  0008               	return
 13757  14B0                     __end_of_MTOUCH_Button_InitializeAll:
 13758                           
 13759                           	psect	text80
 13760  167C                     __ptext80:	
 13761 ;; *************** function _memcpy *****************
 13762 ;; Defined at:
 13763 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memcpy.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;  d1              2    2[COMMON] PTR void 
 13766 ;;		 -> mtouch_button(144), 
 13767 ;;  s1              2    4[COMMON] PTR const void 
 13768 ;;		 -> mtouch_button_init(144), 
 13769 ;;  n               2    6[COMMON] unsigned int 
 13770 ;; Auto vars:     Size  Location     Type
 13771 ;;  s               2    3[BANK0 ] PTR const unsigned char 
 13772 ;;		 -> mtouch_button_init(144), 
 13773 ;;  d               2    1[BANK0 ] PTR unsigned char 
 13774 ;;		 -> mtouch_button(144), 
 13775 ;;  tmp             1    0[BANK0 ] unsigned char 
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  2    2[COMMON] PTR void 
 13778 ;; Registers used:
 13779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 0/0
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13785 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13786 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13788 ;;      Totals:         7       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13789 ;;Total ram usage:       12 bytes
 13790 ;; Hardware stack levels used: 1
 13791 ;; Hardware stack levels required when called: 4
 13792 ;; This function calls:
 13793 ;;		Nothing
 13794 ;; This function is called by:
 13795 ;;		_MTOUCH_Button_InitializeAll
 13796 ;; This function uses a non-reentrant model
 13797 ;;
 13798                           
 13799                           
 13800                           ;psect for function _memcpy
 13801  167C                     _memcpy:
 13802  167C                     l6585:	
 13803                           ;incstack = 0
 13804                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 13805                           
 13806  167C  0875               	movf	memcpy@s1+1,w
 13807  167D  0020               	movlb	0	; select bank0
 13808  167E  00A4               	movwf	memcpy@s+1
 13809  167F  0874               	movf	memcpy@s1,w
 13810  1680  00A3               	movwf	memcpy@s
 13811  1681  0873               	movf	memcpy@d1+1,w
 13812  1682  00A2               	movwf	memcpy@d+1
 13813  1683  0872               	movf	memcpy@d1,w
 13814  1684  00A1               	movwf	memcpy@d
 13815  1685  2E9C               	goto	l6595
 13816  1686                     l6587:
 13817  1686  0823               	movf	memcpy@s,w
 13818  1687  0084               	movwf	4
 13819  1688  0824               	movf	memcpy@s+1,w
 13820  1689  0085               	movwf	5
 13821  168A  0800               	movf	0,w	;code access
 13822  168B  00F8               	movwf	??_memcpy
 13823  168C  0878               	movf	??_memcpy,w
 13824  168D  00A0               	movwf	memcpy@tmp
 13825  168E                     l6589:
 13826  168E  3001               	movlw	1
 13827  168F  07A3               	addwf	memcpy@s,f
 13828  1690  3000               	movlw	0
 13829  1691  3DA4               	addwfc	memcpy@s+1,f
 13830  1692                     l6591:
 13831  1692  0821               	movf	memcpy@d,w
 13832  1693  0086               	movwf	6
 13833  1694  0822               	movf	memcpy@d+1,w
 13834  1695  0087               	movwf	7
 13835  1696  0820               	movf	memcpy@tmp,w
 13836  1697  0081               	movwf	1
 13837  1698                     l6593:
 13838  1698  3001               	movlw	1
 13839  1699  07A1               	addwf	memcpy@d,f
 13840  169A  3000               	movlw	0
 13841  169B  3DA2               	addwfc	memcpy@d+1,f
 13842  169C                     l6595:
 13843  169C  3001               	movlw	1
 13844  169D  02F6               	subwf	memcpy@n,f
 13845  169E  3000               	movlw	0
 13846  169F  3BF7               	subwfb	memcpy@n+1,f
 13847  16A0  0A76               	incf	memcpy@n,w
 13848  16A1  1D03               	skipz
 13849  16A2  2EA7               	goto	u4751
 13850  16A3  0A77               	incf	memcpy@n+1,w
 13851  16A4  1D03               	btfss	3,2
 13852  16A5  2EA7               	goto	u4751
 13853  16A6  2EA8               	goto	u4750
 13854  16A7                     u4751:
 13855  16A7  2E86               	goto	l6587
 13856  16A8                     u4750:
 13857  16A8                     l1939:
 13858  16A8  0008               	return
 13859  16A9                     __end_of_memcpy:
 13860                           
 13861                           	psect	text81
 13862  1F8F                     __ptext81:	
 13863 ;; *************** function _MTOUCH_Button_ServiceAll *****************
 13864 ;; Defined at:
 13865 ;;		line 237 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13866 ;; Parameters:    Size  Location     Type
 13867 ;;		None
 13868 ;; Auto vars:     Size  Location     Type
 13869 ;;  button          1   25[BANK0 ] enum E2826
 13870 ;; Return value:  Size  Location     Type
 13871 ;;                  1    wreg      void 
 13872 ;; Registers used:
 13873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13874 ;; Tracked objects:
 13875 ;;		On entry : 0/0
 13876 ;;		On exit  : 0/0
 13877 ;;		Unchanged: 0/0
 13878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;Total ram usage:        2 bytes
 13884 ;; Hardware stack levels used: 1
 13885 ;; Hardware stack levels required when called: 9
 13886 ;; This function calls:
 13887 ;;		_Button_Service
 13888 ;; This function is called by:
 13889 ;;		_MTOUCH_Service_Mainloop
 13890 ;; This function uses a non-reentrant model
 13891 ;;
 13892                           
 13893                           
 13894                           ;psect for function _MTOUCH_Button_ServiceAll
 13895  1F8F                     _MTOUCH_Button_ServiceAll:
 13896  1F8F                     l6831:	
 13897                           ;incstack = 0
 13898                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13899                           
 13900                           
 13901                           ;mcc_generated_files/mtouch/mtouch_button.c: 239:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 242:     for (button = 0; button < 9u; button
      +                          ++)
 13902  1F8F  0020               	movlb	0	; select bank0
 13903  1F90  01B9               	clrf	MTOUCH_Button_ServiceAll@button
 13904  1F91                     l6837:
 13905                           
 13906                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 244:         Button_Service(button);
 13907  1F91  0839               	movf	MTOUCH_Button_ServiceAll@button,w
 13908  1F92  318A  2298  319F   	fcall	_Button_Service
 13909  1F95                     l6839:
 13910                           
 13911                           ;mcc_generated_files/mtouch/mtouch_button.c: 245:     }
 13912  1F95  3001               	movlw	1
 13913  1F96  0020               	movlb	0	; select bank0
 13914  1F97  00B8               	movwf	??_MTOUCH_Button_ServiceAll
 13915  1F98  0838               	movf	??_MTOUCH_Button_ServiceAll,w
 13916  1F99  07B9               	addwf	MTOUCH_Button_ServiceAll@button,f
 13917  1F9A                     l6841:
 13918  1F9A  3009               	movlw	9
 13919  1F9B  0239               	subwf	MTOUCH_Button_ServiceAll@button,w
 13920  1F9C  1C03               	skipc
 13921  1F9D  2F9F               	goto	u5101
 13922  1F9E  2FA0               	goto	u5100
 13923  1F9F                     u5101:
 13924  1F9F  2F91               	goto	l6837
 13925  1FA0                     u5100:
 13926  1FA0                     l441:
 13927  1FA0  0008               	return
 13928  1FA1                     __end_of_MTOUCH_Button_ServiceAll:
 13929                           
 13930                           	psect	text82
 13931  0A98                     __ptext82:	
 13932 ;; *************** function _Button_Service *****************
 13933 ;; Defined at:
 13934 ;;		line 248 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13935 ;; Parameters:    Size  Location     Type
 13936 ;;  name            1    wreg     enum E2826
 13937 ;; Auto vars:     Size  Location     Type
 13938 ;;  name            1   21[BANK0 ] enum E2826
 13939 ;;  button          2   22[BANK0 ] PTR struct .
 13940 ;;		 -> mtouch_button(144), 
 13941 ;; Return value:  Size  Location     Type
 13942 ;;                  1    wreg      void 
 13943 ;; Registers used:
 13944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13952 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13953 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13954 ;;Total ram usage:        7 bytes
 13955 ;; Hardware stack levels used: 1
 13956 ;; Hardware stack levels required when called: 8
 13957 ;; This function calls:
 13958 ;;		_Button_Deviation_Update
 13959 ;;		_Button_Reading_Update
 13960 ;;		_Button_State_Initializing
 13961 ;;		_Button_State_NotPressed
 13962 ;;		_Button_State_Pressed
 13963 ;;		_MTOUCH_Button_Initialize
 13964 ;;		_MTOUCH_Sensor_isCalibrated
 13965 ;;		_MTOUCH_Sensor_wasSampled
 13966 ;; This function is called by:
 13967 ;;		_MTOUCH_Button_ServiceAll
 13968 ;; This function uses a non-reentrant model
 13969 ;;
 13970                           
 13971                           
 13972                           ;psect for function _Button_Service
 13973  0A98                     _Button_Service:
 13974                           
 13975                           ;incstack = 0
 13976                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13977                           ;Button_Service@name stored from wreg
 13978  0A98  0020               	movlb	0	; select bank0
 13979  0A99  00B5               	movwf	Button_Service@name
 13980  0A9A                     l6757:
 13981                           
 13982                           ;mcc_generated_files/mtouch/mtouch_button.c: 248: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 249: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 250:     mtouch_button_t* button = &mtouch_button[name];
 13983  0A9A  0835               	movf	Button_Service@name,w
 13984  0A9B  00B1               	movwf	??_Button_Service
 13985  0A9C  01B2               	clrf	??_Button_Service+1
 13986  0A9D  0EB1               	swapf	??_Button_Service,f
 13987  0A9E  0EB2               	swapf	??_Button_Service+1,f
 13988  0A9F  30F0               	movlw	240
 13989  0AA0  05B2               	andwf	??_Button_Service+1,f
 13990  0AA1  0831               	movf	??_Button_Service,w
 13991  0AA2  390F               	andlw	15
 13992  0AA3  04B2               	iorwf	??_Button_Service+1,f
 13993  0AA4  30F0               	movlw	240
 13994  0AA5  05B1               	andwf	??_Button_Service,f
 13995  0AA6  3060               	movlw	96
 13996  0AA7  00B3               	movwf	??_Button_Service+2
 13997  0AA8  3023               	movlw	35
 13998  0AA9  00B4               	movwf	??_Button_Service+3
 13999  0AAA  0831               	movf	??_Button_Service,w
 14000  0AAB  0733               	addwf	??_Button_Service+2,w
 14001  0AAC  00B6               	movwf	Button_Service@button
 14002  0AAD  0832               	movf	??_Button_Service+1,w
 14003  0AAE  3D34               	addwfc	??_Button_Service+3,w
 14004  0AAF  00B7               	movwf	Button_Service@button+1
 14005  0AB0                     l6759:
 14006                           
 14007                           ;mcc_generated_files/mtouch/mtouch_button.c: 252:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
 14008  0AB0  0836               	movf	Button_Service@button,w
 14009  0AB1  0086               	movwf	6
 14010  0AB2  0837               	movf	Button_Service@button+1,w
 14011  0AB3  0087               	movwf	7
 14012  0AB4  3141               	addfsr 1,1
 14013  0AB5  0801               	movf	1,w
 14014  0AB6  3195  253E  318A   	fcall	_MTOUCH_Sensor_wasSampled
 14015  0AB9  3A00               	xorlw	0
 14016  0ABA  1903               	skipnz
 14017  0ABB  2ABD               	goto	u4991
 14018  0ABC  2ABE               	goto	u4990
 14019  0ABD                     u4991:
 14020  0ABD  2B04               	goto	l446
 14021  0ABE                     u4990:
 14022  0ABE                     l6761:
 14023  0ABE  0020               	movlb	0	; select bank0
 14024  0ABF  0836               	movf	Button_Service@button,w
 14025  0AC0  0086               	movwf	6
 14026  0AC1  0837               	movf	Button_Service@button+1,w
 14027  0AC2  0087               	movwf	7
 14028  0AC3  3141               	addfsr 1,1
 14029  0AC4  0801               	movf	1,w
 14030  0AC5  319E  265B  318A   	fcall	_MTOUCH_Sensor_isCalibrated
 14031  0AC8  3A00               	xorlw	0
 14032  0AC9  1903               	skipnz
 14033  0ACA  2ACC               	goto	u5001
 14034  0ACB  2ACD               	goto	u5000
 14035  0ACC                     u5001:
 14036  0ACC  2B04               	goto	l446
 14037  0ACD                     u5000:
 14038  0ACD                     l6763:
 14039                           
 14040                           ;mcc_generated_files/mtouch/mtouch_button.c: 253:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 254:         Button_Reading_Update(button);
 14041  0ACD  0020               	movlb	0	; select bank0
 14042  0ACE  0837               	movf	Button_Service@button+1,w
 14043  0ACF  00AA               	movwf	Button_Reading_Update@button+1
 14044  0AD0  0836               	movf	Button_Service@button,w
 14045  0AD1  00A9               	movwf	Button_Reading_Update@button
 14046  0AD2  3191  2106  318A   	fcall	_Button_Reading_Update
 14047                           
 14048                           ;mcc_generated_files/mtouch/mtouch_button.c: 255:         Button_Deviation_Update(button
      +                          );
 14049  0AD5  0020               	movlb	0	; select bank0
 14050  0AD6  0837               	movf	Button_Service@button+1,w
 14051  0AD7  00F3               	movwf	Button_Deviation_Update@button+1
 14052  0AD8  0836               	movf	Button_Service@button,w
 14053  0AD9  00F2               	movwf	Button_Deviation_Update@button
 14054  0ADA  318D  255A  318A   	fcall	_Button_Deviation_Update
 14055  0ADD                     l6765:
 14056                           
 14057                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
 14058  0ADD  0020               	movlb	0	; select bank0
 14059  0ADE  0836               	movf	Button_Service@button,w
 14060  0ADF  0086               	movwf	6
 14061  0AE0  0837               	movf	Button_Service@button+1,w
 14062  0AE1  0087               	movwf	7
 14063  0AE2  3142               	addfsr 1,2
 14064  0AE3  3003               	movlw	3
 14065  0AE4  0201               	subwf	1,w
 14066  0AE5  1C03               	skipc
 14067  0AE6  2AE8               	goto	u5011
 14068  0AE7  2AE9               	goto	u5010
 14069  0AE8                     u5011:
 14070  0AE8  2AF1               	goto	l6769
 14071  0AE9                     u5010:
 14072  0AE9                     l6767:
 14073                           
 14074                           ;mcc_generated_files/mtouch/mtouch_button.c: 258:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 259:             MTOUCH_Button_Initialize(button->name);
 14075  0AE9  0836               	movf	Button_Service@button,w
 14076  0AEA  0086               	movwf	6
 14077  0AEB  0837               	movf	Button_Service@button+1,w
 14078  0AEC  0087               	movwf	7
 14079  0AED  0801               	movf	1,w
 14080  0AEE  3188  2041  318A   	fcall	_MTOUCH_Button_Initialize
 14081  0AF1                     l6769:
 14082                           
 14083                           ;mcc_generated_files/mtouch/mtouch_button.c: 261:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
 14084  0AF1  0020               	movlb	0	; select bank0
 14085  0AF2  0837               	movf	Button_Service@button+1,w
 14086  0AF3  00AC               	movwf	Button_State_Pressed@button+1
 14087  0AF4  0836               	movf	Button_Service@button,w
 14088  0AF5  00AB               	movwf	Button_State_Pressed@button
 14089  0AF6  0836               	movf	Button_Service@button,w
 14090  0AF7  0086               	movwf	6
 14091  0AF8  0837               	movf	Button_Service@button+1,w
 14092  0AF9  0087               	movwf	7
 14093  0AFA  3142               	addfsr 1,2
 14094  0AFB  3501               	lslf	1,w
 14095  0AFC  3EB7               	addlw	(low (_Button_StateMachine| 0))& (0+255)
 14096  0AFD  0086               	movwf	6
 14097  0AFE  0187               	clrf	7
 14098  0AFF  3F41               	moviw [1]fsr1
 14099  0B00  008A               	movwf	10
 14100  0B01  3F40               	moviw [0]fsr1
 14101  0B02  000A               	callw
 14102  0B03  318A               	pagesel	$
 14103  0B04                     l446:
 14104  0B04  0008               	return
 14105  0B05                     __end_of_Button_Service:
 14106                           
 14107                           	psect	text83
 14108  153E                     __ptext83:	
 14109 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
 14110 ;; Defined at:
 14111 ;;		line 563 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  sensor          1    wreg     enum E2599
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;  sensor          1    8[COMMON] enum E2599
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  1    wreg      _Bool 
 14118 ;; Registers used:
 14119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14127 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14128 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;Total ram usage:        5 bytes
 14130 ;; Hardware stack levels used: 1
 14131 ;; Hardware stack levels required when called: 5
 14132 ;; This function calls:
 14133 ;;		___wmul
 14134 ;; This function is called by:
 14135 ;;		_Button_Service
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           
 14140                           ;psect for function _MTOUCH_Sensor_wasSampled
 14141  153E                     _MTOUCH_Sensor_wasSampled:
 14142                           
 14143                           ;incstack = 0
 14144                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 14145                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
 14146  153E  00F8               	movwf	MTOUCH_Sensor_wasSampled@sensor
 14147  153F                     l6573:
 14148                           
 14149                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 563: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 564: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 565:     if(sensor < 9u)
 14150  153F  3009               	movlw	9
 14151  1540  0278               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
 14152  1541  1803               	skipnc
 14153  1542  2D44               	goto	u4741
 14154  1543  2D45               	goto	u4740
 14155  1544                     u4741:
 14156  1544  2D62               	goto	l6581
 14157  1545                     u4740:
 14158  1545                     l6575:
 14159                           
 14160                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 566:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
 14161  1545  0878               	movf	MTOUCH_Sensor_wasSampled@sensor,w
 14162  1546  0020               	movlb	0	; select bank0
 14163  1547  00A0               	movwf	??_MTOUCH_Sensor_wasSampled
 14164  1548  01A1               	clrf	??_MTOUCH_Sensor_wasSampled+1
 14165  1549  0820               	movf	??_MTOUCH_Sensor_wasSampled,w
 14166  154A  00F2               	movwf	___wmul@multiplier
 14167  154B  0821               	movf	??_MTOUCH_Sensor_wasSampled+1,w
 14168  154C  00F3               	movwf	___wmul@multiplier+1
 14169  154D  3009               	movlw	9
 14170  154E  00F4               	movwf	___wmul@multiplicand
 14171  154F  3000               	movlw	0
 14172  1550  00F5               	movwf	___wmul@multiplicand+1
 14173  1551  3192  2211  3195   	fcall	___wmul
 14174  1554  3017               	movlw	23
 14175  1555  0020               	movlb	0	; select bank0
 14176  1556  00A2               	movwf	??_MTOUCH_Sensor_wasSampled+2
 14177  1557  3023               	movlw	35
 14178  1558  00A3               	movwf	??_MTOUCH_Sensor_wasSampled+3
 14179  1559  0872               	movf	?___wmul,w
 14180  155A  0722               	addwf	??_MTOUCH_Sensor_wasSampled+2,w
 14181  155B  0086               	movwf	6
 14182  155C  0873               	movf	?___wmul+1,w
 14183  155D  3D23               	addwfc	??_MTOUCH_Sensor_wasSampled+3,w
 14184  155E  0087               	movwf	7
 14185  155F  0C01               	rrf	1,w
 14186  1560  3901               	andlw	1
 14187  1561  2D63               	goto	l252
 14188  1562                     l6581:
 14189                           
 14190                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 568:         return 0;
 14191  1562  3000               	movlw	0
 14192  1563                     l252:
 14193  1563  0008               	return
 14194  1564                     __end_of_MTOUCH_Sensor_wasSampled:
 14195                           
 14196                           	psect	text84
 14197  1E5B                     __ptext84:	
 14198 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
 14199 ;; Defined at:
 14200 ;;		line 536 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14201 ;; Parameters:    Size  Location     Type
 14202 ;;  sensor          1    wreg     enum E2599
 14203 ;; Auto vars:     Size  Location     Type
 14204 ;;  sensor          1    0[COMMON] enum E2599
 14205 ;; Return value:  Size  Location     Type
 14206 ;;                  1    wreg      _Bool 
 14207 ;; Registers used:
 14208 ;;		wreg
 14209 ;; Tracked objects:
 14210 ;;		On entry : 0/0
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14218 ;;Total ram usage:        0 bytes
 14219 ;; Hardware stack levels used: 1
 14220 ;; Hardware stack levels required when called: 4
 14221 ;; This function calls:
 14222 ;;		Nothing
 14223 ;; This function is called by:
 14224 ;;		_Button_Service
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228                           
 14229                           ;psect for function _MTOUCH_Sensor_isCalibrated
 14230  1E5B                     _MTOUCH_Sensor_isCalibrated:
 14231  1E5B                     l6569:	
 14232                           ;incstack = 0
 14233                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
 14234                           
 14235                           
 14236                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 536: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 537: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 539:     return 1;
 14237  1E5B  3001               	movlw	1
 14238  1E5C                     l240:
 14239  1E5C  0008               	return
 14240  1E5D                     __end_of_MTOUCH_Sensor_isCalibrated:
 14241                           
 14242                           	psect	text85
 14243  0E78                     __ptext85:	
 14244 ;; *************** function _Button_State_NotPressed *****************
 14245 ;; Defined at:
 14246 ;;		line 285 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14247 ;; Parameters:    Size  Location     Type
 14248 ;;  button          2   11[BANK0 ] PTR struct .
 14249 ;;		 -> mtouch_button(144), 
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;		None
 14252 ;; Return value:  Size  Location     Type
 14253 ;;                  1    wreg      void 
 14254 ;; Registers used:
 14255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14256 ;; Tracked objects:
 14257 ;;		On entry : 0/0
 14258 ;;		On exit  : 0/0
 14259 ;;		Unchanged: 0/0
 14260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14264 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14265 ;;Total ram usage:        4 bytes
 14266 ;; Hardware stack levels used: 1
 14267 ;; Hardware stack levels required when called: 6
 14268 ;; This function calls:
 14269 ;;		_Button_Baseline_Update
 14270 ;;		_Button_DefaultCallback
 14271 ;;		_MTOUCH_Button_Initialize
 14272 ;; This function is called by:
 14273 ;;		_Button_Service
 14274 ;; This function uses a non-reentrant model
 14275 ;;
 14276                           
 14277                           
 14278                           ;psect for function _Button_State_NotPressed
 14279  0E78                     _Button_State_NotPressed:
 14280  0E78                     l6633:	
 14281                           ;incstack = 0
 14282                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14283                           
 14284                           
 14285                           ;mcc_generated_files/mtouch/mtouch_button.c: 285: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 286: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 288:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
 14286  0E78  0020               	movlb	0	; select bank0
 14287  0E79  082B               	movf	Button_State_NotPressed@button,w
 14288  0E7A  0086               	movwf	6
 14289  0E7B  082C               	movf	Button_State_NotPressed@button+1,w
 14290  0E7C  0087               	movwf	7
 14291  0E7D  3149               	addfsr 1,9
 14292  0E7E  0801               	movf	1,w
 14293  0E7F  3A80               	xorlw	128
 14294  0E80  00AD               	movwf	??_Button_State_NotPressed
 14295  0E81  082B               	movf	Button_State_NotPressed@button,w
 14296  0E82  0086               	movwf	6
 14297  0E83  082C               	movf	Button_State_NotPressed@button+1,w
 14298  0E84  0087               	movwf	7
 14299  0E85  314E               	addfsr 1,14
 14300  0E86  0301               	decf	1,w
 14301  0E87  3AFF               	xorlw	255
 14302  0E88  3A80               	xorlw	128
 14303  0E89  02AD               	subwf	??_Button_State_NotPressed,f
 14304  0E8A  1803               	skipnc
 14305  0E8B  2E8D               	goto	u4841
 14306  0E8C  2E8E               	goto	u4840
 14307  0E8D                     u4841:
 14308  0E8D  2EBB               	goto	l6643
 14309  0E8E                     u4840:
 14310  0E8E                     l6635:
 14311                           
 14312                           ;mcc_generated_files/mtouch/mtouch_button.c: 289:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 290:         (button->counter)++;
 14313  0E8E  082B               	movf	Button_State_NotPressed@button,w
 14314  0E8F  0086               	movwf	6
 14315  0E90  082C               	movf	Button_State_NotPressed@button+1,w
 14316  0E91  0087               	movwf	7
 14317  0E92  314A               	addfsr 1,10
 14318  0E93  3001               	movlw	1
 14319  0E94  0781               	addwf	1,f
 14320  0E95  3141               	addfsr 1,1
 14321  0E96  1803               	skipnc
 14322  0E97  0A81               	incf	1,f
 14323  0E98                     l6637:
 14324                           
 14325                           ;mcc_generated_files/mtouch/mtouch_button.c: 291:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)64u))
 14326  0E98  082B               	movf	Button_State_NotPressed@button,w
 14327  0E99  0086               	movwf	6
 14328  0E9A  082C               	movf	Button_State_NotPressed@button+1,w
 14329  0E9B  0087               	movwf	7
 14330  0E9C  314A               	addfsr 1,10
 14331  0E9D  3F40               	moviw [0]fsr1
 14332  0E9E  00AD               	movwf	??_Button_State_NotPressed
 14333  0E9F  3F41               	moviw [1]fsr1
 14334  0EA0  00AE               	movwf	??_Button_State_NotPressed+1
 14335  0EA1  3000               	movlw	0
 14336  0EA2  022E               	subwf	??_Button_State_NotPressed+1,w
 14337  0EA3  3041               	movlw	65
 14338  0EA4  1903               	skipnz
 14339  0EA5  022D               	subwf	??_Button_State_NotPressed,w
 14340  0EA6  1C03               	skipc
 14341  0EA7  2EA9               	goto	u4851
 14342  0EA8  2EAA               	goto	u4850
 14343  0EA9                     u4851:
 14344  0EA9  2EFF               	goto	l6653
 14345  0EAA                     u4850:
 14346  0EAA                     l6639:
 14347                           
 14348                           ;mcc_generated_files/mtouch/mtouch_button.c: 292:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 293:             button->counter = (mtouch_button_statecounter_t)0;
 14349  0EAA  082B               	movf	Button_State_NotPressed@button,w
 14350  0EAB  0086               	movwf	6
 14351  0EAC  082C               	movf	Button_State_NotPressed@button+1,w
 14352  0EAD  0087               	movwf	7
 14353  0EAE  314A               	addfsr 1,10
 14354  0EAF  3000               	movlw	0
 14355  0EB0  3FC0               	movwi [0]fsr1
 14356  0EB1  3FC1               	movwi [1]fsr1
 14357  0EB2                     l6641:
 14358                           
 14359                           ;mcc_generated_files/mtouch/mtouch_button.c: 294:             MTOUCH_Button_Initialize(b
      +                          utton->name);
 14360  0EB2  082B               	movf	Button_State_NotPressed@button,w
 14361  0EB3  0086               	movwf	6
 14362  0EB4  082C               	movf	Button_State_NotPressed@button+1,w
 14363  0EB5  0087               	movwf	7
 14364  0EB6  0801               	movf	1,w
 14365  0EB7  3188  2041  318E   	fcall	_MTOUCH_Button_Initialize
 14366  0EBA  2EFF               	goto	l6653
 14367  0EBB                     l6643:
 14368  0EBB  082B               	movf	Button_State_NotPressed@button,w
 14369  0EBC  0086               	movwf	6
 14370  0EBD  082C               	movf	Button_State_NotPressed@button+1,w
 14371  0EBE  0087               	movwf	7
 14372  0EBF  3149               	addfsr 1,9
 14373  0EC0  0801               	movf	1,w
 14374  0EC1  00AD               	movwf	??_Button_State_NotPressed
 14375  0EC2  01AE               	clrf	??_Button_State_NotPressed+1
 14376  0EC3  1BAD               	btfsc	??_Button_State_NotPressed,7
 14377  0EC4  03AE               	decf	??_Button_State_NotPressed+1,f
 14378  0EC5  082B               	movf	Button_State_NotPressed@button,w
 14379  0EC6  0086               	movwf	6
 14380  0EC7  082C               	movf	Button_State_NotPressed@button+1,w
 14381  0EC8  0087               	movwf	7
 14382  0EC9  314E               	addfsr 1,14
 14383  0ECA  082E               	movf	??_Button_State_NotPressed+1,w
 14384  0ECB  3A80               	xorlw	128
 14385  0ECC  3C80               	sublw	128
 14386  0ECD  1D03               	skipz
 14387  0ECE  2ED1               	goto	u4865
 14388  0ECF  082D               	movf	??_Button_State_NotPressed,w
 14389  0ED0  0201               	subwf	1,w
 14390  0ED1                     u4865:
 14391  0ED1  1803               	skipnc
 14392  0ED2  2ED4               	goto	u4861
 14393  0ED3  2ED5               	goto	u4860
 14394  0ED4                     u4861:
 14395  0ED4  2EF6               	goto	l6651
 14396  0ED5                     u4860:
 14397  0ED5                     l6645:
 14398                           
 14399                           ;mcc_generated_files/mtouch/mtouch_button.c: 299:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 301:         button->state = MTOUCH_BUTTON_STATE_pressed;
 14400  0ED5  0020               	movlb	0	; select bank0
 14401  0ED6  082B               	movf	Button_State_NotPressed@button,w
 14402  0ED7  3E02               	addlw	2
 14403  0ED8  00AD               	movwf	??_Button_State_NotPressed
 14404  0ED9  3000               	movlw	0
 14405  0EDA  3D2C               	addwfc	Button_State_NotPressed@button+1,w
 14406  0EDB  00AE               	movwf	??_Button_State_NotPressed+1
 14407  0EDC  082D               	movf	??_Button_State_NotPressed,w
 14408  0EDD  0086               	movwf	6
 14409  0EDE  082E               	movf	??_Button_State_NotPressed+1,w
 14410  0EDF  0087               	movwf	7
 14411  0EE0  3002               	movlw	2
 14412  0EE1  0081               	movwf	1
 14413  0EE2                     l6647:
 14414                           
 14415                           ;mcc_generated_files/mtouch/mtouch_button.c: 302:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 14416  0EE2  082B               	movf	Button_State_NotPressed@button,w
 14417  0EE3  0086               	movwf	6
 14418  0EE4  082C               	movf	Button_State_NotPressed@button+1,w
 14419  0EE5  0087               	movwf	7
 14420  0EE6  314A               	addfsr 1,10
 14421  0EE7  3000               	movlw	0
 14422  0EE8  3FC0               	movwi [0]fsr1
 14423  0EE9  3FC1               	movwi [1]fsr1
 14424  0EEA                     l6649:
 14425                           
 14426                           ;mcc_generated_files/mtouch/mtouch_button.c: 303:         callback_pressed(button->name)
      +                          ;
 14427  0EEA  082B               	movf	Button_State_NotPressed@button,w
 14428  0EEB  0086               	movwf	6
 14429  0EEC  082C               	movf	Button_State_NotPressed@button+1,w
 14430  0EED  0087               	movwf	7
 14431  0EEE  0801               	movf	1,w
 14432  0EEF  00AD               	movwf	??_Button_State_NotPressed
 14433  0EF0  082D               	movf	??_Button_State_NotPressed,w
 14434  0EF1  00F2               	movwf	Button_DefaultCallback@button
 14435  0EF2  319E  2658  318E   	fcall	_Button_DefaultCallback
 14436                           
 14437                           ;mcc_generated_files/mtouch/mtouch_button.c: 304:     }
 14438  0EF5  2EFF               	goto	l6653
 14439  0EF6                     l6651:
 14440                           
 14441                           ;mcc_generated_files/mtouch/mtouch_button.c: 306:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 308:         button->counter = (mtouch_button_statecounter_t)0;
 14442  0EF6  0020               	movlb	0	; select bank0
 14443  0EF7  082B               	movf	Button_State_NotPressed@button,w
 14444  0EF8  0086               	movwf	6
 14445  0EF9  082C               	movf	Button_State_NotPressed@button+1,w
 14446  0EFA  0087               	movwf	7
 14447  0EFB  314A               	addfsr 1,10
 14448  0EFC  3000               	movlw	0
 14449  0EFD  3FC0               	movwi [0]fsr1
 14450  0EFE  3FC1               	movwi [1]fsr1
 14451  0EFF                     l6653:
 14452                           
 14453                           ;mcc_generated_files/mtouch/mtouch_button.c: 313:     (button->baseline_count)++;
 14454  0EFF  0020               	movlb	0	; select bank0
 14455  0F00  082B               	movf	Button_State_NotPressed@button,w
 14456  0F01  0086               	movwf	6
 14457  0F02  082C               	movf	Button_State_NotPressed@button+1,w
 14458  0F03  0087               	movwf	7
 14459  0F04  314C               	addfsr 1,12
 14460  0F05  3001               	movlw	1
 14461  0F06  0781               	addwf	1,f
 14462  0F07  3141               	addfsr 1,1
 14463  0F08  1803               	skipnc
 14464  0F09  0A81               	incf	1,f
 14465  0F0A                     l6655:
 14466                           
 14467                           ;mcc_generated_files/mtouch/mtouch_button.c: 314:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
 14468  0F0A  082B               	movf	Button_State_NotPressed@button,w
 14469  0F0B  0086               	movwf	6
 14470  0F0C  082C               	movf	Button_State_NotPressed@button+1,w
 14471  0F0D  0087               	movwf	7
 14472  0F0E  314C               	addfsr 1,12
 14473  0F0F  0016               	moviw fsr1++
 14474  0F10  3A40               	xorlw	64
 14475  0F11  00AD               	movwf	??_Button_State_NotPressed
 14476  0F12  0016               	moviw fsr1++
 14477  0F13  04AD               	iorwf	??_Button_State_NotPressed,f
 14478  0F14  1D03               	btfss	3,2
 14479  0F15  2F17               	goto	u4871
 14480  0F16  2F18               	goto	u4870
 14481  0F17                     u4871:
 14482  0F17  2F27               	goto	l461
 14483  0F18                     u4870:
 14484  0F18                     l6657:
 14485                           
 14486                           ;mcc_generated_files/mtouch/mtouch_button.c: 315:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 316:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
 14487  0F18  082B               	movf	Button_State_NotPressed@button,w
 14488  0F19  0086               	movwf	6
 14489  0F1A  082C               	movf	Button_State_NotPressed@button+1,w
 14490  0F1B  0087               	movwf	7
 14491  0F1C  314C               	addfsr 1,12
 14492  0F1D  3000               	movlw	0
 14493  0F1E  3FC0               	movwi [0]fsr1
 14494  0F1F  3FC1               	movwi [1]fsr1
 14495  0F20                     l6659:
 14496                           
 14497                           ;mcc_generated_files/mtouch/mtouch_button.c: 317:         Button_Baseline_Update(button)
      +                          ;
 14498  0F20  082C               	movf	Button_State_NotPressed@button+1,w
 14499  0F21  00F3               	movwf	Button_Baseline_Update@button+1
 14500  0F22  082B               	movf	Button_State_NotPressed@button,w
 14501  0F23  00F2               	movwf	Button_Baseline_Update@button
 14502  0F24  318D  25E8  318E   	fcall	_Button_Baseline_Update
 14503  0F27                     l461:
 14504  0F27  0008               	return
 14505  0F28                     __end_of_Button_State_NotPressed:
 14506                           
 14507                           	psect	text86
 14508  0B74                     __ptext86:	
 14509 ;; *************** function _Button_State_Initializing *****************
 14510 ;; Defined at:
 14511 ;;		line 265 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14512 ;; Parameters:    Size  Location     Type
 14513 ;;  button          2   11[BANK0 ] PTR struct .
 14514 ;;		 -> mtouch_button(144), 
 14515 ;; Auto vars:     Size  Location     Type
 14516 ;;		None
 14517 ;; Return value:  Size  Location     Type
 14518 ;;                  1    wreg      void 
 14519 ;; Registers used:
 14520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14521 ;; Tracked objects:
 14522 ;;		On entry : 0/0
 14523 ;;		On exit  : 0/0
 14524 ;;		Unchanged: 0/0
 14525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14528 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14530 ;;Total ram usage:        6 bytes
 14531 ;; Hardware stack levels used: 1
 14532 ;; Hardware stack levels required when called: 7
 14533 ;; This function calls:
 14534 ;;		_Button_Baseline_Initialize
 14535 ;;		_Button_Baseline_Update
 14536 ;; This function is called by:
 14537 ;;		_Button_Service
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           
 14542                           ;psect for function _Button_State_Initializing
 14543  0B74                     _Button_State_Initializing:
 14544  0B74                     l6619:	
 14545                           ;incstack = 0
 14546                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14547                           
 14548                           
 14549                           ;mcc_generated_files/mtouch/mtouch_button.c: 265: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 266: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 268:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
 14550  0B74  0020               	movlb	0	; select bank0
 14551  0B75  082B               	movf	Button_State_Initializing@button,w
 14552  0B76  0086               	movwf	6
 14553  0B77  082C               	movf	Button_State_Initializing@button+1,w
 14554  0B78  0087               	movwf	7
 14555  0B79  314A               	addfsr 1,10
 14556  0B7A  3F40               	moviw [0]fsr1
 14557  0B7B  00AD               	movwf	??_Button_State_Initializing
 14558  0B7C  3F41               	moviw [1]fsr1
 14559  0B7D  00AE               	movwf	??_Button_State_Initializing+1
 14560  0B7E  3000               	movlw	0
 14561  0B7F  022E               	subwf	??_Button_State_Initializing+1,w
 14562  0B80  3009               	movlw	9
 14563  0B81  1903               	skipnz
 14564  0B82  022D               	subwf	??_Button_State_Initializing,w
 14565  0B83  1803               	skipnc
 14566  0B84  2B86               	goto	u4811
 14567  0B85  2B87               	goto	u4810
 14568  0B86                     u4811:
 14569  0B86  2B8F               	goto	l6623
 14570  0B87                     u4810:
 14571  0B87                     l6621:
 14572                           
 14573                           ;mcc_generated_files/mtouch/mtouch_button.c: 269:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 270:         Button_Baseline_Initialize(button);
 14574  0B87  082C               	movf	Button_State_Initializing@button+1,w
 14575  0B88  00A6               	movwf	Button_Baseline_Initialize@button+1
 14576  0B89  082B               	movf	Button_State_Initializing@button,w
 14577  0B8A  00A5               	movwf	Button_Baseline_Initialize@button
 14578  0B8B  3196  26D6  318B   	fcall	_Button_Baseline_Initialize
 14579                           
 14580                           ;mcc_generated_files/mtouch/mtouch_button.c: 271:     } else {
 14581  0B8E  2B96               	goto	l6625
 14582  0B8F                     l6623:
 14583                           
 14584                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:         Button_Baseline_Update(button)
      +                          ;
 14585  0B8F  082C               	movf	Button_State_Initializing@button+1,w
 14586  0B90  00F3               	movwf	Button_Baseline_Update@button+1
 14587  0B91  082B               	movf	Button_State_Initializing@button,w
 14588  0B92  00F2               	movwf	Button_Baseline_Update@button
 14589  0B93  318D  25E8  318B   	fcall	_Button_Baseline_Update
 14590  0B96                     l6625:
 14591                           
 14592                           ;mcc_generated_files/mtouch/mtouch_button.c: 276:     (button->counter)++;
 14593  0B96  0020               	movlb	0	; select bank0
 14594  0B97  082B               	movf	Button_State_Initializing@button,w
 14595  0B98  0086               	movwf	6
 14596  0B99  082C               	movf	Button_State_Initializing@button+1,w
 14597  0B9A  0087               	movwf	7
 14598  0B9B  314A               	addfsr 1,10
 14599  0B9C  3001               	movlw	1
 14600  0B9D  0781               	addwf	1,f
 14601  0B9E  3141               	addfsr 1,1
 14602  0B9F  1803               	skipnc
 14603  0BA0  0A81               	incf	1,f
 14604  0BA1                     l6627:
 14605                           
 14606                           ;mcc_generated_files/mtouch/mtouch_button.c: 277:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
 14607  0BA1  082B               	movf	Button_State_Initializing@button,w
 14608  0BA2  0086               	movwf	6
 14609  0BA3  082C               	movf	Button_State_Initializing@button+1,w
 14610  0BA4  0087               	movwf	7
 14611  0BA5  314A               	addfsr 1,10
 14612  0BA6  3F40               	moviw [0]fsr1
 14613  0BA7  00AD               	movwf	??_Button_State_Initializing
 14614  0BA8  3F41               	moviw [1]fsr1
 14615  0BA9  00AE               	movwf	??_Button_State_Initializing+1
 14616  0BAA  3000               	movlw	0
 14617  0BAB  022E               	subwf	??_Button_State_Initializing+1,w
 14618  0BAC  3010               	movlw	16
 14619  0BAD  1903               	skipnz
 14620  0BAE  022D               	subwf	??_Button_State_Initializing,w
 14621  0BAF  1C03               	skipc
 14622  0BB0  2BB2               	goto	u4821
 14623  0BB1  2BB3               	goto	u4820
 14624  0BB2                     u4821:
 14625  0BB2  2BE4               	goto	l452
 14626  0BB3                     u4820:
 14627  0BB3                     l6629:
 14628                           
 14629                           ;mcc_generated_files/mtouch/mtouch_button.c: 278:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 279:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
 14630  0BB3  082B               	movf	Button_State_Initializing@button,w
 14631  0BB4  0086               	movwf	6
 14632  0BB5  082C               	movf	Button_State_Initializing@button+1,w
 14633  0BB6  0087               	movwf	7
 14634  0BB7  3145               	addfsr 1,5
 14635  0BB8  3F40               	moviw [0]fsr1
 14636  0BB9  00AD               	movwf	??_Button_State_Initializing
 14637  0BBA  3F41               	moviw [1]fsr1
 14638  0BBB  00AE               	movwf	??_Button_State_Initializing+1
 14639  0BBC  3F42               	moviw [2]fsr1
 14640  0BBD  00AF               	movwf	??_Button_State_Initializing+2
 14641  0BBE  3F43               	moviw [3]fsr1
 14642  0BBF  00B0               	movwf	??_Button_State_Initializing+3
 14643  0BC0  3004               	movlw	4
 14644  0BC1                     u4835:
 14645  0BC1  36B0               	lsrf	??_Button_State_Initializing+3,f
 14646  0BC2  0CAF               	rrf	??_Button_State_Initializing+2,f
 14647  0BC3  0CAE               	rrf	??_Button_State_Initializing+1,f
 14648  0BC4  0CAD               	rrf	??_Button_State_Initializing,f
 14649  0BC5                     u4830:
 14650  0BC5  0B89               	decfsz	9,f
 14651  0BC6  2BC1               	goto	u4835
 14652  0BC7  082B               	movf	Button_State_Initializing@button,w
 14653  0BC8  0086               	movwf	6
 14654  0BC9  082C               	movf	Button_State_Initializing@button+1,w
 14655  0BCA  0087               	movwf	7
 14656  0BCB  3143               	addfsr 1,3
 14657  0BCC  082D               	movf	??_Button_State_Initializing,w
 14658  0BCD  3FC0               	movwi [0]fsr1
 14659  0BCE  082E               	movf	??_Button_State_Initializing+1,w
 14660  0BCF  3FC1               	movwi [1]fsr1
 14661                           
 14662                           ;mcc_generated_files/mtouch/mtouch_button.c: 280:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
 14663  0BD0  082B               	movf	Button_State_Initializing@button,w
 14664  0BD1  3E02               	addlw	2
 14665  0BD2  00AD               	movwf	??_Button_State_Initializing
 14666  0BD3  3000               	movlw	0
 14667  0BD4  3D2C               	addwfc	Button_State_Initializing@button+1,w
 14668  0BD5  00AE               	movwf	??_Button_State_Initializing+1
 14669  0BD6  082D               	movf	??_Button_State_Initializing,w
 14670  0BD7  0086               	movwf	6
 14671  0BD8  082E               	movf	??_Button_State_Initializing+1,w
 14672  0BD9  0087               	movwf	7
 14673  0BDA  3001               	movlw	1
 14674  0BDB  0081               	movwf	1
 14675  0BDC                     l6631:
 14676                           
 14677                           ;mcc_generated_files/mtouch/mtouch_button.c: 281:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 14678  0BDC  082B               	movf	Button_State_Initializing@button,w
 14679  0BDD  0086               	movwf	6
 14680  0BDE  082C               	movf	Button_State_Initializing@button+1,w
 14681  0BDF  0087               	movwf	7
 14682  0BE0  314A               	addfsr 1,10
 14683  0BE1  3000               	movlw	0
 14684  0BE2  3FC0               	movwi [0]fsr1
 14685  0BE3  3FC1               	movwi [1]fsr1
 14686  0BE4                     l452:
 14687  0BE4  0008               	return
 14688  0BE5                     __end_of_Button_State_Initializing:
 14689                           
 14690                           	psect	text87
 14691  0A2D                     __ptext87:	
 14692 ;; *************** function _Button_State_Pressed *****************
 14693 ;; Defined at:
 14694 ;;		line 321 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14695 ;; Parameters:    Size  Location     Type
 14696 ;;  button          2   11[BANK0 ] PTR struct .
 14697 ;;		 -> mtouch_button(144), 
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;		None
 14700 ;; Return value:  Size  Location     Type
 14701 ;;                  1    wreg      void 
 14702 ;; Registers used:
 14703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14704 ;; Tracked objects:
 14705 ;;		On entry : 0/0
 14706 ;;		On exit  : 0/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14712 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14713 ;;Total ram usage:        4 bytes
 14714 ;; Hardware stack levels used: 1
 14715 ;; Hardware stack levels required when called: 6
 14716 ;; This function calls:
 14717 ;;		_Button_DefaultCallback
 14718 ;;		_MTOUCH_Button_Initialize
 14719 ;; This function is called by:
 14720 ;;		_Button_Service
 14721 ;; This function uses a non-reentrant model
 14722 ;;
 14723                           
 14724                           
 14725                           ;psect for function _Button_State_Pressed
 14726  0A2D                     _Button_State_Pressed:
 14727  0A2D                     l6661:	
 14728                           ;incstack = 0
 14729                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14730                           
 14731                           
 14732                           ;mcc_generated_files/mtouch/mtouch_button.c: 321: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 322: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 324:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)59990u))
 14733  0A2D  0020               	movlb	0	; select bank0
 14734  0A2E  082B               	movf	Button_State_Pressed@button,w
 14735  0A2F  0086               	movwf	6
 14736  0A30  082C               	movf	Button_State_Pressed@button+1,w
 14737  0A31  0087               	movwf	7
 14738  0A32  314A               	addfsr 1,10
 14739  0A33  3F40               	moviw [0]fsr1
 14740  0A34  00AD               	movwf	??_Button_State_Pressed
 14741  0A35  3F41               	moviw [1]fsr1
 14742  0A36  00AE               	movwf	??_Button_State_Pressed+1
 14743  0A37  30EA               	movlw	234
 14744  0A38  022E               	subwf	??_Button_State_Pressed+1,w
 14745  0A39  3056               	movlw	86
 14746  0A3A  1903               	skipnz
 14747  0A3B  022D               	subwf	??_Button_State_Pressed,w
 14748  0A3C  1C03               	skipc
 14749  0A3D  2A3F               	goto	u4881
 14750  0A3E  2A40               	goto	u4880
 14751  0A3F                     u4881:
 14752  0A3F  2A55               	goto	l6665
 14753  0A40                     u4880:
 14754  0A40                     l6663:
 14755                           
 14756                           ;mcc_generated_files/mtouch/mtouch_button.c: 325:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 326:         MTOUCH_Button_Initialize(button->name);
 14757  0A40  082B               	movf	Button_State_Pressed@button,w
 14758  0A41  0086               	movwf	6
 14759  0A42  082C               	movf	Button_State_Pressed@button+1,w
 14760  0A43  0087               	movwf	7
 14761  0A44  0801               	movf	1,w
 14762  0A45  3188  2041  318A   	fcall	_MTOUCH_Button_Initialize
 14763                           
 14764                           ;mcc_generated_files/mtouch/mtouch_button.c: 327:         callback_notPressed(button->na
      +                          me);
 14765  0A48  0020               	movlb	0	; select bank0
 14766  0A49  082B               	movf	Button_State_Pressed@button,w
 14767  0A4A  0086               	movwf	6
 14768  0A4B  082C               	movf	Button_State_Pressed@button+1,w
 14769  0A4C  0087               	movwf	7
 14770  0A4D  0801               	movf	1,w
 14771  0A4E  00AD               	movwf	??_Button_State_Pressed
 14772  0A4F  082D               	movf	??_Button_State_Pressed,w
 14773  0A50  00F2               	movwf	Button_DefaultCallback@button
 14774  0A51  319E  2658  318A   	fcall	_Button_DefaultCallback
 14775                           
 14776                           ;mcc_generated_files/mtouch/mtouch_button.c: 328:     }
 14777  0A54  2A97               	goto	l467
 14778  0A55                     l6665:
 14779  0A55  082B               	movf	Button_State_Pressed@button,w
 14780  0A56  0086               	movwf	6
 14781  0A57  082C               	movf	Button_State_Pressed@button+1,w
 14782  0A58  0087               	movwf	7
 14783  0A59  3149               	addfsr 1,9
 14784  0A5A  0801               	movf	1,w
 14785  0A5B  3A80               	xorlw	128
 14786  0A5C  00AD               	movwf	??_Button_State_Pressed
 14787  0A5D  082B               	movf	Button_State_Pressed@button,w
 14788  0A5E  0086               	movwf	6
 14789  0A5F  082C               	movf	Button_State_Pressed@button+1,w
 14790  0A60  0087               	movwf	7
 14791  0A61  314E               	addfsr 1,14
 14792  0A62  082B               	movf	Button_State_Pressed@button,w
 14793  0A63  0084               	movwf	4
 14794  0A64  082C               	movf	Button_State_Pressed@button+1,w
 14795  0A65  0085               	movwf	5
 14796  0A66  310E               	addfsr 0,14
 14797  0A67  3600               	lsrf	0,w
 14798  0A68  0201               	subwf	1,w
 14799  0A69  3A80               	xorlw	128
 14800  0A6A  02AD               	subwf	??_Button_State_Pressed,f
 14801  0A6B  1803               	skipnc
 14802  0A6C  2A6E               	goto	u4891
 14803  0A6D  2A6F               	goto	u4890
 14804  0A6E                     u4891:
 14805  0A6E  2A97               	goto	l467
 14806  0A6F                     u4890:
 14807  0A6F                     l6667:
 14808                           
 14809                           ;mcc_generated_files/mtouch/mtouch_button.c: 332:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 333:         button->state = MTOUCH_BUTTON_STATE_notPressed;
 14810  0A6F  082B               	movf	Button_State_Pressed@button,w
 14811  0A70  3E02               	addlw	2
 14812  0A71  00AD               	movwf	??_Button_State_Pressed
 14813  0A72  3000               	movlw	0
 14814  0A73  3D2C               	addwfc	Button_State_Pressed@button+1,w
 14815  0A74  00AE               	movwf	??_Button_State_Pressed+1
 14816  0A75  082D               	movf	??_Button_State_Pressed,w
 14817  0A76  0086               	movwf	6
 14818  0A77  082E               	movf	??_Button_State_Pressed+1,w
 14819  0A78  0087               	movwf	7
 14820  0A79  3001               	movlw	1
 14821  0A7A  0081               	movwf	1
 14822  0A7B                     l6669:
 14823                           
 14824                           ;mcc_generated_files/mtouch/mtouch_button.c: 334:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 14825  0A7B  082B               	movf	Button_State_Pressed@button,w
 14826  0A7C  0086               	movwf	6
 14827  0A7D  082C               	movf	Button_State_Pressed@button+1,w
 14828  0A7E  0087               	movwf	7
 14829  0A7F  314A               	addfsr 1,10
 14830  0A80  3000               	movlw	0
 14831  0A81  3FC0               	movwi [0]fsr1
 14832  0A82  3FC1               	movwi [1]fsr1
 14833  0A83                     l6671:
 14834                           
 14835                           ;mcc_generated_files/mtouch/mtouch_button.c: 335:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
 14836  0A83  082B               	movf	Button_State_Pressed@button,w
 14837  0A84  0086               	movwf	6
 14838  0A85  082C               	movf	Button_State_Pressed@button+1,w
 14839  0A86  0087               	movwf	7
 14840  0A87  314C               	addfsr 1,12
 14841  0A88  30FF               	movlw	255
 14842  0A89  3FC0               	movwi [0]fsr1
 14843  0A8A  30FB               	movlw	251
 14844  0A8B  3FC1               	movwi [1]fsr1
 14845  0A8C                     l6673:
 14846                           
 14847                           ;mcc_generated_files/mtouch/mtouch_button.c: 336:         callback_notPressed(button->na
      +                          me);
 14848  0A8C  082B               	movf	Button_State_Pressed@button,w
 14849  0A8D  0086               	movwf	6
 14850  0A8E  082C               	movf	Button_State_Pressed@button+1,w
 14851  0A8F  0087               	movwf	7
 14852  0A90  0801               	movf	1,w
 14853  0A91  00AD               	movwf	??_Button_State_Pressed
 14854  0A92  082D               	movf	??_Button_State_Pressed,w
 14855  0A93  00F2               	movwf	Button_DefaultCallback@button
 14856  0A94  319E  2658  318A   	fcall	_Button_DefaultCallback
 14857  0A97                     l467:
 14858  0A97  0008               	return
 14859  0A98                     __end_of_Button_State_Pressed:
 14860                           
 14861                           	psect	text88
 14862  0841                     __ptext88:	
 14863 ;; *************** function _MTOUCH_Button_Initialize *****************
 14864 ;; Defined at:
 14865 ;;		line 207 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14866 ;; Parameters:    Size  Location     Type
 14867 ;;  name            1    wreg     enum E2826
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;  name            1    6[COMMON] enum E2826
 14870 ;;  button          2    7[COMMON] PTR struct .
 14871 ;;		 -> mtouch_button(144), 
 14872 ;; Return value:  Size  Location     Type
 14873 ;;                  1    wreg      void 
 14874 ;; Registers used:
 14875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14876 ;; Tracked objects:
 14877 ;;		On entry : 0/0
 14878 ;;		On exit  : 0/0
 14879 ;;		Unchanged: 0/0
 14880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14882 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14884 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;Total ram usage:        7 bytes
 14886 ;; Hardware stack levels used: 1
 14887 ;; Hardware stack levels required when called: 5
 14888 ;; This function calls:
 14889 ;;		_MTOUCH_Sensor_Calibrate
 14890 ;; This function is called by:
 14891 ;;		_MTOUCH_Button_InitializeAll
 14892 ;;		_Button_Service
 14893 ;;		_Button_State_NotPressed
 14894 ;;		_Button_State_Pressed
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           
 14899                           ;psect for function _MTOUCH_Button_Initialize
 14900  0841                     _MTOUCH_Button_Initialize:
 14901                           
 14902                           ;incstack = 0
 14903                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 14904                           ;MTOUCH_Button_Initialize@name stored from wreg
 14905  0841  00F6               	movwf	MTOUCH_Button_Initialize@name
 14906  0842                     l6489:
 14907                           
 14908                           ;mcc_generated_files/mtouch/mtouch_button.c: 207: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 208: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 209:     mtouch_button_t* button = &mtouch_button[name];
 14909  0842  0876               	movf	MTOUCH_Button_Initialize@name,w
 14910  0843  00F2               	movwf	??_MTOUCH_Button_Initialize
 14911  0844  01F3               	clrf	??_MTOUCH_Button_Initialize+1
 14912  0845  0EF2               	swapf	??_MTOUCH_Button_Initialize,f
 14913  0846  0EF3               	swapf	??_MTOUCH_Button_Initialize+1,f
 14914  0847  30F0               	movlw	240
 14915  0848  05F3               	andwf	??_MTOUCH_Button_Initialize+1,f
 14916  0849  0872               	movf	??_MTOUCH_Button_Initialize,w
 14917  084A  390F               	andlw	15
 14918  084B  04F3               	iorwf	??_MTOUCH_Button_Initialize+1,f
 14919  084C  30F0               	movlw	240
 14920  084D  05F2               	andwf	??_MTOUCH_Button_Initialize,f
 14921  084E  3060               	movlw	96
 14922  084F  00F4               	movwf	??_MTOUCH_Button_Initialize+2
 14923  0850  3023               	movlw	35
 14924  0851  00F5               	movwf	??_MTOUCH_Button_Initialize+3
 14925  0852  0872               	movf	??_MTOUCH_Button_Initialize,w
 14926  0853  0774               	addwf	??_MTOUCH_Button_Initialize+2,w
 14927  0854  00F7               	movwf	MTOUCH_Button_Initialize@button
 14928  0855  0873               	movf	??_MTOUCH_Button_Initialize+1,w
 14929  0856  3D75               	addwfc	??_MTOUCH_Button_Initialize+3,w
 14930  0857  00F8               	movwf	MTOUCH_Button_Initialize@button+1
 14931  0858                     l6491:
 14932                           
 14933                           ;mcc_generated_files/mtouch/mtouch_button.c: 211:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
 14934  0858  0877               	movf	MTOUCH_Button_Initialize@button,w
 14935  0859  0086               	movwf	6
 14936  085A  0878               	movf	MTOUCH_Button_Initialize@button+1,w
 14937  085B  0087               	movwf	7
 14938  085C  3142               	addfsr 1,2
 14939  085D  0181               	clrf	1
 14940  085E                     l6493:
 14941                           
 14942                           ;mcc_generated_files/mtouch/mtouch_button.c: 212:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
 14943  085E  0877               	movf	MTOUCH_Button_Initialize@button,w
 14944  085F  3E05               	addlw	5
 14945  0860  00F2               	movwf	??_MTOUCH_Button_Initialize
 14946  0861  3000               	movlw	0
 14947  0862  3D78               	addwfc	MTOUCH_Button_Initialize@button+1,w
 14948  0863  00F3               	movwf	??_MTOUCH_Button_Initialize+1
 14949  0864  0872               	movf	??_MTOUCH_Button_Initialize,w
 14950  0865  0086               	movwf	6
 14951  0866  0873               	movf	??_MTOUCH_Button_Initialize+1,w
 14952  0867  0087               	movwf	7
 14953  0868  3000               	movlw	0
 14954  0869  3FC0               	movwi [0]fsr1
 14955  086A  3FC1               	movwi [1]fsr1
 14956  086B  3FC2               	movwi [2]fsr1
 14957  086C  3FC3               	movwi [3]fsr1
 14958  086D                     l6495:
 14959                           
 14960                           ;mcc_generated_files/mtouch/mtouch_button.c: 213:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
 14961  086D  0877               	movf	MTOUCH_Button_Initialize@button,w
 14962  086E  0086               	movwf	6
 14963  086F  0878               	movf	MTOUCH_Button_Initialize@button+1,w
 14964  0870  0087               	movwf	7
 14965  0871  314A               	addfsr 1,10
 14966  0872  3000               	movlw	0
 14967  0873  3FC0               	movwi [0]fsr1
 14968  0874  3FC1               	movwi [1]fsr1
 14969  0875                     l6497:
 14970                           
 14971                           ;mcc_generated_files/mtouch/mtouch_button.c: 214:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
 14972  0875  0877               	movf	MTOUCH_Button_Initialize@button,w
 14973  0876  0086               	movwf	6
 14974  0877  0878               	movf	MTOUCH_Button_Initialize@button+1,w
 14975  0878  0087               	movwf	7
 14976  0879  314C               	addfsr 1,12
 14977  087A  3000               	movlw	0
 14978  087B  3FC0               	movwi [0]fsr1
 14979  087C  3FC1               	movwi [1]fsr1
 14980  087D                     l6499:
 14981                           
 14982                           ;mcc_generated_files/mtouch/mtouch_button.c: 216:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
 14983  087D  0877               	movf	MTOUCH_Button_Initialize@button,w
 14984  087E  0086               	movwf	6
 14985  087F  0878               	movf	MTOUCH_Button_Initialize@button+1,w
 14986  0880  0087               	movwf	7
 14987  0881  3141               	addfsr 1,1
 14988  0882  0801               	movf	1,w
 14989  0883  319E  2659  3188   	fcall	_MTOUCH_Sensor_Calibrate
 14990  0886                     l431:
 14991  0886  0008               	return
 14992  0887                     __end_of_MTOUCH_Button_Initialize:
 14993                           
 14994                           	psect	text89
 14995  1E59                     __ptext89:	
 14996 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
 14997 ;; Defined at:
 14998 ;;		line 542 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14999 ;; Parameters:    Size  Location     Type
 15000 ;;  sensor          1    wreg     enum E2599
 15001 ;; Auto vars:     Size  Location     Type
 15002 ;;  sensor          1    0[COMMON] enum E2599
 15003 ;; Return value:  Size  Location     Type
 15004 ;;                  1    wreg      void 
 15005 ;; Registers used:
 15006 ;;		wreg
 15007 ;; Tracked objects:
 15008 ;;		On entry : 0/0
 15009 ;;		On exit  : 0/0
 15010 ;;		Unchanged: 0/0
 15011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;Total ram usage:        0 bytes
 15017 ;; Hardware stack levels used: 1
 15018 ;; Hardware stack levels required when called: 4
 15019 ;; This function calls:
 15020 ;;		Nothing
 15021 ;; This function is called by:
 15022 ;;		_MTOUCH_Button_Initialize
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           
 15027                           ;psect for function _MTOUCH_Sensor_Calibrate
 15028  1E59                     _MTOUCH_Sensor_Calibrate:
 15029  1E59                     l243:	
 15030                           ;incstack = 0
 15031                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
 15032                           
 15033  1E59  0008               	return
 15034  1E5A                     __end_of_MTOUCH_Sensor_Calibrate:
 15035                           
 15036                           	psect	text90
 15037  1E58                     __ptext90:	
 15038 ;; *************** function _Button_DefaultCallback *****************
 15039 ;; Defined at:
 15040 ;;		line 575 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15041 ;; Parameters:    Size  Location     Type
 15042 ;;  button          1    2[COMMON] enum E2826
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;		None
 15045 ;; Return value:  Size  Location     Type
 15046 ;;                  1    wreg      void 
 15047 ;; Registers used:
 15048 ;;		None
 15049 ;; Tracked objects:
 15050 ;;		On entry : 0/0
 15051 ;;		On exit  : 0/0
 15052 ;;		Unchanged: 0/0
 15053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15054 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15058 ;;Total ram usage:        1 bytes
 15059 ;; Hardware stack levels used: 1
 15060 ;; Hardware stack levels required when called: 4
 15061 ;; This function calls:
 15062 ;;		Nothing
 15063 ;; This function is called by:
 15064 ;;		_Button_State_NotPressed
 15065 ;;		_Button_State_Pressed
 15066 ;; This function uses a non-reentrant model
 15067 ;;
 15068                           
 15069                           
 15070                           ;psect for function _Button_DefaultCallback
 15071  1E58                     _Button_DefaultCallback:
 15072  1E58                     l571:	
 15073                           ;incstack = 0
 15074                           ; Regs used in _Button_DefaultCallback: []
 15075                           
 15076  1E58  0008               	return
 15077  1E59                     __end_of_Button_DefaultCallback:
 15078                           
 15079                           	psect	text91
 15080  0DE8                     __ptext91:	
 15081 ;; *************** function _Button_Baseline_Update *****************
 15082 ;; Defined at:
 15083 ;;		line 529 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15084 ;; Parameters:    Size  Location     Type
 15085 ;;  button          2    2[COMMON] PTR struct .
 15086 ;;		 -> mtouch_button(144), 
 15087 ;; Auto vars:     Size  Location     Type
 15088 ;;		None
 15089 ;; Return value:  Size  Location     Type
 15090 ;;                  1    wreg      void 
 15091 ;; Registers used:
 15092 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15093 ;; Tracked objects:
 15094 ;;		On entry : 0/0
 15095 ;;		On exit  : 0/0
 15096 ;;		Unchanged: 0/0
 15097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15100 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15101 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15102 ;;Total ram usage:        8 bytes
 15103 ;; Hardware stack levels used: 1
 15104 ;; Hardware stack levels required when called: 4
 15105 ;; This function calls:
 15106 ;;		Nothing
 15107 ;; This function is called by:
 15108 ;;		_Button_State_Initializing
 15109 ;;		_Button_State_NotPressed
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           
 15114                           ;psect for function _Button_Baseline_Update
 15115  0DE8                     _Button_Baseline_Update:
 15116  0DE8                     l6505:	
 15117                           ;incstack = 0
 15118                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 15119                           
 15120                           
 15121                           ;mcc_generated_files/mtouch/mtouch_button.c: 529: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 530: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 531:     if (GIE == (uint8_t)1)
 15122  0DE8  1F8B               	btfss	11,7	;volatile
 15123  0DE9  2DEB               	goto	u4651
 15124  0DEA  2DEC               	goto	u4650
 15125  0DEB                     u4651:
 15126  0DEB  2E33               	goto	l6515
 15127  0DEC                     u4650:
 15128  0DEC                     l6507:
 15129                           
 15130                           ;mcc_generated_files/mtouch/mtouch_button.c: 532:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 533:         GIE = (uint8_t)0;
 15131  0DEC  138B               	bcf	11,7	;volatile
 15132  0DED                     l6509:
 15133                           
 15134                           ;mcc_generated_files/mtouch/mtouch_button.c: 534:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
 15135  0DED  0872               	movf	Button_Baseline_Update@button,w
 15136  0DEE  0086               	movwf	6
 15137  0DEF  0873               	movf	Button_Baseline_Update@button+1,w
 15138  0DF0  0087               	movwf	7
 15139  0DF1  3145               	addfsr 1,5
 15140  0DF2  3F40               	moviw [0]fsr1
 15141  0DF3  00F4               	movwf	??_Button_Baseline_Update
 15142  0DF4  3F41               	moviw [1]fsr1
 15143  0DF5  00F5               	movwf	??_Button_Baseline_Update+1
 15144  0DF6  3F42               	moviw [2]fsr1
 15145  0DF7  00F6               	movwf	??_Button_Baseline_Update+2
 15146  0DF8  3F43               	moviw [3]fsr1
 15147  0DF9  00F7               	movwf	??_Button_Baseline_Update+3
 15148  0DFA  3004               	movlw	4
 15149  0DFB                     u4665:
 15150  0DFB  36F7               	lsrf	??_Button_Baseline_Update+3,f
 15151  0DFC  0CF6               	rrf	??_Button_Baseline_Update+2,f
 15152  0DFD  0CF5               	rrf	??_Button_Baseline_Update+1,f
 15153  0DFE  0CF4               	rrf	??_Button_Baseline_Update,f
 15154  0DFF                     u4660:
 15155  0DFF  0B89               	decfsz	9,f
 15156  0E00  2DFB               	goto	u4665
 15157  0E01  0872               	movf	Button_Baseline_Update@button,w
 15158  0E02  0086               	movwf	6
 15159  0E03  0873               	movf	Button_Baseline_Update@button+1,w
 15160  0E04  0087               	movwf	7
 15161  0E05  3145               	addfsr 1,5
 15162  0E06  0874               	movf	??_Button_Baseline_Update,w
 15163  0E07  0281               	subwf	1,f
 15164  0E08  3141               	addfsr 1,1
 15165  0E09  0875               	movf	??_Button_Baseline_Update+1,w
 15166  0E0A  3B81               	subwfb	1,f
 15167  0E0B  3141               	addfsr 1,1
 15168  0E0C  0876               	movf	??_Button_Baseline_Update+2,w
 15169  0E0D  3B81               	subwfb	1,f
 15170  0E0E  3141               	addfsr 1,1
 15171  0E0F  0877               	movf	??_Button_Baseline_Update+3,w
 15172  0E10  3B81               	subwfb	1,f
 15173  0E11  317D               	addfsr 1,-3
 15174  0E12                     l6511:
 15175                           
 15176                           ;mcc_generated_files/mtouch/mtouch_button.c: 535:         button->baseline += button->re
      +                          ading;
 15177  0E12  0872               	movf	Button_Baseline_Update@button,w
 15178  0E13  0086               	movwf	6
 15179  0E14  0873               	movf	Button_Baseline_Update@button+1,w
 15180  0E15  0087               	movwf	7
 15181  0E16  3143               	addfsr 1,3
 15182  0E17  3F40               	moviw [0]fsr1
 15183  0E18  00F4               	movwf	??_Button_Baseline_Update
 15184  0E19  3F41               	moviw [1]fsr1
 15185  0E1A  00F5               	movwf	??_Button_Baseline_Update+1
 15186  0E1B  0874               	movf	??_Button_Baseline_Update,w
 15187  0E1C  00F6               	movwf	??_Button_Baseline_Update+2
 15188  0E1D  0875               	movf	??_Button_Baseline_Update+1,w
 15189  0E1E  00F7               	movwf	??_Button_Baseline_Update+3
 15190  0E1F  01F8               	clrf	??_Button_Baseline_Update+4
 15191  0E20  01F9               	clrf	??_Button_Baseline_Update+5
 15192  0E21  0872               	movf	Button_Baseline_Update@button,w
 15193  0E22  0086               	movwf	6
 15194  0E23  0873               	movf	Button_Baseline_Update@button+1,w
 15195  0E24  0087               	movwf	7
 15196  0E25  3145               	addfsr 1,5
 15197  0E26  0876               	movf	??_Button_Baseline_Update+2,w
 15198  0E27  0781               	addwf	1,f
 15199  0E28  3141               	addfsr 1,1
 15200  0E29  0877               	movf	??_Button_Baseline_Update+3,w
 15201  0E2A  3D81               	addwfc	1,f
 15202  0E2B  3141               	addfsr 1,1
 15203  0E2C  0878               	movf	??_Button_Baseline_Update+4,w
 15204  0E2D  3D81               	addwfc	1,f
 15205  0E2E  3141               	addfsr 1,1
 15206  0E2F  0879               	movf	??_Button_Baseline_Update+5,w
 15207  0E30  3D81               	addwfc	1,f
 15208  0E31                     l6513:
 15209                           
 15210                           ;mcc_generated_files/mtouch/mtouch_button.c: 536:         GIE = (uint8_t)1;
 15211  0E31  178B               	bsf	11,7	;volatile
 15212                           
 15213                           ;mcc_generated_files/mtouch/mtouch_button.c: 537:     }
 15214  0E32  2E77               	goto	l555
 15215  0E33                     l6515:
 15216                           
 15217                           ;mcc_generated_files/mtouch/mtouch_button.c: 539:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 540:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
 15218  0E33  0872               	movf	Button_Baseline_Update@button,w
 15219  0E34  0086               	movwf	6
 15220  0E35  0873               	movf	Button_Baseline_Update@button+1,w
 15221  0E36  0087               	movwf	7
 15222  0E37  3145               	addfsr 1,5
 15223  0E38  3F40               	moviw [0]fsr1
 15224  0E39  00F4               	movwf	??_Button_Baseline_Update
 15225  0E3A  3F41               	moviw [1]fsr1
 15226  0E3B  00F5               	movwf	??_Button_Baseline_Update+1
 15227  0E3C  3F42               	moviw [2]fsr1
 15228  0E3D  00F6               	movwf	??_Button_Baseline_Update+2
 15229  0E3E  3F43               	moviw [3]fsr1
 15230  0E3F  00F7               	movwf	??_Button_Baseline_Update+3
 15231  0E40  3004               	movlw	4
 15232  0E41                     u4675:
 15233  0E41  36F7               	lsrf	??_Button_Baseline_Update+3,f
 15234  0E42  0CF6               	rrf	??_Button_Baseline_Update+2,f
 15235  0E43  0CF5               	rrf	??_Button_Baseline_Update+1,f
 15236  0E44  0CF4               	rrf	??_Button_Baseline_Update,f
 15237  0E45                     u4670:
 15238  0E45  0B89               	decfsz	9,f
 15239  0E46  2E41               	goto	u4675
 15240  0E47  0872               	movf	Button_Baseline_Update@button,w
 15241  0E48  0086               	movwf	6
 15242  0E49  0873               	movf	Button_Baseline_Update@button+1,w
 15243  0E4A  0087               	movwf	7
 15244  0E4B  3145               	addfsr 1,5
 15245  0E4C  0874               	movf	??_Button_Baseline_Update,w
 15246  0E4D  0281               	subwf	1,f
 15247  0E4E  3141               	addfsr 1,1
 15248  0E4F  0875               	movf	??_Button_Baseline_Update+1,w
 15249  0E50  3B81               	subwfb	1,f
 15250  0E51  3141               	addfsr 1,1
 15251  0E52  0876               	movf	??_Button_Baseline_Update+2,w
 15252  0E53  3B81               	subwfb	1,f
 15253  0E54  3141               	addfsr 1,1
 15254  0E55  0877               	movf	??_Button_Baseline_Update+3,w
 15255  0E56  3B81               	subwfb	1,f
 15256  0E57  317D               	addfsr 1,-3
 15257  0E58                     l6517:
 15258                           
 15259                           ;mcc_generated_files/mtouch/mtouch_button.c: 541:         button->baseline += button->re
      +                          ading;
 15260  0E58  0872               	movf	Button_Baseline_Update@button,w
 15261  0E59  0086               	movwf	6
 15262  0E5A  0873               	movf	Button_Baseline_Update@button+1,w
 15263  0E5B  0087               	movwf	7
 15264  0E5C  3143               	addfsr 1,3
 15265  0E5D  3F40               	moviw [0]fsr1
 15266  0E5E  00F4               	movwf	??_Button_Baseline_Update
 15267  0E5F  3F41               	moviw [1]fsr1
 15268  0E60  00F5               	movwf	??_Button_Baseline_Update+1
 15269  0E61  0874               	movf	??_Button_Baseline_Update,w
 15270  0E62  00F6               	movwf	??_Button_Baseline_Update+2
 15271  0E63  0875               	movf	??_Button_Baseline_Update+1,w
 15272  0E64  00F7               	movwf	??_Button_Baseline_Update+3
 15273  0E65  01F8               	clrf	??_Button_Baseline_Update+4
 15274  0E66  01F9               	clrf	??_Button_Baseline_Update+5
 15275  0E67  0872               	movf	Button_Baseline_Update@button,w
 15276  0E68  0086               	movwf	6
 15277  0E69  0873               	movf	Button_Baseline_Update@button+1,w
 15278  0E6A  0087               	movwf	7
 15279  0E6B  3145               	addfsr 1,5
 15280  0E6C  0876               	movf	??_Button_Baseline_Update+2,w
 15281  0E6D  0781               	addwf	1,f
 15282  0E6E  3141               	addfsr 1,1
 15283  0E6F  0877               	movf	??_Button_Baseline_Update+3,w
 15284  0E70  3D81               	addwfc	1,f
 15285  0E71  3141               	addfsr 1,1
 15286  0E72  0878               	movf	??_Button_Baseline_Update+4,w
 15287  0E73  3D81               	addwfc	1,f
 15288  0E74  3141               	addfsr 1,1
 15289  0E75  0879               	movf	??_Button_Baseline_Update+5,w
 15290  0E76  3D81               	addwfc	1,f
 15291  0E77                     l555:
 15292  0E77  0008               	return
 15293  0E78                     __end_of_Button_Baseline_Update:
 15294                           
 15295                           	psect	text92
 15296  16D6                     __ptext92:	
 15297 ;; *************** function _Button_Baseline_Initialize *****************
 15298 ;; Defined at:
 15299 ;;		line 523 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;  button          2    5[BANK0 ] PTR struct .
 15302 ;;		 -> mtouch_button(144), 
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;		None
 15305 ;; Return value:  Size  Location     Type
 15306 ;;                  1    wreg      void 
 15307 ;; Registers used:
 15308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15309 ;; Tracked objects:
 15310 ;;		On entry : 0/0
 15311 ;;		On exit  : 0/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15316 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15317 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;Total ram usage:        6 bytes
 15319 ;; Hardware stack levels used: 1
 15320 ;; Hardware stack levels required when called: 6
 15321 ;; This function calls:
 15322 ;;		_MTOUCH_Sensor_RawSample_Get
 15323 ;; This function is called by:
 15324 ;;		_Button_State_Initializing
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           
 15329                           ;psect for function _Button_Baseline_Initialize
 15330  16D6                     _Button_Baseline_Initialize:
 15331  16D6                     l6501:	
 15332                           ;incstack = 0
 15333                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15334                           
 15335                           
 15336                           ;mcc_generated_files/mtouch/mtouch_button.c: 523: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 524: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 525:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
 15337  16D6  0020               	movlb	0	; select bank0
 15338  16D7  0825               	movf	Button_Baseline_Initialize@button,w
 15339  16D8  0086               	movwf	6
 15340  16D9  0826               	movf	Button_Baseline_Initialize@button+1,w
 15341  16DA  0087               	movwf	7
 15342  16DB  3141               	addfsr 1,1
 15343  16DC  0801               	movf	1,w
 15344  16DD  3196  2600  3196   	fcall	_MTOUCH_Sensor_RawSample_Get
 15345  16E0  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 15346  16E1  0020               	movlb	0	; select bank0
 15347  16E2  00A7               	movwf	??_Button_Baseline_Initialize
 15348  16E3  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 15349  16E4  00A8               	movwf	??_Button_Baseline_Initialize+1
 15350  16E5  01A9               	clrf	??_Button_Baseline_Initialize+2
 15351  16E6  01AA               	clrf	??_Button_Baseline_Initialize+3
 15352  16E7  0825               	movf	Button_Baseline_Initialize@button,w
 15353  16E8  0086               	movwf	6
 15354  16E9  0826               	movf	Button_Baseline_Initialize@button+1,w
 15355  16EA  0087               	movwf	7
 15356  16EB  3145               	addfsr 1,5
 15357  16EC  0827               	movf	??_Button_Baseline_Initialize,w
 15358  16ED  3FC0               	movwi [0]fsr1
 15359  16EE  0828               	movf	??_Button_Baseline_Initialize+1,w
 15360  16EF  3FC1               	movwi [1]fsr1
 15361  16F0  0829               	movf	??_Button_Baseline_Initialize+2,w
 15362  16F1  3FC2               	movwi [2]fsr1
 15363  16F2  082A               	movf	??_Button_Baseline_Initialize+3,w
 15364  16F3  3FC3               	movwi [3]fsr1
 15365  16F4                     l6503:
 15366                           
 15367                           ;mcc_generated_files/mtouch/mtouch_button.c: 526:     button->baseline <<= ((uint8_t)4u)
      +                          ;
 15368  16F4  0825               	movf	Button_Baseline_Initialize@button,w
 15369  16F5  0086               	movwf	6
 15370  16F6  0826               	movf	Button_Baseline_Initialize@button+1,w
 15371  16F7  0087               	movwf	7
 15372  16F8  3145               	addfsr 1,5
 15373  16F9  3004               	movlw	4
 15374  16FA                     u4645:
 15375  16FA  3581               	lslf	1,f
 15376  16FB  3141               	addfsr 1,1
 15377  16FC  0D81               	rlf	1,f
 15378  16FD  3141               	addfsr 1,1
 15379  16FE  0D81               	rlf	1,f
 15380  16FF  3141               	addfsr 1,1
 15381  1700  0D81               	rlf	1,f
 15382  1701  317D               	addfsr 1,-3
 15383  1702  0B89               	decfsz	9,f
 15384  1703  2EFA               	goto	u4645
 15385  1704                     l550:
 15386  1704  0008               	return
 15387  1705                     __end_of_Button_Baseline_Initialize:
 15388                           
 15389                           	psect	text93
 15390  1106                     __ptext93:	
 15391 ;; *************** function _Button_Reading_Update *****************
 15392 ;; Defined at:
 15393 ;;		line 496 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;  button          2    9[BANK0 ] PTR struct .
 15396 ;;		 -> mtouch_button(144), 
 15397 ;; Auto vars:     Size  Location     Type
 15398 ;;		None
 15399 ;; Return value:  Size  Location     Type
 15400 ;;                  1    wreg      void 
 15401 ;; Registers used:
 15402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15403 ;; Tracked objects:
 15404 ;;		On entry : 0/0
 15405 ;;		On exit  : 0/0
 15406 ;;		Unchanged: 0/0
 15407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15408 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15411 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15412 ;;Total ram usage:        2 bytes
 15413 ;; Hardware stack levels used: 1
 15414 ;; Hardware stack levels required when called: 7
 15415 ;; This function calls:
 15416 ;;		_Button_Reading_Update_Helper
 15417 ;; This function is called by:
 15418 ;;		_Button_Service
 15419 ;; This function uses a non-reentrant model
 15420 ;;
 15421                           
 15422                           
 15423                           ;psect for function _Button_Reading_Update
 15424  1106                     _Button_Reading_Update:
 15425  1106                     l6597:	
 15426                           ;incstack = 0
 15427                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15428                           
 15429                           
 15430                           ;mcc_generated_files/mtouch/mtouch_button.c: 496: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 497: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 498:     if (GIE == (uint8_t) 1)
 15431  1106  1F8B               	btfss	11,7	;volatile
 15432  1107  2909               	goto	u4761
 15433  1108  290A               	goto	u4760
 15434  1109                     u4761:
 15435  1109  2915               	goto	l6605
 15436  110A                     u4760:
 15437  110A                     l6599:
 15438                           
 15439                           ;mcc_generated_files/mtouch/mtouch_button.c: 499:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 500:         GIE = (uint8_t) 0;
 15440  110A  138B               	bcf	11,7	;volatile
 15441  110B                     l6601:
 15442                           
 15443                           ;mcc_generated_files/mtouch/mtouch_button.c: 501:         Button_Reading_Update_Helper(b
      +                          utton);
 15444  110B  0020               	movlb	0	; select bank0
 15445  110C  082A               	movf	Button_Reading_Update@button+1,w
 15446  110D  00A6               	movwf	Button_Reading_Update_Helper@button+1
 15447  110E  0829               	movf	Button_Reading_Update@button,w
 15448  110F  00A5               	movwf	Button_Reading_Update_Helper@button
 15449  1110  3189  216F  3191   	fcall	_Button_Reading_Update_Helper
 15450  1113                     l6603:
 15451                           
 15452                           ;mcc_generated_files/mtouch/mtouch_button.c: 502:         GIE = (uint8_t) 1;
 15453  1113  178B               	bsf	11,7	;volatile
 15454                           
 15455                           ;mcc_generated_files/mtouch/mtouch_button.c: 503:     }
 15456  1114  291D               	goto	l542
 15457  1115                     l6605:
 15458                           
 15459                           ;mcc_generated_files/mtouch/mtouch_button.c: 505:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 506:         Button_Reading_Update_Helper(button);
 15460  1115  0020               	movlb	0	; select bank0
 15461  1116  082A               	movf	Button_Reading_Update@button+1,w
 15462  1117  00A6               	movwf	Button_Reading_Update_Helper@button+1
 15463  1118  0829               	movf	Button_Reading_Update@button,w
 15464  1119  00A5               	movwf	Button_Reading_Update_Helper@button
 15465  111A  3189  216F  3191   	fcall	_Button_Reading_Update_Helper
 15466  111D                     l542:
 15467  111D  0008               	return
 15468  111E                     __end_of_Button_Reading_Update:
 15469                           
 15470                           	psect	text94
 15471  096F                     __ptext94:	
 15472 ;; *************** function _Button_Reading_Update_Helper *****************
 15473 ;; Defined at:
 15474 ;;		line 510 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15475 ;; Parameters:    Size  Location     Type
 15476 ;;  button          2    5[BANK0 ] PTR struct .
 15477 ;;		 -> mtouch_button(144), 
 15478 ;; Auto vars:     Size  Location     Type
 15479 ;;		None
 15480 ;; Return value:  Size  Location     Type
 15481 ;;                  1    wreg      void 
 15482 ;; Registers used:
 15483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15484 ;; Tracked objects:
 15485 ;;		On entry : 0/0
 15486 ;;		On exit  : 0/0
 15487 ;;		Unchanged: 0/0
 15488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15493 ;;Total ram usage:        4 bytes
 15494 ;; Hardware stack levels used: 1
 15495 ;; Hardware stack levels required when called: 6
 15496 ;; This function calls:
 15497 ;;		_MTOUCH_Sensor_RawSample_Get
 15498 ;; This function is called by:
 15499 ;;		_Button_Reading_Update
 15500 ;; This function uses a non-reentrant model
 15501 ;;
 15502                           
 15503                           
 15504                           ;psect for function _Button_Reading_Update_Helper
 15505  096F                     _Button_Reading_Update_Helper:
 15506  096F                     l6519:	
 15507                           ;incstack = 0
 15508                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 15509                           
 15510                           
 15511                           ;mcc_generated_files/mtouch/mtouch_button.c: 510: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 511: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 512:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
 15512  096F  0020               	movlb	0	; select bank0
 15513  0970  0825               	movf	Button_Reading_Update_Helper@button,w
 15514  0971  0086               	movwf	6
 15515  0972  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15516  0973  0087               	movwf	7
 15517  0974  3142               	addfsr 1,2
 15518  0975  0801               	movf	1,w
 15519  0976  1903               	btfsc	3,2
 15520  0977  2979               	goto	u4681
 15521  0978  297A               	goto	u4680
 15522  0979                     u4681:
 15523  0979  29B0               	goto	l6525
 15524  097A                     u4680:
 15525  097A                     l6521:
 15526                           
 15527                           ;mcc_generated_files/mtouch/mtouch_button.c: 513:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 514:         button->reading -= button->reading>>((uint8_t)2u);
 15528  097A  0825               	movf	Button_Reading_Update_Helper@button,w
 15529  097B  0086               	movwf	6
 15530  097C  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15531  097D  0087               	movwf	7
 15532  097E  3143               	addfsr 1,3
 15533  097F  3F40               	moviw [0]fsr1
 15534  0980  00A7               	movwf	??_Button_Reading_Update_Helper
 15535  0981  3F41               	moviw [1]fsr1
 15536  0982  00A8               	movwf	??_Button_Reading_Update_Helper+1
 15537  0983  36A8               	lsrf	??_Button_Reading_Update_Helper+1,f
 15538  0984  0CA7               	rrf	??_Button_Reading_Update_Helper,f
 15539  0985  36A8               	lsrf	??_Button_Reading_Update_Helper+1,f
 15540  0986  0CA7               	rrf	??_Button_Reading_Update_Helper,f
 15541  0987  0825               	movf	Button_Reading_Update_Helper@button,w
 15542  0988  0086               	movwf	6
 15543  0989  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15544  098A  0087               	movwf	7
 15545  098B  3143               	addfsr 1,3
 15546  098C  0827               	movf	??_Button_Reading_Update_Helper,w
 15547  098D  0281               	subwf	1,f
 15548  098E  3141               	addfsr 1,1
 15549  098F  0828               	movf	??_Button_Reading_Update_Helper+1,w
 15550  0990  3B81               	subwfb	1,f
 15551  0991  317F               	addfsr 1,-1
 15552  0992                     l6523:
 15553                           
 15554                           ;mcc_generated_files/mtouch/mtouch_button.c: 515:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
 15555  0992  0825               	movf	Button_Reading_Update_Helper@button,w
 15556  0993  0086               	movwf	6
 15557  0994  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15558  0995  0087               	movwf	7
 15559  0996  3141               	addfsr 1,1
 15560  0997  0801               	movf	1,w
 15561  0998  3196  2600  3189   	fcall	_MTOUCH_Sensor_RawSample_Get
 15562  099B  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 15563  099C  0020               	movlb	0	; select bank0
 15564  099D  00A7               	movwf	??_Button_Reading_Update_Helper
 15565  099E  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 15566  099F  00A8               	movwf	??_Button_Reading_Update_Helper+1
 15567  09A0  36A8               	lsrf	??_Button_Reading_Update_Helper+1,f
 15568  09A1  0CA7               	rrf	??_Button_Reading_Update_Helper,f
 15569  09A2  36A8               	lsrf	??_Button_Reading_Update_Helper+1,f
 15570  09A3  0CA7               	rrf	??_Button_Reading_Update_Helper,f
 15571  09A4  0825               	movf	Button_Reading_Update_Helper@button,w
 15572  09A5  0086               	movwf	6
 15573  09A6  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15574  09A7  0087               	movwf	7
 15575  09A8  3143               	addfsr 1,3
 15576  09A9  0827               	movf	??_Button_Reading_Update_Helper,w
 15577  09AA  0781               	addwf	1,f
 15578  09AB  3141               	addfsr 1,1
 15579  09AC  0828               	movf	??_Button_Reading_Update_Helper+1,w
 15580  09AD  3D81               	addwfc	1,f
 15581  09AE  317F               	addfsr 1,-1
 15582                           
 15583                           ;mcc_generated_files/mtouch/mtouch_button.c: 516:     }
 15584  09AF  29C3               	goto	l547
 15585  09B0                     l6525:
 15586                           
 15587                           ;mcc_generated_files/mtouch/mtouch_button.c: 518:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 519:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
 15588  09B0  0825               	movf	Button_Reading_Update_Helper@button,w
 15589  09B1  0086               	movwf	6
 15590  09B2  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15591  09B3  0087               	movwf	7
 15592  09B4  3141               	addfsr 1,1
 15593  09B5  0801               	movf	1,w
 15594  09B6  3196  2600  3189   	fcall	_MTOUCH_Sensor_RawSample_Get
 15595  09B9  0020               	movlb	0	; select bank0
 15596  09BA  0825               	movf	Button_Reading_Update_Helper@button,w
 15597  09BB  0086               	movwf	6
 15598  09BC  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15599  09BD  0087               	movwf	7
 15600  09BE  3143               	addfsr 1,3
 15601  09BF  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 15602  09C0  3FC0               	movwi [0]fsr1
 15603  09C1  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 15604  09C2  3FC1               	movwi [1]fsr1
 15605  09C3                     l547:
 15606  09C3  0008               	return
 15607  09C4                     __end_of_Button_Reading_Update_Helper:
 15608                           
 15609                           	psect	text95
 15610  1600                     __ptext95:	
 15611 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
 15612 ;; Defined at:
 15613 ;;		line 427 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15614 ;; Parameters:    Size  Location     Type
 15615 ;;  name            1    wreg     enum E2599
 15616 ;; Auto vars:     Size  Location     Type
 15617 ;;  name            1    4[BANK0 ] enum E2599
 15618 ;; Return value:  Size  Location     Type
 15619 ;;                  2    8[COMMON] unsigned short 
 15620 ;; Registers used:
 15621 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15622 ;; Tracked objects:
 15623 ;;		On entry : 0/0
 15624 ;;		On exit  : 0/0
 15625 ;;		Unchanged: 0/0
 15626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15629 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15630 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;Total ram usage:        7 bytes
 15632 ;; Hardware stack levels used: 1
 15633 ;; Hardware stack levels required when called: 5
 15634 ;; This function calls:
 15635 ;;		___wmul
 15636 ;; This function is called by:
 15637 ;;		_Button_Reading_Update_Helper
 15638 ;;		_Button_Baseline_Initialize
 15639 ;; This function uses a non-reentrant model
 15640 ;;
 15641                           
 15642                           
 15643                           ;psect for function _MTOUCH_Sensor_RawSample_Get
 15644  1600                     _MTOUCH_Sensor_RawSample_Get:
 15645                           
 15646                           ;incstack = 0
 15647                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15648                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
 15649  1600  0020               	movlb	0	; select bank0
 15650  1601  00A4               	movwf	MTOUCH_Sensor_RawSample_Get@name
 15651  1602                     l6413:
 15652  1602  3009               	movlw	9
 15653  1603  0224               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
 15654  1604  1803               	skipnc
 15655  1605  2E07               	goto	u4571
 15656  1606  2E08               	goto	u4570
 15657  1607                     u4571:
 15658  1607  2E26               	goto	l6421
 15659  1608                     u4570:
 15660  1608                     l6415:
 15661  1608  0824               	movf	MTOUCH_Sensor_RawSample_Get@name,w
 15662  1609  00A0               	movwf	??_MTOUCH_Sensor_RawSample_Get
 15663  160A  01A1               	clrf	??_MTOUCH_Sensor_RawSample_Get+1
 15664  160B  0820               	movf	??_MTOUCH_Sensor_RawSample_Get,w
 15665  160C  00F2               	movwf	___wmul@multiplier
 15666  160D  0821               	movf	??_MTOUCH_Sensor_RawSample_Get+1,w
 15667  160E  00F3               	movwf	___wmul@multiplier+1
 15668  160F  3009               	movlw	9
 15669  1610  00F4               	movwf	___wmul@multiplicand
 15670  1611  3000               	movlw	0
 15671  1612  00F5               	movwf	___wmul@multiplicand+1
 15672  1613  3192  2211  3196   	fcall	___wmul
 15673  1616  3015               	movlw	21
 15674  1617  0020               	movlb	0	; select bank0
 15675  1618  00A2               	movwf	??_MTOUCH_Sensor_RawSample_Get+2
 15676  1619  3023               	movlw	35
 15677  161A  00A3               	movwf	??_MTOUCH_Sensor_RawSample_Get+3
 15678  161B  0872               	movf	?___wmul,w
 15679  161C  0722               	addwf	??_MTOUCH_Sensor_RawSample_Get+2,w
 15680  161D  0086               	movwf	6
 15681  161E  0873               	movf	?___wmul+1,w
 15682  161F  3D23               	addwfc	??_MTOUCH_Sensor_RawSample_Get+3,w
 15683  1620  0087               	movwf	7
 15684  1621  3F40               	moviw [0]fsr1
 15685  1622  00F8               	movwf	?_MTOUCH_Sensor_RawSample_Get
 15686  1623  3F41               	moviw [1]fsr1
 15687  1624  00F9               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
 15688  1625  2E28               	goto	l194
 15689  1626                     l6421:
 15690  1626  01F8               	clrf	?_MTOUCH_Sensor_RawSample_Get
 15691  1627  01F9               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
 15692  1628                     l194:
 15693  1628  0008               	return
 15694  1629                     __end_of_MTOUCH_Sensor_RawSample_Get:
 15695                           
 15696                           	psect	text96
 15697  1211                     __ptext96:	
 15698 ;; *************** function ___wmul *****************
 15699 ;; Defined at:
 15700 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;  multiplier      2    2[COMMON] unsigned int 
 15703 ;;  multiplicand    2    4[COMMON] unsigned int 
 15704 ;; Auto vars:     Size  Location     Type
 15705 ;;  product         2    6[COMMON] unsigned int 
 15706 ;; Return value:  Size  Location     Type
 15707 ;;                  2    2[COMMON] unsigned int 
 15708 ;; Registers used:
 15709 ;;		wreg, status,2, status,0
 15710 ;; Tracked objects:
 15711 ;;		On entry : 0/0
 15712 ;;		On exit  : 0/0
 15713 ;;		Unchanged: 0/0
 15714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;Total ram usage:        6 bytes
 15720 ;; Hardware stack levels used: 1
 15721 ;; Hardware stack levels required when called: 4
 15722 ;; This function calls:
 15723 ;;		Nothing
 15724 ;; This function is called by:
 15725 ;;		_MTOUCH_Sensor_Initialize
 15726 ;;		_Sensor_Service
 15727 ;;		_Sensor_Acq_ExecuteScan
 15728 ;;		_MTOUCH_Sensor_RawSample_Get
 15729 ;;		_MTOUCH_Sensor_Enable
 15730 ;;		_MTOUCH_Sensor_wasSampled
 15731 ;;		_Timer_Mode
 15732 ;;		_Automatic_Mode
 15733 ;;		_MTOUCH_Sensor_isAnySensorActive
 15734 ;;		_MTOUCH_Sensor_Disable
 15735 ;;		_MTOUCH_Sensor_Oversampling_Get
 15736 ;;		_MTOUCH_Sensor_Oversampling_Set
 15737 ;; This function uses a non-reentrant model
 15738 ;;
 15739                           
 15740                           
 15741                           ;psect for function ___wmul
 15742  1211                     ___wmul:
 15743  1211                     l6337:	
 15744                           ;incstack = 0
 15745                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15746                           
 15747  1211  01F6               	clrf	___wmul@product
 15748  1212  01F7               	clrf	___wmul@product+1
 15749  1213                     l6339:
 15750  1213  1C72               	btfss	___wmul@multiplier,0
 15751  1214  2A16               	goto	u4461
 15752  1215  2A17               	goto	u4460
 15753  1216                     u4461:
 15754  1216  2A1B               	goto	l1470
 15755  1217                     u4460:
 15756  1217                     l6341:
 15757  1217  0874               	movf	___wmul@multiplicand,w
 15758  1218  07F6               	addwf	___wmul@product,f
 15759  1219  0875               	movf	___wmul@multiplicand+1,w
 15760  121A  3DF7               	addwfc	___wmul@product+1,f
 15761  121B                     l1470:
 15762  121B  3001               	movlw	1
 15763  121C                     u4475:
 15764  121C  35F4               	lslf	___wmul@multiplicand,f
 15765  121D  0DF5               	rlf	___wmul@multiplicand+1,f
 15766  121E  0B89               	decfsz	9,f
 15767  121F  2A1C               	goto	u4475
 15768  1220                     l6343:
 15769  1220  3001               	movlw	1
 15770  1221                     u4485:
 15771  1221  36F3               	lsrf	___wmul@multiplier+1,f
 15772  1222  0CF2               	rrf	___wmul@multiplier,f
 15773  1223  0B89               	decfsz	9,f
 15774  1224  2A21               	goto	u4485
 15775  1225                     l6345:
 15776  1225  0872               	movf	___wmul@multiplier,w
 15777  1226  0473               	iorwf	___wmul@multiplier+1,w
 15778  1227  1D03               	btfss	3,2
 15779  1228  2A2A               	goto	u4491
 15780  1229  2A2B               	goto	u4490
 15781  122A                     u4491:
 15782  122A  2A13               	goto	l6339
 15783  122B                     u4490:
 15784  122B                     l6347:
 15785  122B  0877               	movf	___wmul@product+1,w
 15786  122C  00F3               	movwf	?___wmul+1
 15787  122D  0876               	movf	___wmul@product,w
 15788  122E  00F2               	movwf	?___wmul
 15789  122F                     l1472:
 15790  122F  0008               	return
 15791  1230                     __end_of___wmul:
 15792                           
 15793                           	psect	text97
 15794  0D5A                     __ptext97:	
 15795 ;; *************** function _Button_Deviation_Update *****************
 15796 ;; Defined at:
 15797 ;;		line 447 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15798 ;; Parameters:    Size  Location     Type
 15799 ;;  button          2    2[COMMON] PTR struct .
 15800 ;;		 -> mtouch_button(144), 
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;  deviation       4    4[COMMON] long 
 15803 ;; Return value:  Size  Location     Type
 15804 ;;                  1    wreg      void 
 15805 ;; Registers used:
 15806 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15807 ;; Tracked objects:
 15808 ;;		On entry : 0/0
 15809 ;;		On exit  : 0/0
 15810 ;;		Unchanged: 0/0
 15811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15813 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15814 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15815 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15816 ;;Total ram usage:       16 bytes
 15817 ;; Hardware stack levels used: 1
 15818 ;; Hardware stack levels required when called: 4
 15819 ;; This function calls:
 15820 ;;		Nothing
 15821 ;; This function is called by:
 15822 ;;		_Button_Service
 15823 ;; This function uses a non-reentrant model
 15824 ;;
 15825                           
 15826                           
 15827                           ;psect for function _Button_Deviation_Update
 15828  0D5A                     _Button_Deviation_Update:
 15829  0D5A                     l6607:	
 15830                           ;incstack = 0
 15831                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 15832                           
 15833                           
 15834                           ;mcc_generated_files/mtouch/mtouch_button.c: 447: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 448: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 449:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 451:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
 15835  0D5A  0872               	movf	Button_Deviation_Update@button,w
 15836  0D5B  0086               	movwf	6
 15837  0D5C  0873               	movf	Button_Deviation_Update@button+1,w
 15838  0D5D  0087               	movwf	7
 15839  0D5E  3145               	addfsr 1,5
 15840  0D5F  3F40               	moviw [0]fsr1
 15841  0D60  0020               	movlb	0	; select bank0
 15842  0D61  00A0               	movwf	??_Button_Deviation_Update
 15843  0D62  3F41               	moviw [1]fsr1
 15844  0D63  00A1               	movwf	??_Button_Deviation_Update+1
 15845  0D64  3F42               	moviw [2]fsr1
 15846  0D65  00A2               	movwf	??_Button_Deviation_Update+2
 15847  0D66  3F43               	moviw [3]fsr1
 15848  0D67  00A3               	movwf	??_Button_Deviation_Update+3
 15849  0D68  3004               	movlw	4
 15850  0D69                     u4775:
 15851  0D69  36A3               	lsrf	??_Button_Deviation_Update+3,f
 15852  0D6A  0CA2               	rrf	??_Button_Deviation_Update+2,f
 15853  0D6B  0CA1               	rrf	??_Button_Deviation_Update+1,f
 15854  0D6C  0CA0               	rrf	??_Button_Deviation_Update,f
 15855  0D6D                     u4770:
 15856  0D6D  0B89               	decfsz	9,f
 15857  0D6E  2D69               	goto	u4775
 15858  0D6F  0872               	movf	Button_Deviation_Update@button,w
 15859  0D70  0086               	movwf	6
 15860  0D71  0873               	movf	Button_Deviation_Update@button+1,w
 15861  0D72  0087               	movwf	7
 15862  0D73  3143               	addfsr 1,3
 15863  0D74  3F40               	moviw [0]fsr1
 15864  0D75  00A4               	movwf	??_Button_Deviation_Update+4
 15865  0D76  3F41               	moviw [1]fsr1
 15866  0D77  00A5               	movwf	??_Button_Deviation_Update+5
 15867  0D78  0824               	movf	??_Button_Deviation_Update+4,w
 15868  0D79  00A6               	movwf	??_Button_Deviation_Update+6
 15869  0D7A  0825               	movf	??_Button_Deviation_Update+5,w
 15870  0D7B  00A7               	movwf	??_Button_Deviation_Update+7
 15871  0D7C  01A8               	clrf	??_Button_Deviation_Update+8
 15872  0D7D  01A9               	clrf	??_Button_Deviation_Update+9
 15873  0D7E  0820               	movf	??_Button_Deviation_Update,w
 15874  0D7F  02A6               	subwf	??_Button_Deviation_Update+6,f
 15875  0D80  0821               	movf	??_Button_Deviation_Update+1,w
 15876  0D81  3BA7               	subwfb	??_Button_Deviation_Update+7,f
 15877  0D82  0822               	movf	??_Button_Deviation_Update+2,w
 15878  0D83  3BA8               	subwfb	??_Button_Deviation_Update+8,f
 15879  0D84  0823               	movf	??_Button_Deviation_Update+3,w
 15880  0D85  3BA9               	subwfb	??_Button_Deviation_Update+9,f
 15881  0D86  0829               	movf	??_Button_Deviation_Update+9,w
 15882  0D87  00F7               	movwf	Button_Deviation_Update@deviation+3
 15883  0D88  0828               	movf	??_Button_Deviation_Update+8,w
 15884  0D89  00F6               	movwf	Button_Deviation_Update@deviation+2
 15885  0D8A  0827               	movf	??_Button_Deviation_Update+7,w
 15886  0D8B  00F5               	movwf	Button_Deviation_Update@deviation+1
 15887  0D8C  0826               	movf	??_Button_Deviation_Update+6,w
 15888  0D8D  00F4               	movwf	Button_Deviation_Update@deviation
 15889                           
 15890                           ;mcc_generated_files/mtouch/mtouch_button.c: 454:     deviation = deviation >> (button->
      +                          scaling);
 15891  0D8E  0874               	movf	Button_Deviation_Update@deviation,w
 15892  0D8F  00A0               	movwf	??_Button_Deviation_Update
 15893  0D90  0875               	movf	Button_Deviation_Update@deviation+1,w
 15894  0D91  00A1               	movwf	??_Button_Deviation_Update+1
 15895  0D92  0876               	movf	Button_Deviation_Update@deviation+2,w
 15896  0D93  00A2               	movwf	??_Button_Deviation_Update+2
 15897  0D94  0877               	movf	Button_Deviation_Update@deviation+3,w
 15898  0D95  00A3               	movwf	??_Button_Deviation_Update+3
 15899  0D96  0872               	movf	Button_Deviation_Update@button,w
 15900  0D97  0086               	movwf	6
 15901  0D98  0873               	movf	Button_Deviation_Update@button+1,w
 15902  0D99  0087               	movwf	7
 15903  0D9A  314F               	addfsr 1,15
 15904  0D9B  0A01               	incf	1,w
 15905  0D9C  2DA1               	goto	u4780
 15906  0D9D                     u4785:
 15907  0D9D  37A3               	asrf	??_Button_Deviation_Update+3,f
 15908  0D9E  0CA2               	rrf	??_Button_Deviation_Update+2,f
 15909  0D9F  0CA1               	rrf	??_Button_Deviation_Update+1,f
 15910  0DA0  0CA0               	rrf	??_Button_Deviation_Update,f
 15911  0DA1                     u4780:
 15912  0DA1  0B89               	decfsz	9,f
 15913  0DA2  2D9D               	goto	u4785
 15914  0DA3  0823               	movf	??_Button_Deviation_Update+3,w
 15915  0DA4  00F7               	movwf	Button_Deviation_Update@deviation+3
 15916  0DA5  0822               	movf	??_Button_Deviation_Update+2,w
 15917  0DA6  00F6               	movwf	Button_Deviation_Update@deviation+2
 15918  0DA7  0821               	movf	??_Button_Deviation_Update+1,w
 15919  0DA8  00F5               	movwf	Button_Deviation_Update@deviation+1
 15920  0DA9  0820               	movf	??_Button_Deviation_Update,w
 15921  0DAA  00F4               	movwf	Button_Deviation_Update@deviation
 15922  0DAB                     l6609:
 15923                           
 15924                           ;mcc_generated_files/mtouch/mtouch_button.c: 457:     if (deviation > ((0x7f)))
 15925  0DAB  1BF7               	btfsc	Button_Deviation_Update@deviation+3,7
 15926  0DAC  2DBB               	goto	u4791
 15927  0DAD  0877               	movf	Button_Deviation_Update@deviation+3,w
 15928  0DAE  1D03               	btfss	3,2
 15929  0DAF  2DBC               	goto	u4790
 15930  0DB0  0876               	movf	Button_Deviation_Update@deviation+2,w
 15931  0DB1  1D03               	btfss	3,2
 15932  0DB2  2DBC               	goto	u4790
 15933  0DB3  0875               	movf	Button_Deviation_Update@deviation+1,w
 15934  0DB4  1D03               	btfss	3,2
 15935  0DB5  2DBC               	goto	u4790
 15936  0DB6  3080               	movlw	128
 15937  0DB7  0274               	subwf	Button_Deviation_Update@deviation,w
 15938  0DB8  1C03               	btfss	3,0
 15939  0DB9  2DBB               	goto	u4791
 15940  0DBA  2DBC               	goto	u4790
 15941  0DBB                     u4791:
 15942  0DBB  2DC4               	goto	l6613
 15943  0DBC                     u4790:
 15944  0DBC                     l6611:
 15945                           
 15946                           ;mcc_generated_files/mtouch/mtouch_button.c: 458:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 459:         deviation = ((0x7f));
 15947  0DBC  3000               	movlw	0
 15948  0DBD  00F7               	movwf	Button_Deviation_Update@deviation+3
 15949  0DBE  3000               	movlw	0
 15950  0DBF  00F6               	movwf	Button_Deviation_Update@deviation+2
 15951  0DC0  3000               	movlw	0
 15952  0DC1  00F5               	movwf	Button_Deviation_Update@deviation+1
 15953  0DC2  307F               	movlw	127
 15954  0DC3  00F4               	movwf	Button_Deviation_Update@deviation
 15955  0DC4                     l6613:
 15956                           
 15957                           ;mcc_generated_files/mtouch/mtouch_button.c: 461:     if (deviation < ((-1-0x7f)))
 15958  0DC4  1FF7               	btfss	Button_Deviation_Update@deviation+3,7
 15959  0DC5  2DD1               	goto	u4801
 15960  0DC6  3080               	movlw	128
 15961  0DC7  0274               	subwf	Button_Deviation_Update@deviation,w
 15962  0DC8  30FF               	movlw	255
 15963  0DC9  3B75               	subwfb	Button_Deviation_Update@deviation+1,w
 15964  0DCA  30FF               	movlw	255
 15965  0DCB  3B76               	subwfb	Button_Deviation_Update@deviation+2,w
 15966  0DCC  30FF               	movlw	255
 15967  0DCD  3B77               	subwfb	Button_Deviation_Update@deviation+3,w
 15968  0DCE  1803               	btfsc	3,0
 15969  0DCF  2DD1               	goto	u4801
 15970  0DD0  2DD2               	goto	u4800
 15971  0DD1                     u4801:
 15972  0DD1  2DDA               	goto	l6617
 15973  0DD2                     u4800:
 15974  0DD2                     l6615:
 15975                           
 15976                           ;mcc_generated_files/mtouch/mtouch_button.c: 462:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 463:         deviation = ((-1-0x7f));
 15977  0DD2  30FF               	movlw	255
 15978  0DD3  00F7               	movwf	Button_Deviation_Update@deviation+3
 15979  0DD4  30FF               	movlw	255
 15980  0DD5  00F6               	movwf	Button_Deviation_Update@deviation+2
 15981  0DD6  30FF               	movlw	255
 15982  0DD7  00F5               	movwf	Button_Deviation_Update@deviation+1
 15983  0DD8  3080               	movlw	128
 15984  0DD9  00F4               	movwf	Button_Deviation_Update@deviation
 15985  0DDA                     l6617:
 15986                           
 15987                           ;mcc_generated_files/mtouch/mtouch_button.c: 466:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
 15988  0DDA  0872               	movf	Button_Deviation_Update@button,w
 15989  0DDB  3E09               	addlw	9
 15990  0DDC  0020               	movlb	0	; select bank0
 15991  0DDD  00A0               	movwf	??_Button_Deviation_Update
 15992  0DDE  3000               	movlw	0
 15993  0DDF  3D73               	addwfc	Button_Deviation_Update@button+1,w
 15994  0DE0  00A1               	movwf	??_Button_Deviation_Update+1
 15995  0DE1  0820               	movf	??_Button_Deviation_Update,w
 15996  0DE2  0086               	movwf	6
 15997  0DE3  0821               	movf	??_Button_Deviation_Update+1,w
 15998  0DE4  0087               	movwf	7
 15999  0DE5  0874               	movf	Button_Deviation_Update@deviation,w
 16000  0DE6  0081               	movwf	1
 16001  0DE7                     l526:
 16002  0DE7  0008               	return
 16003  0DE8                     __end_of_Button_Deviation_Update:
 16004                           
 16005                           	psect	text98
 16006  15D8                     __ptext98:	
 16007 ;; *************** function _MTOUCH_Button_isPressed *****************
 16008 ;; Defined at:
 16009 ;;		line 422 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16010 ;; Parameters:    Size  Location     Type
 16011 ;;  name            1    wreg     enum E2826
 16012 ;; Auto vars:     Size  Location     Type
 16013 ;;  name            1    6[COMMON] enum E2826
 16014 ;; Return value:  Size  Location     Type
 16015 ;;                  1    wreg      _Bool 
 16016 ;; Registers used:
 16017 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16018 ;; Tracked objects:
 16019 ;;		On entry : 0/0
 16020 ;;		On exit  : 0/0
 16021 ;;		Unchanged: 0/0
 16022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16026 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16027 ;;Total ram usage:        5 bytes
 16028 ;; Hardware stack levels used: 1
 16029 ;; Hardware stack levels required when called: 4
 16030 ;; This function calls:
 16031 ;;		Nothing
 16032 ;; This function is called by:
 16033 ;;		_Main_Routine
 16034 ;;		_Manual_Mode
 16035 ;;		_Timer_Mode
 16036 ;;		_Automatic_Mode
 16037 ;;		_touch_example
 16038 ;;		_MTOUCH_Button_Buttonmask_Get
 16039 ;; This function uses a non-reentrant model
 16040 ;;
 16041                           
 16042                           
 16043                           ;psect for function _MTOUCH_Button_isPressed
 16044  15D8                     _MTOUCH_Button_isPressed:
 16045                           
 16046                           ;incstack = 0
 16047                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
 16048                           ;MTOUCH_Button_isPressed@name stored from wreg
 16049  15D8  00F6               	movwf	MTOUCH_Button_isPressed@name
 16050  15D9                     l6953:
 16051                           
 16052                           ;mcc_generated_files/mtouch/mtouch_button.c: 422: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 423: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 424:     if(name < 9u)
 16053  15D9  3009               	movlw	9
 16054  15DA  0276               	subwf	MTOUCH_Button_isPressed@name,w
 16055  15DB  1803               	skipnc
 16056  15DC  2DDE               	goto	u5241
 16057  15DD  2DDF               	goto	u5240
 16058  15DE                     u5241:
 16059  15DE  2DFE               	goto	l6961
 16060  15DF                     u5240:
 16061  15DF                     l6955:
 16062                           
 16063                           ;mcc_generated_files/mtouch/mtouch_button.c: 425:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
 16064  15DF  0876               	movf	MTOUCH_Button_isPressed@name,w
 16065  15E0  00F2               	movwf	??_MTOUCH_Button_isPressed
 16066  15E1  01F3               	clrf	??_MTOUCH_Button_isPressed+1
 16067  15E2  0EF2               	swapf	??_MTOUCH_Button_isPressed,f
 16068  15E3  0EF3               	swapf	??_MTOUCH_Button_isPressed+1,f
 16069  15E4  30F0               	movlw	240
 16070  15E5  05F3               	andwf	??_MTOUCH_Button_isPressed+1,f
 16071  15E6  0872               	movf	??_MTOUCH_Button_isPressed,w
 16072  15E7  390F               	andlw	15
 16073  15E8  04F3               	iorwf	??_MTOUCH_Button_isPressed+1,f
 16074  15E9  30F0               	movlw	240
 16075  15EA  05F2               	andwf	??_MTOUCH_Button_isPressed,f
 16076  15EB  3062               	movlw	98
 16077  15EC  00F4               	movwf	??_MTOUCH_Button_isPressed+2
 16078  15ED  3023               	movlw	35
 16079  15EE  00F5               	movwf	??_MTOUCH_Button_isPressed+3
 16080  15EF  0872               	movf	??_MTOUCH_Button_isPressed,w
 16081  15F0  0774               	addwf	??_MTOUCH_Button_isPressed+2,w
 16082  15F1  0086               	movwf	6
 16083  15F2  0873               	movf	??_MTOUCH_Button_isPressed+1,w
 16084  15F3  3D75               	addwfc	??_MTOUCH_Button_isPressed+3,w
 16085  15F4  0087               	movwf	7
 16086  15F5  3002               	movlw	2
 16087  15F6  0601               	xorwf	1,w
 16088  15F7  1903               	btfsc	3,2
 16089  15F8  2DFA               	goto	u5251
 16090  15F9  2DFC               	goto	u5250
 16091  15FA                     u5251:
 16092  15FA  3001               	movlw	1
 16093  15FB  2DFD               	goto	u5260
 16094  15FC                     u5250:
 16095  15FC  3000               	movlw	0
 16096  15FD                     u5260:
 16097  15FD  2DFF               	goto	l510
 16098  15FE                     l6961:
 16099                           
 16100                           ;mcc_generated_files/mtouch/mtouch_button.c: 427:         return 0;
 16101  15FE  3000               	movlw	0
 16102  15FF                     l510:
 16103  15FF  0008               	return
 16104  1600                     __end_of_MTOUCH_Button_isPressed:
 16105                           
 16106                           	psect	text99
 16107  111E                     __ptext99:	
 16108 ;; *************** function _FCN_POWER *****************
 16109 ;; Defined at:
 16110 ;;		line 381 in file "main.c"
 16111 ;; Parameters:    Size  Location     Type
 16112 ;;		None
 16113 ;; Auto vars:     Size  Location     Type
 16114 ;;		None
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  1    wreg      void 
 16117 ;; Registers used:
 16118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16128 ;;Total ram usage:        0 bytes
 16129 ;; Hardware stack levels used: 1
 16130 ;; Hardware stack levels required when called: 7
 16131 ;; This function calls:
 16132 ;;		_EEPROM_init
 16133 ;;		_SET_SOUND_MODE
 16134 ;;		_Toggle_7seg
 16135 ;;		_Toggle_OFFLED
 16136 ;;		_Toggle_PushButton
 16137 ;;		_Toggle_Touch_LEDs
 16138 ;;		_Toggle_Touches
 16139 ;; This function is called by:
 16140 ;;		_Main_Routine
 16141 ;;		_Automatic_Mode
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           
 16146                           ;psect for function _FCN_POWER
 16147  111E                     _FCN_POWER:
 16148  111E                     l7195:	
 16149                           ;incstack = 0
 16150                           ; Regs used in _FCN_POWER: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16151                           
 16152                           
 16153                           ;main.c: 383:     Toggle_Touch_LEDs();
 16154  111E  3190  20EF  3191   	fcall	_Toggle_Touch_LEDs
 16155                           
 16156                           ;main.c: 384:     Toggle_OFFLED();
 16157  1121  3190  20AC  3191   	fcall	_Toggle_OFFLED
 16158                           
 16159                           ;main.c: 385:     Toggle_Touches();
 16160  1124  319F  271D  3191   	fcall	_Toggle_Touches
 16161                           
 16162                           ;main.c: 386:     Toggle_7seg();
 16163  1127  3191  219F  3191   	fcall	_Toggle_7seg
 16164                           
 16165                           ;main.c: 387:     Toggle_PushButton();
 16166  112A  319F  270D  3191   	fcall	_Toggle_PushButton
 16167  112D                     l7197:
 16168                           
 16169                           ;main.c: 388:     EEPROM_init();
 16170  112D  3194  24F6  3191   	fcall	_EEPROM_init
 16171  1130                     l7199:
 16172  1130  0022               	movlb	2	; select bank2
 16173  1131  128C               	bcf	12,5	;volatile
 16174  1132                     l7201:
 16175                           
 16176                           ;main.c: 391:     SET_SOUND_MODE(learn_rf_code_is_start);
 16177  1132  3000               	movlw	0
 16178  1133  3186  268E  3191   	fcall	_SET_SOUND_MODE
 16179  1136                     l1060:
 16180  1136  0008               	return
 16181  1137                     __end_of_FCN_POWER:
 16182                           
 16183                           	psect	text100
 16184  1F1D                     __ptext100:	
 16185 ;; *************** function _Toggle_Touches *****************
 16186 ;; Defined at:
 16187 ;;		line 425 in file "main.c"
 16188 ;; Parameters:    Size  Location     Type
 16189 ;;		None
 16190 ;; Auto vars:     Size  Location     Type
 16191 ;;		None
 16192 ;; Return value:  Size  Location     Type
 16193 ;;                  1    wreg      void 
 16194 ;; Registers used:
 16195 ;;		wreg, status,2, status,0
 16196 ;; Tracked objects:
 16197 ;;		On entry : 0/0
 16198 ;;		On exit  : 0/0
 16199 ;;		Unchanged: 0/0
 16200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16205 ;;Total ram usage:        1 bytes
 16206 ;; Hardware stack levels used: 1
 16207 ;; Hardware stack levels required when called: 4
 16208 ;; This function calls:
 16209 ;;		Nothing
 16210 ;; This function is called by:
 16211 ;;		_FCN_POWER
 16212 ;; This function uses a non-reentrant model
 16213 ;;
 16214                           
 16215                           
 16216                           ;psect for function _Toggle_Touches
 16217  1F1D                     _Toggle_Touches:
 16218  1F1D                     l7105:	
 16219                           ;incstack = 0
 16220                           ; Regs used in _Toggle_Touches: [wreg+status,2+status,0]
 16221                           
 16222                           
 16223                           ;main.c: 427:     g_status.touches ^= 1;
 16224  1F1D  0020               	movlb	0	; select bank0
 16225  1F1E  0C5F               	rrf	_g_status,w
 16226  1F1F  00F2               	movwf	??_Toggle_Touches
 16227  1F20  0C72               	rrf	??_Toggle_Touches,w
 16228  1F21  3901               	andlw	1
 16229  1F22  00F2               	movwf	??_Toggle_Touches
 16230  1F23  3001               	movlw	1
 16231  1F24  06F2               	xorwf	??_Toggle_Touches,f
 16232  1F25  0DF2               	rlf	??_Toggle_Touches,f
 16233  1F26  0DF2               	rlf	??_Toggle_Touches,f
 16234  1F27  085F               	movf	_g_status,w
 16235  1F28  0672               	xorwf	??_Toggle_Touches,w
 16236  1F29  39FB               	andlw	-5
 16237  1F2A  0672               	xorwf	??_Toggle_Touches,w
 16238  1F2B  00DF               	movwf	_g_status
 16239  1F2C                     l1081:
 16240  1F2C  0008               	return
 16241  1F2D                     __end_of_Toggle_Touches:
 16242                           
 16243                           	psect	text101
 16244  10EF                     __ptext101:	
 16245 ;; *************** function _Toggle_Touch_LEDs *****************
 16246 ;; Defined at:
 16247 ;;		line 399 in file "main.c"
 16248 ;; Parameters:    Size  Location     Type
 16249 ;;		None
 16250 ;; Auto vars:     Size  Location     Type
 16251 ;;		None
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  1    wreg      void 
 16254 ;; Registers used:
 16255 ;;		wreg, status,2, status,0
 16256 ;; Tracked objects:
 16257 ;;		On entry : 0/0
 16258 ;;		On exit  : 0/0
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16265 ;;Total ram usage:        1 bytes
 16266 ;; Hardware stack levels used: 1
 16267 ;; Hardware stack levels required when called: 4
 16268 ;; This function calls:
 16269 ;;		Nothing
 16270 ;; This function is called by:
 16271 ;;		_init_panel
 16272 ;;		_FCN_POWER
 16273 ;; This function uses a non-reentrant model
 16274 ;;
 16275                           
 16276                           
 16277                           ;psect for function _Toggle_Touch_LEDs
 16278  10EF                     _Toggle_Touch_LEDs:
 16279  10EF                     l7031:	
 16280                           ;incstack = 0
 16281                           ; Regs used in _Toggle_Touch_LEDs: [wreg+status,2+status,0]
 16282                           
 16283                           
 16284                           ;main.c: 401:     if (g_status.touch_leds) {
 16285  10EF  0020               	movlb	0	; select bank0
 16286  10F0  1CDF               	btfss	_g_status,1
 16287  10F1  28F3               	goto	u5291
 16288  10F2  28F4               	goto	u5290
 16289  10F3                     u5291:
 16290  10F3  28F7               	goto	l1067
 16291  10F4                     u5290:
 16292  10F4                     l1064:	
 16293                           ;main.c: 403:         do { LATCbits.LATC4 = 1; } while(0);
 16294                           
 16295  10F4  0022               	movlb	2	; select bank2
 16296  10F5  160E               	bsf	14,4	;volatile
 16297  10F6  28F9               	goto	l7033
 16298  10F7                     l1067:	
 16299                           ;main.c: 406:         do { LATCbits.LATC4 = 0; } while(0);
 16300                           
 16301  10F7  0022               	movlb	2	; select bank2
 16302  10F8  120E               	bcf	14,4	;volatile
 16303  10F9                     l7033:
 16304                           
 16305                           ;main.c: 409:     g_status.touch_leds ^= 1;
 16306  10F9  0020               	movlb	0	; select bank0
 16307  10FA  0C5F               	rrf	_g_status,w
 16308  10FB  3901               	andlw	1
 16309  10FC  00F2               	movwf	??_Toggle_Touch_LEDs
 16310  10FD  3001               	movlw	1
 16311  10FE  06F2               	xorwf	??_Toggle_Touch_LEDs,f
 16312  10FF  0DF2               	rlf	??_Toggle_Touch_LEDs,f
 16313  1100  085F               	movf	_g_status,w
 16314  1101  0672               	xorwf	??_Toggle_Touch_LEDs,w
 16315  1102  39FD               	andlw	-3
 16316  1103  0672               	xorwf	??_Toggle_Touch_LEDs,w
 16317  1104  00DF               	movwf	_g_status
 16318  1105                     l1069:
 16319  1105  0008               	return
 16320  1106                     __end_of_Toggle_Touch_LEDs:
 16321                           
 16322                           	psect	text102
 16323  1F0D                     __ptext102:	
 16324 ;; *************** function _Toggle_PushButton *****************
 16325 ;; Defined at:
 16326 ;;		line 445 in file "main.c"
 16327 ;; Parameters:    Size  Location     Type
 16328 ;;		None
 16329 ;; Auto vars:     Size  Location     Type
 16330 ;;		None
 16331 ;; Return value:  Size  Location     Type
 16332 ;;                  1    wreg      void 
 16333 ;; Registers used:
 16334 ;;		wreg, status,2, status,0
 16335 ;; Tracked objects:
 16336 ;;		On entry : 0/0
 16337 ;;		On exit  : 0/0
 16338 ;;		Unchanged: 0/0
 16339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;Total ram usage:        1 bytes
 16345 ;; Hardware stack levels used: 1
 16346 ;; Hardware stack levels required when called: 4
 16347 ;; This function calls:
 16348 ;;		Nothing
 16349 ;; This function is called by:
 16350 ;;		_FCN_POWER
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           
 16355                           ;psect for function _Toggle_PushButton
 16356  1F0D                     _Toggle_PushButton:
 16357  1F0D                     l7107:	
 16358                           ;incstack = 0
 16359                           ; Regs used in _Toggle_PushButton: [wreg+status,2+status,0]
 16360                           
 16361                           
 16362                           ;main.c: 447:     g_status.PushButton ^= 1;
 16363  1F0D  0020               	movlb	0	; select bank0
 16364  1F0E  0E5F               	swapf	_g_status,w
 16365  1F0F  00F2               	movwf	??_Toggle_PushButton
 16366  1F10  0C72               	rrf	??_Toggle_PushButton,w
 16367  1F11  3901               	andlw	1
 16368  1F12  00F2               	movwf	??_Toggle_PushButton
 16369  1F13  3001               	movlw	1
 16370  1F14  06F2               	xorwf	??_Toggle_PushButton,f
 16371  1F15  0EF2               	swapf	??_Toggle_PushButton,f
 16372  1F16  0DF2               	rlf	??_Toggle_PushButton,f
 16373  1F17  085F               	movf	_g_status,w
 16374  1F18  0672               	xorwf	??_Toggle_PushButton,w
 16375  1F19  39DF               	andlw	-33
 16376  1F1A  0672               	xorwf	??_Toggle_PushButton,w
 16377  1F1B  00DF               	movwf	_g_status
 16378  1F1C                     l1089:
 16379  1F1C  0008               	return
 16380  1F1D                     __end_of_Toggle_PushButton:
 16381                           
 16382                           	psect	text103
 16383  10AC                     __ptext103:	
 16384 ;; *************** function _Toggle_OFFLED *****************
 16385 ;; Defined at:
 16386 ;;		line 412 in file "main.c"
 16387 ;; Parameters:    Size  Location     Type
 16388 ;;		None
 16389 ;; Auto vars:     Size  Location     Type
 16390 ;;		None
 16391 ;; Return value:  Size  Location     Type
 16392 ;;                  1    wreg      void 
 16393 ;; Registers used:
 16394 ;;		wreg, status,2, status,0
 16395 ;; Tracked objects:
 16396 ;;		On entry : 0/0
 16397 ;;		On exit  : 0/0
 16398 ;;		Unchanged: 0/0
 16399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16404 ;;Total ram usage:        1 bytes
 16405 ;; Hardware stack levels used: 1
 16406 ;; Hardware stack levels required when called: 4
 16407 ;; This function calls:
 16408 ;;		Nothing
 16409 ;; This function is called by:
 16410 ;;		_init_panel
 16411 ;;		_FCN_POWER
 16412 ;; This function uses a non-reentrant model
 16413 ;;
 16414                           
 16415                           
 16416                           ;psect for function _Toggle_OFFLED
 16417  10AC                     _Toggle_OFFLED:
 16418  10AC                     l7027:	
 16419                           ;incstack = 0
 16420                           ; Regs used in _Toggle_OFFLED: [wreg+status,2+status,0]
 16421                           
 16422                           
 16423                           ;main.c: 414:     if (g_status.off_led) {
 16424  10AC  0020               	movlb	0	; select bank0
 16425  10AD  1C5F               	btfss	_g_status,0
 16426  10AE  28B0               	goto	u5281
 16427  10AF  28B1               	goto	u5280
 16428  10B0                     u5281:
 16429  10B0  28B4               	goto	l1076
 16430  10B1                     u5280:
 16431  10B1                     l1073:	
 16432                           ;main.c: 416:         do { LATCbits.LATC5 = 1; } while(0);
 16433                           
 16434  10B1  0022               	movlb	2	; select bank2
 16435  10B2  168E               	bsf	14,5	;volatile
 16436  10B3  28B6               	goto	l7029
 16437  10B4                     l1076:	
 16438                           ;main.c: 419:         do { LATCbits.LATC5 = 0; } while(0);
 16439                           
 16440  10B4  0022               	movlb	2	; select bank2
 16441  10B5  128E               	bcf	14,5	;volatile
 16442  10B6                     l7029:
 16443                           
 16444                           ;main.c: 422:     g_status.off_led ^= 1;
 16445  10B6  0020               	movlb	0	; select bank0
 16446  10B7  085F               	movf	_g_status,w
 16447  10B8  3901               	andlw	1
 16448  10B9  00F2               	movwf	??_Toggle_OFFLED
 16449  10BA  3001               	movlw	1
 16450  10BB  06F2               	xorwf	??_Toggle_OFFLED,f
 16451  10BC  085F               	movf	_g_status,w
 16452  10BD  0672               	xorwf	??_Toggle_OFFLED,w
 16453  10BE  39FE               	andlw	-2
 16454  10BF  0672               	xorwf	??_Toggle_OFFLED,w
 16455  10C0  00DF               	movwf	_g_status
 16456  10C1                     l1078:
 16457  10C1  0008               	return
 16458  10C2                     __end_of_Toggle_OFFLED:
 16459                           
 16460                           	psect	text104
 16461  119F                     __ptext104:	
 16462 ;; *************** function _Toggle_7seg *****************
 16463 ;; Defined at:
 16464 ;;		line 430 in file "main.c"
 16465 ;; Parameters:    Size  Location     Type
 16466 ;;		None
 16467 ;; Auto vars:     Size  Location     Type
 16468 ;;		None
 16469 ;; Return value:  Size  Location     Type
 16470 ;;                  1    wreg      void 
 16471 ;; Registers used:
 16472 ;;		wreg, status,2, status,0, pclath, cstack
 16473 ;; Tracked objects:
 16474 ;;		On entry : 0/0
 16475 ;;		On exit  : 0/0
 16476 ;;		Unchanged: 0/0
 16477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;Total ram usage:        1 bytes
 16483 ;; Hardware stack levels used: 1
 16484 ;; Hardware stack levels required when called: 6
 16485 ;; This function calls:
 16486 ;;		_TX_Command
 16487 ;; This function is called by:
 16488 ;;		_init_panel
 16489 ;;		_FCN_POWER
 16490 ;; This function uses a non-reentrant model
 16491 ;;
 16492                           
 16493                           
 16494                           ;psect for function _Toggle_7seg
 16495  119F                     _Toggle_7seg:
 16496  119F                     l7035:	
 16497                           ;incstack = 0
 16498                           ; Regs used in _Toggle_7seg: [wreg+status,2+status,0+pclath+cstack]
 16499                           
 16500                           
 16501                           ;main.c: 432:     if (g_status._7segment) {
 16502  119F  0020               	movlb	0	; select bank0
 16503  11A0  1E5F               	btfss	_g_status,4
 16504  11A1  29A3               	goto	u5301
 16505  11A2  29A4               	goto	u5300
 16506  11A3                     u5301:
 16507  11A3  29A9               	goto	l7039
 16508  11A4                     u5300:
 16509  11A4                     l7037:
 16510                           
 16511                           ;main.c: 434:         TX_Command(TX_7SEG_ON);
 16512  11A4  300B               	movlw	11
 16513  11A5  319E  26E1  3191   	fcall	_TX_Command
 16514                           
 16515                           ;main.c: 436:     } else {
 16516  11A8  29AD               	goto	l7041
 16517  11A9                     l7039:
 16518                           
 16519                           ;main.c: 439:         TX_Command(TX_7SEG_OFF);
 16520  11A9  300C               	movlw	12
 16521  11AA  319E  26E1  3191   	fcall	_TX_Command
 16522  11AD                     l7041:
 16523                           
 16524                           ;main.c: 442:     g_status._7segment ^= 1;
 16525  11AD  0020               	movlb	0	; select bank0
 16526  11AE  0E5F               	swapf	_g_status,w
 16527  11AF  3901               	andlw	1
 16528  11B0  00F4               	movwf	??_Toggle_7seg
 16529  11B1  3001               	movlw	1
 16530  11B2  06F4               	xorwf	??_Toggle_7seg,f
 16531  11B3  0EF4               	swapf	??_Toggle_7seg,f
 16532  11B4  085F               	movf	_g_status,w
 16533  11B5  0674               	xorwf	??_Toggle_7seg,w
 16534  11B6  39EF               	andlw	-17
 16535  11B7  0674               	xorwf	??_Toggle_7seg,w
 16536  11B8  00DF               	movwf	_g_status
 16537  11B9                     l1086:
 16538  11B9  0008               	return
 16539  11BA                     __end_of_Toggle_7seg:
 16540                           
 16541                           	psect	text105
 16542  1EE1                     __ptext105:	
 16543 ;; *************** function _TX_Command *****************
 16544 ;; Defined at:
 16545 ;;		line 469 in file "main.c"
 16546 ;; Parameters:    Size  Location     Type
 16547 ;;  txData          1    wreg     unsigned char 
 16548 ;; Auto vars:     Size  Location     Type
 16549 ;;  txData          1    3[COMMON] unsigned char 
 16550 ;; Return value:  Size  Location     Type
 16551 ;;                  1    wreg      void 
 16552 ;; Registers used:
 16553 ;;		wreg, status,2, status,0, pclath, cstack
 16554 ;; Tracked objects:
 16555 ;;		On entry : 0/0
 16556 ;;		On exit  : 0/0
 16557 ;;		Unchanged: 0/0
 16558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;Total ram usage:        1 bytes
 16564 ;; Hardware stack levels used: 1
 16565 ;; Hardware stack levels required when called: 5
 16566 ;; This function calls:
 16567 ;;		_EUSART_Write
 16568 ;;		_EUSART_is_tx_ready
 16569 ;; This function is called by:
 16570 ;;		_FCN_NEXT
 16571 ;;		_FCN_UP
 16572 ;;		_Toggle_7seg
 16573 ;;		_Manual_Mode
 16574 ;;		_Timer_Mode
 16575 ;;		_Automatic_Mode
 16576 ;; This function uses a non-reentrant model
 16577 ;;
 16578                           
 16579                           
 16580                           ;psect for function _TX_Command
 16581  1EE1                     _TX_Command:
 16582                           
 16583                           ;incstack = 0
 16584                           ; Regs used in _TX_Command: [wreg+status,2+status,0+pclath+cstack]
 16585                           ;TX_Command@txData stored from wreg
 16586  1EE1  00F3               	movwf	TX_Command@txData
 16587  1EE2                     l6879:
 16588                           
 16589                           ;main.c: 471:     if (EUSART_is_tx_ready()) {
 16590  1EE2  319E  26EF  319E   	fcall	_EUSART_is_tx_ready
 16591  1EE5  3A00               	xorlw	0
 16592  1EE6  1903               	skipnz
 16593  1EE7  2EE9               	goto	u5161
 16594  1EE8  2EEA               	goto	u5160
 16595  1EE9                     u5161:
 16596  1EE9  2EEE               	goto	l1098
 16597  1EEA                     u5160:
 16598  1EEA                     l6881:
 16599                           
 16600                           ;main.c: 473:         EUSART_Write(txData);
 16601  1EEA  0873               	movf	TX_Command@txData,w
 16602  1EEB  319E  26BE  319E   	fcall	_EUSART_Write
 16603  1EEE                     l1098:
 16604  1EEE  0008               	return
 16605  1EEF                     __end_of_TX_Command:
 16606                           
 16607                           	psect	text106
 16608  1EEF                     __ptext106:	
 16609 ;; *************** function _EUSART_is_tx_ready *****************
 16610 ;; Defined at:
 16611 ;;		line 94 in file "mcc_generated_files/eusart.c"
 16612 ;; Parameters:    Size  Location     Type
 16613 ;;		None
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;		None
 16616 ;; Return value:  Size  Location     Type
 16617 ;;                  1    wreg      _Bool 
 16618 ;; Registers used:
 16619 ;;		wreg, status,2
 16620 ;; Tracked objects:
 16621 ;;		On entry : 0/0
 16622 ;;		On exit  : 0/0
 16623 ;;		Unchanged: 0/0
 16624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;Total ram usage:        1 bytes
 16630 ;; Hardware stack levels used: 1
 16631 ;; Hardware stack levels required when called: 4
 16632 ;; This function calls:
 16633 ;;		Nothing
 16634 ;; This function is called by:
 16635 ;;		_TX_Command
 16636 ;; This function uses a non-reentrant model
 16637 ;;
 16638                           
 16639                           
 16640                           ;psect for function _EUSART_is_tx_ready
 16641  1EEF                     _EUSART_is_tx_ready:
 16642  1EEF                     l6771:	
 16643                           ;incstack = 0
 16644                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
 16645                           
 16646                           
 16647                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
 16648  1EEF  01F2               	clrf	_EUSART_is_tx_ready$1214
 16649  1EF0                     l6773:
 16650  1EF0  0020               	movlb	0	; select bank0
 16651  1EF1  1E11               	btfss	17,4	;volatile
 16652  1EF2  2EF4               	goto	u5021
 16653  1EF3  2EF5               	goto	u5020
 16654  1EF4                     u5021:
 16655  1EF4  2EFC               	goto	l6779
 16656  1EF5                     u5020:
 16657  1EF5                     l6775:
 16658  1EF5  0023               	movlb	3	; select bank3
 16659  1EF6  1E9E               	btfss	30,5	;volatile
 16660  1EF7  2EF9               	goto	u5031
 16661  1EF8  2EFA               	goto	u5030
 16662  1EF9                     u5031:
 16663  1EF9  2EFC               	goto	l6779
 16664  1EFA                     u5030:
 16665  1EFA                     l6777:
 16666  1EFA  01F2               	clrf	_EUSART_is_tx_ready$1214
 16667  1EFB  0AF2               	incf	_EUSART_is_tx_ready$1214,f
 16668  1EFC                     l6779:
 16669  1EFC  0872               	movf	_EUSART_is_tx_ready$1214,w
 16670  1EFD                     l713:
 16671  1EFD  0008               	return
 16672  1EFE                     __end_of_EUSART_is_tx_ready:
 16673                           
 16674                           	psect	text107
 16675  1EBE                     __ptext107:	
 16676 ;; *************** function _EUSART_Write *****************
 16677 ;; Defined at:
 16678 ;;		line 132 in file "mcc_generated_files/eusart.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;  txData          1    wreg     unsigned char 
 16681 ;; Auto vars:     Size  Location     Type
 16682 ;;  txData          1    2[COMMON] unsigned char 
 16683 ;; Return value:  Size  Location     Type
 16684 ;;                  1    wreg      void 
 16685 ;; Registers used:
 16686 ;;		wreg
 16687 ;; Tracked objects:
 16688 ;;		On entry : 0/0
 16689 ;;		On exit  : 0/0
 16690 ;;		Unchanged: 0/0
 16691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16696 ;;Total ram usage:        1 bytes
 16697 ;; Hardware stack levels used: 1
 16698 ;; Hardware stack levels required when called: 4
 16699 ;; This function calls:
 16700 ;;		Nothing
 16701 ;; This function is called by:
 16702 ;;		_TX_Command
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           
 16707                           ;psect for function _EUSART_Write
 16708  1EBE                     _EUSART_Write:
 16709                           
 16710                           ;incstack = 0
 16711                           ; Regs used in _EUSART_Write: [wreg]
 16712                           ;EUSART_Write@txData stored from wreg
 16713  1EBE  00F2               	movwf	EUSART_Write@txData
 16714  1EBF                     l6783:
 16715  1EBF                     l732:	
 16716                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 16717                           
 16718                           
 16719                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 16720  1EBF  0020               	movlb	0	; select bank0
 16721  1EC0  1E11               	btfss	17,4	;volatile
 16722  1EC1  2EC3               	goto	u5041
 16723  1EC2  2EC4               	goto	u5040
 16724  1EC3                     u5041:
 16725  1EC3  2EBF               	goto	l732
 16726  1EC4                     u5040:
 16727  1EC4                     l6785:
 16728                           
 16729                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 16730  1EC4  0872               	movf	EUSART_Write@txData,w
 16731  1EC5  0023               	movlb	3	; select bank3
 16732  1EC6  009A               	movwf	26	;volatile
 16733  1EC7                     l735:
 16734  1EC7  0008               	return
 16735  1EC8                     __end_of_EUSART_Write:
 16736                           
 16737                           	psect	text108
 16738  068E                     __ptext108:	
 16739 ;; *************** function _SET_SOUND_MODE *****************
 16740 ;; Defined at:
 16741 ;;		line 60 in file "sound/sound_unit.c"
 16742 ;; Parameters:    Size  Location     Type
 16743 ;;  MODE            1    wreg     enum E2
 16744 ;; Auto vars:     Size  Location     Type
 16745 ;;  MODE            1    0[BANK0 ] enum E2
 16746 ;; Return value:  Size  Location     Type
 16747 ;;                  1    wreg      void 
 16748 ;; Registers used:
 16749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16750 ;; Tracked objects:
 16751 ;;		On entry : 0/0
 16752 ;;		On exit  : 0/0
 16753 ;;		Unchanged: 0/0
 16754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16756 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16758 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16759 ;;Total ram usage:        3 bytes
 16760 ;; Hardware stack levels used: 1
 16761 ;; Hardware stack levels required when called: 5
 16762 ;; This function calls:
 16763 ;;		_GENERATE_PULSE
 16764 ;; This function is called by:
 16765 ;;		_FCN_POWER
 16766 ;;		_Manual_Mode
 16767 ;;		_Timer_Mode
 16768 ;;		_Automatic_Mode
 16769 ;; This function uses a non-reentrant model
 16770 ;;
 16771                           
 16772                           
 16773                           ;psect for function _SET_SOUND_MODE
 16774  068E                     _SET_SOUND_MODE:
 16775                           
 16776                           ;incstack = 0
 16777                           ; Regs used in _SET_SOUND_MODE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16778                           ;SET_SOUND_MODE@MODE stored from wreg
 16779  068E  0020               	movlb	0	; select bank0
 16780  068F  00A0               	movwf	SET_SOUND_MODE@MODE
 16781  0690                     l6967:
 16782                           
 16783                           ;sound/sound_unit.c: 61: switch(MODE){
 16784  0690  2F78               	goto	l7005
 16785  0691                     l6969:
 16786                           
 16787                           ;sound/sound_unit.c: 63:         GENERATE_PULSE(200,32);
 16788  0691  30C8               	movlw	200
 16789  0692  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16790  0693  3000               	movlw	0
 16791  0694  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16792  0695  3020               	movlw	32
 16793  0696  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16794  0697  3000               	movlw	0
 16795  0698  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16796  0699  3197  2798  3186   	fcall	_GENERATE_PULSE
 16797                           
 16798                           ;sound/sound_unit.c: 64:         break;
 16799  069C  2F9D               	goto	l881
 16800  069D                     l6971:
 16801                           
 16802                           ;sound/sound_unit.c: 66:         GENERATE_PULSE(200, 32);
 16803  069D  30C8               	movlw	200
 16804  069E  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16805  069F  3000               	movlw	0
 16806  06A0  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16807  06A1  3020               	movlw	32
 16808  06A2  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16809  06A3  3000               	movlw	0
 16810  06A4  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16811  06A5  3197  2798  3186   	fcall	_GENERATE_PULSE
 16812  06A8                     l6973:
 16813                           
 16814                           ;sound/sound_unit.c: 67:         _delay((unsigned long)((50)*(16000000/4000.0)));
 16815  06A8  3002               	movlw	2
 16816  06A9  00F9               	movwf	??_SET_SOUND_MODE+1
 16817  06AA  3004               	movlw	4
 16818  06AB  00F8               	movwf	??_SET_SOUND_MODE
 16819  06AC  30BA               	movlw	186
 16820  06AD                     u6737:
 16821  06AD  0B89               	decfsz	9,f
 16822  06AE  2EAD               	goto	u6737
 16823  06AF  0BF8               	decfsz	??_SET_SOUND_MODE,f
 16824  06B0  2EAD               	goto	u6737
 16825  06B1  0BF9               	decfsz	??_SET_SOUND_MODE+1,f
 16826  06B2  2EAD               	goto	u6737
 16827  06B3  3200               	nop2
 16828  06B4  2E91               	goto	l6969
 16829  06B5                     l6977:
 16830                           
 16831                           ;sound/sound_unit.c: 71:         GENERATE_PULSE(150,60);
 16832  06B5  3096               	movlw	150
 16833  06B6  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16834  06B7  3000               	movlw	0
 16835  06B8  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16836  06B9  303C               	movlw	60
 16837  06BA  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16838  06BB  3000               	movlw	0
 16839  06BC  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16840  06BD  3197  2798  3186   	fcall	_GENERATE_PULSE
 16841  06C0                     l6979:
 16842                           
 16843                           ;sound/sound_unit.c: 72:         _delay((unsigned long)((50)*(16000000/4000.0)));
 16844  06C0  3002               	movlw	2
 16845  06C1  00F9               	movwf	??_SET_SOUND_MODE+1
 16846  06C2  3004               	movlw	4
 16847  06C3  00F8               	movwf	??_SET_SOUND_MODE
 16848  06C4  30BA               	movlw	186
 16849  06C5                     u6747:
 16850  06C5  0B89               	decfsz	9,f
 16851  06C6  2EC5               	goto	u6747
 16852  06C7  0BF8               	decfsz	??_SET_SOUND_MODE,f
 16853  06C8  2EC5               	goto	u6747
 16854  06C9  0BF9               	decfsz	??_SET_SOUND_MODE+1,f
 16855  06CA  2EC5               	goto	u6747
 16856  06CB  3200               	nop2
 16857  06CC                     l6981:
 16858                           
 16859                           ;sound/sound_unit.c: 73:         GENERATE_PULSE(150,100);
 16860  06CC  3096               	movlw	150
 16861  06CD  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16862  06CE  3000               	movlw	0
 16863  06CF  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16864  06D0  3064               	movlw	100
 16865  06D1  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16866  06D2  3000               	movlw	0
 16867  06D3  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16868  06D4  3197  2798  3186   	fcall	_GENERATE_PULSE
 16869                           
 16870                           ;sound/sound_unit.c: 74:         break;
 16871  06D7  2F9D               	goto	l881
 16872  06D8                     l6983:
 16873                           
 16874                           ;sound/sound_unit.c: 76:         GENERATE_PULSE(200, 32);
 16875  06D8  30C8               	movlw	200
 16876  06D9  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16877  06DA  3000               	movlw	0
 16878  06DB  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16879  06DC  3020               	movlw	32
 16880  06DD  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16881  06DE  3000               	movlw	0
 16882  06DF  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16883  06E0  3197  2798  3186   	fcall	_GENERATE_PULSE
 16884  06E3                     l6985:
 16885                           
 16886                           ;sound/sound_unit.c: 77:         _delay((unsigned long)((500)*(16000000/4000.0)));
 16887  06E3  300B               	movlw	11
 16888  06E4  00F9               	movwf	??_SET_SOUND_MODE+1
 16889  06E5  3026               	movlw	38
 16890  06E6  00F8               	movwf	??_SET_SOUND_MODE
 16891  06E7  305E               	movlw	94
 16892  06E8                     u6757:
 16893  06E8  0B89               	decfsz	9,f
 16894  06E9  2EE8               	goto	u6757
 16895  06EA  0BF8               	decfsz	??_SET_SOUND_MODE,f
 16896  06EB  2EE8               	goto	u6757
 16897  06EC  0BF9               	decfsz	??_SET_SOUND_MODE+1,f
 16898  06ED  2EE8               	goto	u6757
 16899  06EE                     l6987:
 16900                           
 16901                           ;sound/sound_unit.c: 78:         GENERATE_PULSE(200, 32);
 16902  06EE  30C8               	movlw	200
 16903  06EF  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16904  06F0  3000               	movlw	0
 16905  06F1  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16906  06F2  3020               	movlw	32
 16907  06F3  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16908  06F4  3000               	movlw	0
 16909  06F5  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16910  06F6  3197  2798  3186   	fcall	_GENERATE_PULSE
 16911                           
 16912                           ;sound/sound_unit.c: 79:         _delay((unsigned long)((500)*(16000000/4000.0)));
 16913  06F9  300B               	movlw	11
 16914  06FA  00F9               	movwf	??_SET_SOUND_MODE+1
 16915  06FB  3026               	movlw	38
 16916  06FC  00F8               	movwf	??_SET_SOUND_MODE
 16917  06FD  305E               	movlw	94
 16918  06FE                     u6767:
 16919  06FE  0B89               	decfsz	9,f
 16920  06FF  2EFE               	goto	u6767
 16921  0700  0BF8               	decfsz	??_SET_SOUND_MODE,f
 16922  0701  2EFE               	goto	u6767
 16923  0702  0BF9               	decfsz	??_SET_SOUND_MODE+1,f
 16924  0703  2EFE               	goto	u6767
 16925  0704  2E91               	goto	l6969
 16926  0705                     l6991:
 16927                           
 16928                           ;sound/sound_unit.c: 83:         GENERATE_PULSE(250, 100);
 16929  0705  30FA               	movlw	250
 16930  0706  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16931  0707  3000               	movlw	0
 16932  0708  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16933  0709  3064               	movlw	100
 16934  070A  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16935  070B  3000               	movlw	0
 16936  070C  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16937  070D  3197  2798  3186   	fcall	_GENERATE_PULSE
 16938  0710                     l6993:
 16939                           
 16940                           ;sound/sound_unit.c: 84:         _delay((unsigned long)((50)*(16000000/4000.0)));
 16941  0710  3002               	movlw	2
 16942  0711  00F9               	movwf	??_SET_SOUND_MODE+1
 16943  0712  3004               	movlw	4
 16944  0713  00F8               	movwf	??_SET_SOUND_MODE
 16945  0714  30BA               	movlw	186
 16946  0715                     u6777:
 16947  0715  0B89               	decfsz	9,f
 16948  0716  2F15               	goto	u6777
 16949  0717  0BF8               	decfsz	??_SET_SOUND_MODE,f
 16950  0718  2F15               	goto	u6777
 16951  0719  0BF9               	decfsz	??_SET_SOUND_MODE+1,f
 16952  071A  2F15               	goto	u6777
 16953  071B  3200               	nop2
 16954  071C                     l6995:
 16955                           
 16956                           ;sound/sound_unit.c: 85:         GENERATE_PULSE(250, 100);
 16957  071C  30FA               	movlw	250
 16958  071D  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16959  071E  3000               	movlw	0
 16960  071F  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16961  0720  3064               	movlw	100
 16962  0721  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16963  0722  3000               	movlw	0
 16964  0723  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16965  0724  3197  2798  3186   	fcall	_GENERATE_PULSE
 16966                           
 16967                           ;sound/sound_unit.c: 86:         break;
 16968  0727  2F9D               	goto	l881
 16969  0728                     l6997:
 16970                           
 16971                           ;sound/sound_unit.c: 88:         GENERATE_PULSE(150, 12);
 16972  0728  3096               	movlw	150
 16973  0729  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16974  072A  3000               	movlw	0
 16975  072B  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16976  072C  300C               	movlw	12
 16977  072D  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16978  072E  3000               	movlw	0
 16979  072F  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16980  0730  3197  2798  3186   	fcall	_GENERATE_PULSE
 16981                           
 16982                           ;sound/sound_unit.c: 89:         GENERATE_PULSE(100, 38);
 16983  0733  3064               	movlw	100
 16984  0734  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16985  0735  3000               	movlw	0
 16986  0736  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16987  0737  3026               	movlw	38
 16988  0738  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 16989  0739  3000               	movlw	0
 16990  073A  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 16991  073B  3197  2798  3186   	fcall	_GENERATE_PULSE
 16992                           
 16993                           ;sound/sound_unit.c: 90:         GENERATE_PULSE(60, 50);
 16994  073E  303C               	movlw	60
 16995  073F  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 16996  0740  3000               	movlw	0
 16997  0741  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 16998  0742  3032               	movlw	50
 16999  0743  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 17000  0744  3000               	movlw	0
 17001  0745  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 17002  0746  3197  2798  3186   	fcall	_GENERATE_PULSE
 17003                           
 17004                           ;sound/sound_unit.c: 91:         break;
 17005  0749  2F9D               	goto	l881
 17006  074A                     l6999:
 17007                           
 17008                           ;sound/sound_unit.c: 93:         GENERATE_PULSE(40, 50);
 17009  074A  3028               	movlw	40
 17010  074B  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 17011  074C  3000               	movlw	0
 17012  074D  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 17013  074E  3032               	movlw	50
 17014  074F  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 17015  0750  3000               	movlw	0
 17016  0751  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 17017  0752  3197  2798  3186   	fcall	_GENERATE_PULSE
 17018                           
 17019                           ;sound/sound_unit.c: 94:         GENERATE_PULSE(50, 38);
 17020  0755  3032               	movlw	50
 17021  0756  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 17022  0757  3000               	movlw	0
 17023  0758  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 17024  0759  3026               	movlw	38
 17025  075A  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 17026  075B  3000               	movlw	0
 17027  075C  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 17028  075D  3197  2798  3186   	fcall	_GENERATE_PULSE
 17029                           
 17030                           ;sound/sound_unit.c: 95:         GENERATE_PULSE(75, 32);
 17031  0760  304B               	movlw	75
 17032  0761  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 17033  0762  3000               	movlw	0
 17034  0763  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 17035  0764  3020               	movlw	32
 17036  0765  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 17037  0766  3000               	movlw	0
 17038  0767  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 17039  0768  3197  2798  3186   	fcall	_GENERATE_PULSE
 17040                           
 17041                           ;sound/sound_unit.c: 96:         break;
 17042  076B  2F9D               	goto	l881
 17043  076C                     l7001:
 17044                           
 17045                           ;sound/sound_unit.c: 99:         GENERATE_PULSE(500, 20);
 17046  076C  30F4               	movlw	244
 17047  076D  00F2               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE
 17048  076E  3001               	movlw	1
 17049  076F  00F3               	movwf	GENERATE_PULSE@NUMBER_OF_PULSE+1
 17050  0770  3014               	movlw	20
 17051  0771  00F4               	movwf	GENERATE_PULSE@PULSE_PERIODE
 17052  0772  3000               	movlw	0
 17053  0773  00F5               	movwf	GENERATE_PULSE@PULSE_PERIODE+1
 17054  0774  3197  2798  3186   	fcall	_GENERATE_PULSE
 17055                           
 17056                           ;sound/sound_unit.c: 100:         break;
 17057  0777  2F9D               	goto	l881
 17058  0778                     l7005:
 17059  0778  0820               	movf	SET_SOUND_MODE@MODE,w
 17060  0779  00F8               	movwf	??_SET_SOUND_MODE
 17061  077A  01F9               	clrf	??_SET_SOUND_MODE+1
 17062                           
 17063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17064                           ; Switch size 1, requested type "simple"
 17065                           ; Number of cases is 1, Range of values is 0 to 0
 17066                           ; switch strategies available:
 17067                           ; Name         Instructions Cycles
 17068                           ; simple_byte            4     3 (average)
 17069                           ; direct_byte            8     6 (fixed)
 17070                           ; jumptable            260     6 (fixed)
 17071                           ;	Chosen strategy is simple_byte
 17072  077B  0879               	movf	??_SET_SOUND_MODE+1,w
 17073  077C  3A00               	xorlw	0	; case 0
 17074  077D  1903               	skipnz
 17075  077E  2F80               	goto	l8079
 17076  077F  2F9D               	goto	l881
 17077  0780                     l8079:
 17078                           
 17079                           ; Switch size 1, requested type "simple"
 17080                           ; Number of cases is 9, Range of values is 0 to 8
 17081                           ; switch strategies available:
 17082                           ; Name         Instructions Cycles
 17083                           ; direct_byte           24     6 (fixed)
 17084                           ; simple_byte           28    15 (average)
 17085                           ; jumptable            260     6 (fixed)
 17086                           ;	Chosen strategy is simple_byte
 17087  0780  0878               	movf	??_SET_SOUND_MODE,w
 17088  0781  3A00               	xorlw	0	; case 0
 17089  0782  1903               	skipnz
 17090  0783  2E91               	goto	l6969
 17091  0784  3A01               	xorlw	1	; case 1
 17092  0785  1903               	skipnz
 17093  0786  2E9D               	goto	l6971
 17094  0787  3A03               	xorlw	3	; case 2
 17095  0788  1903               	skipnz
 17096  0789  2EB5               	goto	l6977
 17097  078A  3A01               	xorlw	1	; case 3
 17098  078B  1903               	skipnz
 17099  078C  2ED8               	goto	l6983
 17100  078D  3A07               	xorlw	7	; case 4
 17101  078E  1903               	skipnz
 17102  078F  2F05               	goto	l6991
 17103  0790  3A01               	xorlw	1	; case 5
 17104  0791  1903               	skipnz
 17105  0792  2F28               	goto	l6997
 17106  0793  3A03               	xorlw	3	; case 6
 17107  0794  1903               	skipnz
 17108  0795  2F4A               	goto	l6999
 17109  0796  3A01               	xorlw	1	; case 7
 17110  0797  1903               	skipnz
 17111  0798  2F6C               	goto	l7001
 17112  0799  3A0F               	xorlw	15	; case 8
 17113  079A  1903               	skipnz
 17114  079B  2F6C               	goto	l7001
 17115  079C  2F9D               	goto	l881
 17116  079D                     l881:
 17117  079D  0008               	return
 17118  079E                     __end_of_SET_SOUND_MODE:
 17119                           
 17120                           	psect	text109
 17121  1798                     __ptext109:	
 17122 ;; *************** function _GENERATE_PULSE *****************
 17123 ;; Defined at:
 17124 ;;		line 119 in file "sound/sound_unit.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;  NUMBER_OF_PU    2    2[COMMON] unsigned int 
 17127 ;;  PULSE_PERIOD    2    4[COMMON] unsigned int 
 17128 ;; Auto vars:     Size  Location     Type
 17129 ;;  counter         2    6[COMMON] unsigned int 
 17130 ;; Return value:  Size  Location     Type
 17131 ;;                  1    wreg      void 
 17132 ;; Registers used:
 17133 ;;		wreg, status,2, status,0
 17134 ;; Tracked objects:
 17135 ;;		On entry : 0/0
 17136 ;;		On exit  : 0/0
 17137 ;;		Unchanged: 0/0
 17138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17142 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17143 ;;Total ram usage:        6 bytes
 17144 ;; Hardware stack levels used: 1
 17145 ;; Hardware stack levels required when called: 4
 17146 ;; This function calls:
 17147 ;;		Nothing
 17148 ;; This function is called by:
 17149 ;;		_SET_SOUND_MODE
 17150 ;; This function uses a non-reentrant model
 17151 ;;
 17152                           
 17153                           
 17154                           ;psect for function _GENERATE_PULSE
 17155  1798                     _GENERATE_PULSE:
 17156  1798                     l6867:	
 17157                           ;incstack = 0
 17158                           ; Regs used in _GENERATE_PULSE: [wreg+status,2+status,0]
 17159                           
 17160                           
 17161                           ;sound/sound_unit.c: 120:     unsigned int counter;;sound/sound_unit.c: 121:     (INTCON
      +                          bits.GIE = 0);
 17162  1798  138B               	bcf	11,7	;volatile
 17163                           
 17164                           ;sound/sound_unit.c: 122:     while(--NUMBER_OF_PULSE > 0){
 17165  1799  2FBE               	goto	l6877
 17166  179A                     l886:	
 17167                           ;sound/sound_unit.c: 123:             do { LATBbits.LATB6 = 1; } while(0);
 17168                           
 17169  179A  0022               	movlb	2	; select bank2
 17170  179B  170D               	bsf	13,6	;volatile
 17171  179C                     l6869:
 17172                           
 17173                           ;sound/sound_unit.c: 124:         counter = (int)(0.000036 / (13 * (1.0 / (16000000 / 4)
      +                          ))) * 1;
 17174  179C  300B               	movlw	11
 17175  179D  00F6               	movwf	GENERATE_PULSE@counter
 17176  179E  3000               	movlw	0
 17177  179F  00F7               	movwf	GENERATE_PULSE@counter+1
 17178  17A0                     l6871:	
 17179                           ;sound/sound_unit.c: 125:         while(--counter > 0);
 17180                           
 17181  17A0  3001               	movlw	1
 17182  17A1  02F6               	subwf	GENERATE_PULSE@counter,f
 17183  17A2  3000               	movlw	0
 17184  17A3  3BF7               	subwfb	GENERATE_PULSE@counter+1,f
 17185  17A4  0876               	movf	GENERATE_PULSE@counter,w
 17186  17A5  0477               	iorwf	GENERATE_PULSE@counter+1,w
 17187  17A6  1D03               	btfss	3,2
 17188  17A7  2FA9               	goto	u5131
 17189  17A8  2FAA               	goto	u5130
 17190  17A9                     u5131:
 17191  17A9  2FA0               	goto	l6871
 17192  17AA                     u5130:
 17193  17AA                     l891:	
 17194                           ;sound/sound_unit.c: 126:         do { LATBbits.LATB6 = 0; } while(0);
 17195                           
 17196  17AA  0022               	movlb	2	; select bank2
 17197  17AB  130D               	bcf	13,6	;volatile
 17198  17AC                     l6873:
 17199                           
 17200                           ;sound/sound_unit.c: 127:         counter = PULSE_PERIODE * 2 ;
 17201  17AC  3574               	lslf	GENERATE_PULSE@PULSE_PERIODE,w
 17202  17AD  00F6               	movwf	GENERATE_PULSE@counter
 17203  17AE  0D75               	rlf	GENERATE_PULSE@PULSE_PERIODE+1,w
 17204  17AF  00F7               	movwf	GENERATE_PULSE@counter+1
 17205                           
 17206                           ;sound/sound_unit.c: 128:         while(--counter > 0){
 17207  17B0  2FB4               	goto	l6875
 17208  17B1                     l894:
 17209                           
 17210                           ;sound/sound_unit.c: 129:          __nop();__nop();__nop();
 17211  17B1  0000               	nop
 17212  17B2  0000               	nop
 17213  17B3  0000               	nop
 17214  17B4                     l6875:
 17215                           
 17216                           ;sound/sound_unit.c: 128:         while(--counter > 0){
 17217  17B4  3001               	movlw	1
 17218  17B5  02F6               	subwf	GENERATE_PULSE@counter,f
 17219  17B6  3000               	movlw	0
 17220  17B7  3BF7               	subwfb	GENERATE_PULSE@counter+1,f
 17221  17B8  0876               	movf	GENERATE_PULSE@counter,w
 17222  17B9  0477               	iorwf	GENERATE_PULSE@counter+1,w
 17223  17BA  1D03               	btfss	3,2
 17224  17BB  2FBD               	goto	u5141
 17225  17BC  2FBE               	goto	u5140
 17226  17BD                     u5141:
 17227  17BD  2FB1               	goto	l894
 17228  17BE                     u5140:
 17229  17BE                     l6877:
 17230                           
 17231                           ;sound/sound_unit.c: 122:     while(--NUMBER_OF_PULSE > 0){
 17232  17BE  3001               	movlw	1
 17233  17BF  02F2               	subwf	GENERATE_PULSE@NUMBER_OF_PULSE,f
 17234  17C0  3000               	movlw	0
 17235  17C1  3BF3               	subwfb	GENERATE_PULSE@NUMBER_OF_PULSE+1,f
 17236  17C2  0872               	movf	GENERATE_PULSE@NUMBER_OF_PULSE,w
 17237  17C3  0473               	iorwf	GENERATE_PULSE@NUMBER_OF_PULSE+1,w
 17238  17C4  1D03               	btfss	3,2
 17239  17C5  2FC7               	goto	u5151
 17240  17C6  2FC8               	goto	u5150
 17241  17C7                     u5151:
 17242  17C7  2F9A               	goto	l886
 17243  17C8                     u5150:
 17244  17C8                     l897:	
 17245                           ;sound/sound_unit.c: 132:         do { LATBbits.LATB6 = 0; } while(0);
 17246                           
 17247  17C8  0022               	movlb	2	; select bank2
 17248  17C9  130D               	bcf	13,6	;volatile
 17249  17CA                     l898:
 17250                           
 17251                           ;sound/sound_unit.c: 133:     (INTCONbits.GIE = 1);
 17252  17CA  178B               	bsf	11,7	;volatile
 17253  17CB                     l899:
 17254  17CB  0008               	return
 17255  17CC                     __end_of_GENERATE_PULSE:
 17256                           
 17257                           	psect	text110
 17258  14F6                     __ptext110:	
 17259 ;; *************** function _EEPROM_init *****************
 17260 ;; Defined at:
 17261 ;;		line 272 in file "main.c"
 17262 ;; Parameters:    Size  Location     Type
 17263 ;;		None
 17264 ;; Auto vars:     Size  Location     Type
 17265 ;;  i               1    6[BANK0 ] unsigned char 
 17266 ;; Return value:  Size  Location     Type
 17267 ;;                  1    wreg      void 
 17268 ;; Registers used:
 17269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17270 ;; Tracked objects:
 17271 ;;		On entry : 0/0
 17272 ;;		On exit  : 0/0
 17273 ;;		Unchanged: 0/0
 17274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17279 ;;Total ram usage:        2 bytes
 17280 ;; Hardware stack levels used: 1
 17281 ;; Hardware stack levels required when called: 6
 17282 ;; This function calls:
 17283 ;;		___eetoi
 17284 ;; This function is called by:
 17285 ;;		_main
 17286 ;;		_FCN_POWER
 17287 ;; This function uses a non-reentrant model
 17288 ;;
 17289                           
 17290                           
 17291                           ;psect for function _EEPROM_init
 17292  14F6                     _EEPROM_init:
 17293  14F6                     l7013:	
 17294                           ;incstack = 0
 17295                           ; Regs used in _EEPROM_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17296                           
 17297                           
 17298                           ;main.c: 274:     for (register uint8_t i = 0; i < 4; i++) {
 17299  14F6  0020               	movlb	0	; select bank0
 17300  14F7  01A6               	clrf	EEPROM_init@i
 17301  14F8                     l7019:
 17302                           
 17303                           ;main.c: 276:         g_memory_mass[i] = ge_memory_mass[i];
 17304  14F8  3526               	lslf	EEPROM_init@i,w
 17305  14F9  3E00               	addlw	low _ge_memory_mass
 17306  14FA  319F  27D8  3194   	fcall	___eetoi
 17307  14FD  0020               	movlb	0	; select bank0
 17308  14FE  3526               	lslf	EEPROM_init@i,w
 17309  14FF  3EA0               	addlw	(low (_g_memory_mass| 0))& (0+255)
 17310  1500  0086               	movwf	6
 17311  1501  0187               	clrf	7
 17312  1502  0878               	movf	?___eetoi,w
 17313  1503  3FC0               	movwi [0]fsr1
 17314  1504  0879               	movf	?___eetoi+1,w
 17315  1505  3FC1               	movwi [1]fsr1
 17316  1506                     l7021:
 17317                           
 17318                           ;main.c: 277:     }
 17319  1506  3001               	movlw	1
 17320  1507  00A5               	movwf	??_EEPROM_init
 17321  1508  0825               	movf	??_EEPROM_init,w
 17322  1509  07A6               	addwf	EEPROM_init@i,f
 17323  150A                     l7023:
 17324  150A  3004               	movlw	4
 17325  150B  0226               	subwf	EEPROM_init@i,w
 17326  150C  1C03               	skipc
 17327  150D  2D0F               	goto	u5271
 17328  150E  2D10               	goto	u5270
 17329  150F                     u5271:
 17330  150F  2CF8               	goto	l7019
 17331  1510                     u5270:
 17332  1510                     l7025:
 17333                           
 17334                           ;main.c: 279:     g_time_ms = ge_time_ms;
 17335  1510  3008               	movlw	(low _ge_time_ms)& (0+255)
 17336  1511  319F  27D8  3194   	fcall	___eetoi
 17337  1514  0879               	movf	?___eetoi+1,w
 17338  1515  0020               	movlb	0	; select bank0
 17339  1516  00EB               	movwf	_g_time_ms+1	;volatile
 17340  1517  0878               	movf	?___eetoi,w
 17341  1518  00EA               	movwf	_g_time_ms	;volatile
 17342  1519                     l1022:
 17343  1519  0008               	return
 17344  151A                     __end_of_EEPROM_init:
 17345                           
 17346                           	psect	text111
 17347  1FD8                     __ptext111:	
 17348 ;; *************** function ___eetoi *****************
 17349 ;; Defined at:
 17350 ;;		line 112 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c"
 17351 ;; Parameters:    Size  Location     Type
 17352 ;;  addr            1    wreg     PTR eeprom void 
 17353 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
 17354 ;; Auto vars:     Size  Location     Type
 17355 ;;  addr            1    4[BANK0 ] PTR eeprom void 
 17356 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
 17357 ;;  data            2    2[BANK0 ] unsigned int 
 17358 ;; Return value:  Size  Location     Type
 17359 ;;                  2    8[COMMON] unsigned int 
 17360 ;; Registers used:
 17361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17362 ;; Tracked objects:
 17363 ;;		On entry : 0/0
 17364 ;;		On exit  : 0/0
 17365 ;;		Unchanged: 0/0
 17366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17368 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17370 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17371 ;;Total ram usage:        7 bytes
 17372 ;; Hardware stack levels used: 1
 17373 ;; Hardware stack levels required when called: 5
 17374 ;; This function calls:
 17375 ;;		___eecpymem
 17376 ;; This function is called by:
 17377 ;;		_EEPROM_init
 17378 ;;		_Automatic_Mode
 17379 ;; This function uses a non-reentrant model
 17380 ;;
 17381                           
 17382                           
 17383                           ;psect for function ___eetoi
 17384  1FD8                     ___eetoi:
 17385                           
 17386                           ;incstack = 0
 17387                           ; Regs used in ___eetoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17388                           ;___eetoi@addr stored from wreg
 17389  1FD8  0020               	movlb	0	; select bank0
 17390  1FD9  00A4               	movwf	___eetoi@addr
 17391  1FDA                     l6913:
 17392                           
 17393                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 112: __eetoi(__eeprom void *ad
      +                          dr);/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 113: {;/opt/microchip/xc8/v
      +                          2.32/pic/sources/c99/pic/__eeprom.c: 114:  unsigned int data;;/opt/microchip/xc8/v2.32/p
      +                          ic/sources/c99/pic/__eeprom.c: 115:  __eecpymem((unsigned char *) &data,addr,2);
 17394  1FDA  0824               	movf	___eetoi@addr,w
 17395  1FDB  00A0               	movwf	??___eetoi
 17396  1FDC  0820               	movf	??___eetoi,w
 17397  1FDD  00F2               	movwf	___eecpymem@from
 17398  1FDE  3002               	movlw	2
 17399  1FDF  00A1               	movwf	??___eetoi+1
 17400  1FE0  0821               	movf	??___eetoi+1,w
 17401  1FE1  00F3               	movwf	___eecpymem@size
 17402  1FE2  3022               	movlw	(low (___eetoi@data| 0))& (0+255)
 17403  1FE3  3197  2734  319F   	fcall	___eecpymem
 17404  1FE6                     l6915:
 17405                           
 17406                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 116:  return data;
 17407  1FE6  0020               	movlb	0	; select bank0
 17408  1FE7  0823               	movf	___eetoi@data+1,w
 17409  1FE8  00F9               	movwf	?___eetoi+1
 17410  1FE9  0822               	movf	___eetoi@data,w
 17411  1FEA  00F8               	movwf	?___eetoi
 17412  1FEB                     l1366:
 17413  1FEB  0008               	return
 17414  1FEC                     __end_of___eetoi:
 17415                           
 17416                           	psect	text112
 17417  1734                     __ptext112:	
 17418 ;; *************** function ___eecpymem *****************
 17419 ;; Defined at:
 17420 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c"
 17421 ;; Parameters:    Size  Location     Type
 17422 ;;  to              1    wreg     PTR volatile unsigned ch
 17423 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 17424 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 17425 ;;  from            1    2[COMMON] PTR eeprom unsigned char
 17426 ;;		 -> ge_time_ms(2), ge_memory_mass(8), 
 17427 ;;  size            1    3[COMMON] unsigned char 
 17428 ;; Auto vars:     Size  Location     Type
 17429 ;;  to              1    7[COMMON] PTR volatile unsigned ch
 17430 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 17431 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 17432 ;;  cp              1    6[COMMON] PTR volatile unsigned ch
 17433 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 17434 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 17435 ;; Return value:  Size  Location     Type
 17436 ;;                  1    wreg      void 
 17437 ;; Registers used:
 17438 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17439 ;; Tracked objects:
 17440 ;;		On entry : 0/0
 17441 ;;		On exit  : 0/0
 17442 ;;		Unchanged: 0/0
 17443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17448 ;;Total ram usage:        6 bytes
 17449 ;; Hardware stack levels used: 1
 17450 ;; Hardware stack levels required when called: 4
 17451 ;; This function calls:
 17452 ;;		Nothing
 17453 ;; This function is called by:
 17454 ;;		___eetoi
 17455 ;; This function uses a non-reentrant model
 17456 ;;
 17457                           
 17458                           
 17459                           ;psect for function ___eecpymem
 17460  1734                     ___eecpymem:
 17461                           
 17462                           ;incstack = 0
 17463                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
 17464                           ;___eecpymem@to stored from wreg
 17465  1734  00F7               	movwf	___eecpymem@to
 17466  1735                     l6787:
 17467                           
 17468                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 6: __eecpymem(volatile unsigne
      +                          d char *to, __eeprom unsigned char * from, unsigned char size);/opt/microchip/xc8/v2.32/
      +                          pic/sources/c99/pic/__eeprom.c: 6: };/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eepr
      +                          om.c: 6: ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 6: ;/opt/microchip/xc
      +                          8/v2.32/pic/sources/c99/pic/__eeprom.c: 6: };/opt/microchip/xc8/v2.32/pic/sources/c99/pi
      +                          c/__eeprom.c: 7: {;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 7: 
 17469  1735  0877               	movf	___eecpymem@to,w
 17470  1736  00F4               	movwf	??___eecpymem
 17471  1737  0874               	movf	??___eecpymem,w
 17472  1738  00F6               	movwf	___eecpymem@cp
 17473  1739                     l1337:	
 17474                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 10:  while (EECON1bits.WR) con
      +                          tinue;;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 10:  __memcpyee(addr,(un
      +                          signed char *) &data,2);;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 10: {
 17475                           
 17476  1739  0023               	movlb	3	; select bank3
 17477  173A  1895               	btfsc	21,1	;volsfr
 17478  173B  2F3D               	goto	u5051
 17479  173C  2F3E               	goto	u5050
 17480  173D                     u5051:
 17481  173D  2F39               	goto	l1337
 17482  173E                     u5050:
 17483  173E                     l6789:
 17484                           
 17485                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 11:  EEADR = (unsigned char)fr
      +                          om;;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 11:  return data;;/opt/micr
      +                          ochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 11:  double data;
 17486  173E  0872               	movf	___eecpymem@from,w
 17487  173F  00F4               	movwf	??___eecpymem
 17488  1740  01F5               	clrf	??___eecpymem+1
 17489  1741  0874               	movf	??___eecpymem,w
 17490  1742  0091               	movwf	17	;volatile
 17491  1743  0875               	movf	??___eecpymem+1,w
 17492  1744  0092               	movwf	18	;volatile
 17493                           
 17494                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 12:  while(size--) {;/opt/micr
      +                          ochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 12: };/opt/microchip/xc8/v2.32/pic/sourc
      +                          es/c99/pic/__eeprom.c: 12:  __eecpymem((unsigned char *) &data,addr,4);
 17495  1745  2F5E               	goto	l6801
 17496  1746                     l1342:
 17497  1746  1895               	btfsc	21,1	;volsfr
 17498  1747  2F49               	goto	u5061
 17499  1748  2F4A               	goto	u5060
 17500  1749                     u5061:
 17501  1749  2F46               	goto	l1342
 17502  174A                     u5060:
 17503  174A                     l6791:
 17504                           
 17505                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 15:   EECON1 &= 0x7F;;/opt/mic
      +                          rochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 15: 
 17506  174A  307F               	movlw	127
 17507  174B  00F4               	movwf	??___eecpymem
 17508  174C  0874               	movf	??___eecpymem,w
 17509  174D  0595               	andwf	21,f	;volsfr
 17510  174E                     l6793:
 17511                           
 17512                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 17:   EECON1bits.RD = 1;;/opt/
      +                          microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 17: __fttoee(__eeprom void *addr, fl
      +                          oat data)
 17513  174E  1415               	bsf	21,0	;volsfr
 17514  174F                     l6795:
 17515                           
 17516                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 18:   *cp++ = EEDATA;;/opt/mic
      +                          rochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 18: {
 17517  174F  0813               	movf	19,w	;volatile
 17518  1750  00F4               	movwf	??___eecpymem
 17519  1751  0876               	movf	___eecpymem@cp,w
 17520  1752  0086               	movwf	6
 17521  1753  0187               	clrf	7
 17522  1754  0874               	movf	??___eecpymem,w
 17523  1755  0081               	movwf	1
 17524  1756                     l6797:
 17525  1756  3001               	movlw	1
 17526  1757  00F4               	movwf	??___eecpymem
 17527  1758  0874               	movf	??___eecpymem,w
 17528  1759  07F6               	addwf	___eecpymem@cp,f
 17529  175A                     l6799:
 17530                           
 17531                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 19:   ++EEADR;;/opt/microchip/
      +                          xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 19:  __memcpyee(addr,(unsigned char *) &data,3
      +                          );
 17532  175A  3001               	movlw	1
 17533  175B  0791               	addwf	17,f	;volatile
 17534  175C  3000               	movlw	0
 17535  175D  3D92               	addwfc	18,f	;volatile
 17536  175E                     l6801:
 17537                           
 17538                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 12:  while(size--) {;/opt/micr
      +                          ochip/xc8/v2.32/pic/sources/c99/pic/__eeprom.c: 12: };/opt/microchip/xc8/v2.32/pic/sourc
      +                          es/c99/pic/__eeprom.c: 12:  __eecpymem((unsigned char *) &data,addr,4);
 17539  175E  3001               	movlw	1
 17540  175F  02F3               	subwf	___eecpymem@size,f
 17541  1760  0A73               	incf	___eecpymem@size,w
 17542  1761  1D03               	btfss	3,2
 17543  1762  2F64               	goto	u5071
 17544  1763  2F65               	goto	u5070
 17545  1764                     u5071:
 17546  1764  2F46               	goto	l1342
 17547  1765                     u5070:
 17548  1765                     l1346:
 17549  1765  0008               	return
 17550  1766                     __end_of___eecpymem:
 17551                           
 17552                           	psect	intentry
 17553  0004                     __pintentry:	
 17554 ;; *************** function _INTERRUPT_InterruptManager *****************
 17555 ;; Defined at:
 17556 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17557 ;; Parameters:    Size  Location     Type
 17558 ;;		None
 17559 ;; Auto vars:     Size  Location     Type
 17560 ;;		None
 17561 ;; Return value:  Size  Location     Type
 17562 ;;                  1    wreg      void 
 17563 ;; Registers used:
 17564 ;;		wreg, status,2, status,0, pclath, cstack
 17565 ;; Tracked objects:
 17566 ;;		On entry : 0/0
 17567 ;;		On exit  : 0/0
 17568 ;;		Unchanged: 0/0
 17569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17574 ;;Total ram usage:        0 bytes
 17575 ;; Hardware stack levels used: 1
 17576 ;; Hardware stack levels required when called: 3
 17577 ;; This function calls:
 17578 ;;		_TMR0_ISR
 17579 ;;		_TMR1_ISR
 17580 ;; This function is called by:
 17581 ;;		Interrupt level 1
 17582 ;; This function uses a non-reentrant model
 17583 ;;
 17584                           
 17585  0004                     _INTERRUPT_InterruptManager:
 17586                           
 17587                           ;incstack = 0
 17588  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17589                           
 17590                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 17591  0005  3180               	pagesel	$
 17592  0006                     i1l5959:
 17593                           
 17594                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 17595  0006  1E8B               	btfss	11,5	;volatile
 17596  0007  2809               	goto	u441_21
 17597  0008  280A               	goto	u441_20
 17598  0009                     u441_21:
 17599  0009  2812               	goto	i1l659
 17600  000A                     u441_20:
 17601  000A                     i1l5961:
 17602  000A  1D0B               	btfss	11,2	;volatile
 17603  000B  280D               	goto	u442_21
 17604  000C  280E               	goto	u442_20
 17605  000D                     u442_21:
 17606  000D  2812               	goto	i1l659
 17607  000E                     u442_20:
 17608  000E                     i1l5963:
 17609                           
 17610                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17611  000E  319F  276D  3180   	fcall	_TMR0_ISR
 17612                           
 17613                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17614  0011  2824               	goto	i1l665
 17615  0012                     i1l659:	
 17616                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17617                           
 17618  0012  1F0B               	btfss	11,6	;volatile
 17619  0013  2815               	goto	u443_21
 17620  0014  2816               	goto	u443_20
 17621  0015                     u443_21:
 17622  0015  2824               	goto	i1l665
 17623  0016                     u443_20:
 17624  0016                     i1l5965:
 17625                           
 17626                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 17627  0016  0021               	movlb	1	; select bank1
 17628  0017  1C11               	btfss	17,0	;volatile
 17629  0018  281A               	goto	u444_21
 17630  0019  281B               	goto	u444_20
 17631  001A                     u444_21:
 17632  001A  2824               	goto	i1l664
 17633  001B                     u444_20:
 17634  001B                     i1l5967:
 17635  001B  0020               	movlb	0	; select bank0
 17636  001C  1C11               	btfss	17,0	;volatile
 17637  001D  281F               	goto	u445_21
 17638  001E  2820               	goto	u445_20
 17639  001F                     u445_21:
 17640  001F  2824               	goto	i1l664
 17641  0020                     u445_20:
 17642  0020                     i1l5969:
 17643                           
 17644                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
 17645  0020  3190  20D8  3180   	fcall	_TMR1_ISR
 17646                           
 17647                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17648  0023  2824               	goto	i1l665
 17649  0024                     i1l664:	
 17650                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
 17651                           
 17652  0024                     i1l665:
 17653  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17654  0025  0009               	retfie
 17655  0026                     __end_of_INTERRUPT_InterruptManager:
 17656                           
 17657                           	psect	text114
 17658  10D8                     __ptext114:	
 17659 ;; *************** function _TMR1_ISR *****************
 17660 ;; Defined at:
 17661 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 17662 ;; Parameters:    Size  Location     Type
 17663 ;;		None
 17664 ;; Auto vars:     Size  Location     Type
 17665 ;;		None
 17666 ;; Return value:  Size  Location     Type
 17667 ;;                  1    wreg      void 
 17668 ;; Registers used:
 17669 ;;		wreg, status,2, status,0, pclath, cstack
 17670 ;; Tracked objects:
 17671 ;;		On entry : 0/0
 17672 ;;		On exit  : 0/0
 17673 ;;		Unchanged: 0/0
 17674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17679 ;;Total ram usage:        0 bytes
 17680 ;; Hardware stack levels used: 1
 17681 ;; Hardware stack levels required when called: 2
 17682 ;; This function calls:
 17683 ;;		Absolute function
 17684 ;;		_TMR1_DefaultInterruptHandler
 17685 ;;		_TMR1_WriteTimer
 17686 ;;		_tmr1_motor_on_duration
 17687 ;; This function is called by:
 17688 ;;		_INTERRUPT_InterruptManager
 17689 ;; This function uses a non-reentrant model
 17690 ;;
 17691                           
 17692                           
 17693                           ;psect for function _TMR1_ISR
 17694  10D8                     _TMR1_ISR:
 17695  10D8                     i1l5837:	
 17696                           ;incstack = 0
 17697                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17698                           
 17699                           
 17700                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 17701  10D8  0020               	movlb	0	; select bank0
 17702  10D9  1011               	bcf	17,0	;volatile
 17703  10DA                     i1l5839:
 17704                           
 17705                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 17706  10DA  0021               	movlb	1	; select bank1
 17707  10DB  084A               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 17708  10DC  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17709  10DD  0849               	movf	_timer1ReloadVal^(0+128),w	;volatile
 17710  10DE  00F0               	movwf	TMR1_WriteTimer@timerVal
 17711  10DF  319F  277E  3190   	fcall	_TMR1_WriteTimer
 17712  10E2                     i1l5841:
 17713                           
 17714                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 17715  10E2  0021               	movlb	1	; select bank1
 17716  10E3  0847               	movf	_TMR1_InterruptHandler^(0+128),w
 17717  10E4  0448               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 17718  10E5  1903               	btfsc	3,2
 17719  10E6  28E8               	goto	u426_21
 17720  10E7  28E9               	goto	u426_20
 17721  10E8                     u426_21:
 17722  10E8  28EE               	goto	i1l843
 17723  10E9                     u426_20:
 17724  10E9                     i1l5843:
 17725                           
 17726                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 17727  10E9  0848               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 17728  10EA  008A               	movwf	10
 17729  10EB  0847               	movf	_TMR1_InterruptHandler^(0+128),w
 17730  10EC  000A               	callw
 17731  10ED  3190               	pagesel	$
 17732  10EE                     i1l843:
 17733  10EE  0008               	return
 17734  10EF                     __end_of_TMR1_ISR:
 17735                           
 17736                           	psect	text115
 17737  1E57                     __ptext115:	
 17738 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17739 ;; Defined at:
 17740 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 17741 ;; Parameters:    Size  Location     Type
 17742 ;;		None
 17743 ;; Auto vars:     Size  Location     Type
 17744 ;;		None
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  1    wreg      void 
 17747 ;; Registers used:
 17748 ;;		None
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/0
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17758 ;;Total ram usage:        0 bytes
 17759 ;; Hardware stack levels used: 1
 17760 ;; This function calls:
 17761 ;;		Nothing
 17762 ;; This function is called by:
 17763 ;;		_TMR1_Initialize
 17764 ;;		_TMR1_ISR
 17765 ;; This function uses a non-reentrant model
 17766 ;;
 17767                           
 17768                           
 17769                           ;psect for function _TMR1_DefaultInterruptHandler
 17770  1E57                     _TMR1_DefaultInterruptHandler:
 17771  1E57                     i1l849:	
 17772                           ;incstack = 0
 17773                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 17774                           
 17775  1E57  0008               	return
 17776  1E58                     __end_of_TMR1_DefaultInterruptHandler:
 17777                           
 17778                           	psect	text116
 17779  11F3                     __ptext116:	
 17780 ;; *************** function _tmr1_motor_on_duration *****************
 17781 ;; Defined at:
 17782 ;;		line 503 in file "main.c"
 17783 ;; Parameters:    Size  Location     Type
 17784 ;;		None
 17785 ;; Auto vars:     Size  Location     Type
 17786 ;;		None
 17787 ;; Return value:  Size  Location     Type
 17788 ;;                  1    wreg      void 
 17789 ;; Registers used:
 17790 ;;		wreg, status,2, status,0, pclath, cstack
 17791 ;; Tracked objects:
 17792 ;;		On entry : 0/0
 17793 ;;		On exit  : 0/0
 17794 ;;		Unchanged: 0/0
 17795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17800 ;;Total ram usage:        0 bytes
 17801 ;; Hardware stack levels used: 1
 17802 ;; Hardware stack levels required when called: 1
 17803 ;; This function calls:
 17804 ;;		i1_TMR1_StopTimer
 17805 ;; This function is called by:
 17806 ;;		_main
 17807 ;;		_TMR1_ISR
 17808 ;; This function uses a non-reentrant model
 17809 ;;
 17810                           
 17811                           
 17812                           ;psect for function _tmr1_motor_on_duration
 17813  11F3                     _tmr1_motor_on_duration:
 17814  11F3                     i1l5419:	
 17815                           ;incstack = 0
 17816                           ; Regs used in _tmr1_motor_on_duration: [wreg+status,2+status,0+pclath+cstack]
 17817                           
 17818                           
 17819                           ;main.c: 505:     g_tmr1_motor_counter++;
 17820  11F3  3001               	movlw	1
 17821  11F4  0021               	movlb	1	; select bank1
 17822  11F5  07A8               	addwf	_g_tmr1_motor_counter^(0+128),f
 17823  11F6  3000               	movlw	0
 17824  11F7  3DA9               	addwfc	(_g_tmr1_motor_counter+1)^(0+128),f
 17825                           
 17826                           ;main.c: 507:     if (g_motor_on_duration_ms == g_tmr1_motor_counter) {
 17827  11F8  0829               	movf	(_g_tmr1_motor_counter+1)^(0+128),w
 17828  11F9  0631               	xorwf	(_g_motor_on_duration_ms+1)^(0+128),w
 17829  11FA  1D03               	skipz
 17830  11FB  29FE               	goto	u377_25
 17831  11FC  0828               	movf	_g_tmr1_motor_counter^(0+128),w
 17832  11FD  0630               	xorwf	_g_motor_on_duration_ms^(0+128),w
 17833  11FE                     u377_25:
 17834  11FE  1D03               	skipz
 17835  11FF  2A01               	goto	u377_21
 17836  1200  2A02               	goto	u377_20
 17837  1201                     u377_21:
 17838  1201  2A10               	goto	i1l1111
 17839  1202                     u377_20:
 17840  1202                     i1l1109:	
 17841                           ;main.c: 509:         do { LATAbits.LATA5 = 0; } while(0);
 17842                           
 17843  1202  0022               	movlb	2	; select bank2
 17844  1203  128C               	bcf	12,5	;volatile
 17845  1204                     i1l1110:
 17846                           
 17847                           ;main.c: 510:         g_sss_status = start_e;
 17848  1204  0020               	movlb	0	; select bank0
 17849  1205  01E1               	clrf	_g_sss_status
 17850  1206  0AE1               	incf	_g_sss_status,f
 17851  1207                     i1l5421:
 17852                           
 17853                           ;main.c: 511:         TMR1_StopTimer();
 17854  1207  319E  265F  3191   	fcall	i1_TMR1_StopTimer
 17855  120A                     i1l5423:
 17856                           
 17857                           ;main.c: 512:         g_tmr1_motor_counter = 0;
 17858  120A  0021               	movlb	1	; select bank1
 17859  120B  01A8               	clrf	_g_tmr1_motor_counter^(0+128)
 17860  120C  01A9               	clrf	(_g_tmr1_motor_counter+1)^(0+128)
 17861  120D                     i1l5425:
 17862                           
 17863                           ;main.c: 513:         gb_motor_timer_off = 1;
 17864  120D  0020               	movlb	0	; select bank0
 17865  120E  01DD               	clrf	_gb_motor_timer_off
 17866  120F  0ADD               	incf	_gb_motor_timer_off,f
 17867  1210                     i1l1111:
 17868  1210  0008               	return
 17869  1211                     __end_of_tmr1_motor_on_duration:
 17870                           
 17871                           	psect	text117
 17872  1E5F                     __ptext117:	
 17873 ;; *************** function i1_TMR1_StopTimer *****************
 17874 ;; Defined at:
 17875 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 17876 ;; Parameters:    Size  Location     Type
 17877 ;;		None
 17878 ;; Auto vars:     Size  Location     Type
 17879 ;;		None
 17880 ;; Return value:  Size  Location     Type
 17881 ;;                  1    wreg      void 
 17882 ;; Registers used:
 17883 ;;		None
 17884 ;; Tracked objects:
 17885 ;;		On entry : 0/0
 17886 ;;		On exit  : 0/0
 17887 ;;		Unchanged: 0/0
 17888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17893 ;;Total ram usage:        0 bytes
 17894 ;; Hardware stack levels used: 1
 17895 ;; This function calls:
 17896 ;;		Nothing
 17897 ;; This function is called by:
 17898 ;;		_tmr1_motor_on_duration
 17899 ;; This function uses a non-reentrant model
 17900 ;;
 17901                           
 17902                           
 17903                           ;psect for function i1_TMR1_StopTimer
 17904  1E5F                     i1_TMR1_StopTimer:
 17905  1E5F                     i1l5359:	
 17906                           ;incstack = 0
 17907                           ; Regs used in i1_TMR1_StopTimer: []
 17908                           
 17909                           
 17910                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
 17911  1E5F  0020               	movlb	0	; select bank0
 17912  1E60  1018               	bcf	24,0	;volatile
 17913  1E61                     i1l822:
 17914  1E61  0008               	return
 17915  1E62                     __end_ofi1_TMR1_StopTimer:
 17916                           
 17917                           	psect	text118
 17918  1F7E                     __ptext118:	
 17919 ;; *************** function _TMR1_WriteTimer *****************
 17920 ;; Defined at:
 17921 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 17922 ;; Parameters:    Size  Location     Type
 17923 ;;  timerVal        2    0[COMMON] unsigned short 
 17924 ;; Auto vars:     Size  Location     Type
 17925 ;;		None
 17926 ;; Return value:  Size  Location     Type
 17927 ;;                  1    wreg      void 
 17928 ;; Registers used:
 17929 ;;		wreg, status,2
 17930 ;; Tracked objects:
 17931 ;;		On entry : 0/0
 17932 ;;		On exit  : 0/0
 17933 ;;		Unchanged: 0/0
 17934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17939 ;;Total ram usage:        2 bytes
 17940 ;; Hardware stack levels used: 1
 17941 ;; This function calls:
 17942 ;;		Nothing
 17943 ;; This function is called by:
 17944 ;;		_TMR1_ISR
 17945 ;;		_TMR1_Reload
 17946 ;; This function uses a non-reentrant model
 17947 ;;
 17948                           
 17949                           
 17950                           ;psect for function _TMR1_WriteTimer
 17951  1F7E                     _TMR1_WriteTimer:
 17952  1F7E                     i1l5399:	
 17953                           ;incstack = 0
 17954                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17955                           
 17956                           
 17957                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 17958  1F7E  0020               	movlb	0	; select bank0
 17959  1F7F  1D18               	btfss	24,2	;volatile
 17960  1F80  2F82               	goto	u376_21
 17961  1F81  2F83               	goto	u376_20
 17962  1F82                     u376_21:
 17963  1F82  2F8A               	goto	i1l5409
 17964  1F83                     u376_20:
 17965  1F83                     i1l5401:
 17966                           
 17967                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 17968  1F83  1018               	bcf	24,0	;volatile
 17969  1F84                     i1l5403:
 17970                           
 17971                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 17972  1F84  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17973  1F85  0097               	movwf	23	;volatile
 17974  1F86                     i1l5405:
 17975                           
 17976                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 17977  1F86  0870               	movf	TMR1_WriteTimer@timerVal,w
 17978  1F87  0096               	movwf	22	;volatile
 17979  1F88                     i1l5407:
 17980                           
 17981                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 17982  1F88  1418               	bsf	24,0	;volatile
 17983                           
 17984                           ;mcc_generated_files/tmr1.c: 133:     }
 17985  1F89  2F8E               	goto	i1l830
 17986  1F8A                     i1l5409:
 17987                           
 17988                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 17989  1F8A  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17990  1F8B  0097               	movwf	23	;volatile
 17991  1F8C                     i1l5411:
 17992                           
 17993                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 17994  1F8C  0870               	movf	TMR1_WriteTimer@timerVal,w
 17995  1F8D  0096               	movwf	22	;volatile
 17996  1F8E                     i1l830:
 17997  1F8E  0008               	return
 17998  1F8F                     __end_of_TMR1_WriteTimer:
 17999                           
 18000                           	psect	text119
 18001  1F6D                     __ptext119:	
 18002 ;; *************** function _TMR0_ISR *****************
 18003 ;; Defined at:
 18004 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 18005 ;; Parameters:    Size  Location     Type
 18006 ;;		None
 18007 ;; Auto vars:     Size  Location     Type
 18008 ;;		None
 18009 ;; Return value:  Size  Location     Type
 18010 ;;                  1    wreg      void 
 18011 ;; Registers used:
 18012 ;;		wreg, status,2, status,0, pclath, cstack
 18013 ;; Tracked objects:
 18014 ;;		On entry : 0/0
 18015 ;;		On exit  : 0/0
 18016 ;;		Unchanged: 0/0
 18017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18022 ;;Total ram usage:        0 bytes
 18023 ;; Hardware stack levels used: 1
 18024 ;; Hardware stack levels required when called: 1
 18025 ;; This function calls:
 18026 ;;		Absolute function
 18027 ;;		_TMR0_DefaultInterruptHandler
 18028 ;;		_tmr0_long_press_duration
 18029 ;; This function is called by:
 18030 ;;		_INTERRUPT_InterruptManager
 18031 ;; This function uses a non-reentrant model
 18032 ;;
 18033                           
 18034                           
 18035                           ;psect for function _TMR0_ISR
 18036  1F6D                     _TMR0_ISR:
 18037  1F6D                     i1l5829:	
 18038                           ;incstack = 0
 18039                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 18040                           
 18041                           
 18042                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 18043  1F6D  110B               	bcf	11,2	;volatile
 18044  1F6E                     i1l5831:
 18045                           
 18046                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 18047  1F6E  0020               	movlb	0	; select bank0
 18048  1F6F  0862               	movf	_timer0ReloadVal,w	;volatile
 18049  1F70  0095               	movwf	21	;volatile
 18050  1F71                     i1l5833:
 18051                           
 18052                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
 18053  1F71  0021               	movlb	1	; select bank1
 18054  1F72  084B               	movf	_TMR0_InterruptHandler^(0+128),w
 18055  1F73  044C               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 18056  1F74  1903               	btfsc	3,2
 18057  1F75  2F77               	goto	u425_21
 18058  1F76  2F78               	goto	u425_20
 18059  1F77                     u425_21:
 18060  1F77  2F7D               	goto	i1l783
 18061  1F78                     u425_20:
 18062  1F78                     i1l5835:
 18063                           
 18064                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
 18065  1F78  084C               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 18066  1F79  008A               	movwf	10
 18067  1F7A  084B               	movf	_TMR0_InterruptHandler^(0+128),w
 18068  1F7B  000A               	callw
 18069  1F7C  319F               	pagesel	$
 18070  1F7D                     i1l783:
 18071  1F7D  0008               	return
 18072  1F7E                     __end_of_TMR0_ISR:
 18073                           
 18074                           	psect	text120
 18075  1E56                     __ptext120:	
 18076 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18077 ;; Defined at:
 18078 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 18079 ;; Parameters:    Size  Location     Type
 18080 ;;		None
 18081 ;; Auto vars:     Size  Location     Type
 18082 ;;		None
 18083 ;; Return value:  Size  Location     Type
 18084 ;;                  1    wreg      void 
 18085 ;; Registers used:
 18086 ;;		None
 18087 ;; Tracked objects:
 18088 ;;		On entry : 0/0
 18089 ;;		On exit  : 0/0
 18090 ;;		Unchanged: 0/0
 18091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18096 ;;Total ram usage:        0 bytes
 18097 ;; Hardware stack levels used: 1
 18098 ;; This function calls:
 18099 ;;		Nothing
 18100 ;; This function is called by:
 18101 ;;		_TMR0_Initialize
 18102 ;;		_TMR0_ISR
 18103 ;; This function uses a non-reentrant model
 18104 ;;
 18105                           
 18106                           
 18107                           ;psect for function _TMR0_DefaultInterruptHandler
 18108  1E56                     _TMR0_DefaultInterruptHandler:
 18109  1E56                     i1l789:	
 18110                           ;incstack = 0
 18111                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18112                           
 18113  1E56  0008               	return
 18114  1E57                     __end_of_TMR0_DefaultInterruptHandler:
 18115                           
 18116                           	psect	text121
 18117  1E75                     __ptext121:	
 18118 ;; *************** function _tmr0_long_press_duration *****************
 18119 ;; Defined at:
 18120 ;;		line 498 in file "main.c"
 18121 ;; Parameters:    Size  Location     Type
 18122 ;;		None
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;		None
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  1    wreg      void 
 18127 ;; Registers used:
 18128 ;;		wreg
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/0
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;Total ram usage:        0 bytes
 18139 ;; Hardware stack levels used: 1
 18140 ;; This function calls:
 18141 ;;		Nothing
 18142 ;; This function is called by:
 18143 ;;		_main
 18144 ;;		_TMR0_ISR
 18145 ;; This function uses a non-reentrant model
 18146 ;;
 18147                           
 18148                           
 18149                           ;psect for function _tmr0_long_press_duration
 18150  1E75                     _tmr0_long_press_duration:
 18151  1E75                     i1l5417:	
 18152                           ;incstack = 0
 18153                           ; Regs used in _tmr0_long_press_duration: [wreg]
 18154                           
 18155                           
 18156                           ;main.c: 500:     g_tmr0_longpress_duration_counter++;
 18157  1E75  3001               	movlw	1
 18158  1E76  0020               	movlb	0	; select bank0
 18159  1E77  07DB               	addwf	_g_tmr0_longpress_duration_counter,f
 18160  1E78  3000               	movlw	0
 18161  1E79  3DDC               	addwfc	_g_tmr0_longpress_duration_counter+1,f
 18162  1E7A                     i1l1105:
 18163  1E7A  0008               	return
 18164  1E7B                     __end_of_tmr0_long_press_duration:
 18165  007E                     btemp	set	126	;btemp
 18166  007E                     int$flags	set	126
 18167  007E                     wtemp0	set	126
 18168  230F                     
 18169                           	psect	config
 18170                           
 18171                           ;Config register CONFIG1 @ 0x8007
 18172                           ;	Oscillator Selection
 18173                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 18174                           ;	Watchdog Timer Enable
 18175                           ;	WDTE = OFF, WDT disabled
 18176                           ;	Power-up Timer Enable
 18177                           ;	PWRTE = OFF, PWRT disabled
 18178                           ;	MCLR Pin Function Select
 18179                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 18180                           ;	Flash Program Memory Code Protection
 18181                           ;	CP = OFF, Program memory code protection is disabled
 18182                           ;	Data Memory Code Protection
 18183                           ;	CPD = OFF, Data memory code protection is disabled
 18184                           ;	Brown-out Reset Enable
 18185                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
 18186                           ;	Clock Out Enable
 18187                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 18188                           ;	Internal/External Switchover
 18189                           ;	IESO = ON, Internal/External Switchover mode is enabled
 18190                           ;	Fail-Safe Clock Monitor Enable
 18191                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 18192  8007                     	org	32775
 18193  8007  3DE4               	dw	15844
 18194                           
 18195                           ;Config register CONFIG2 @ 0x8008
 18196                           ;	Flash Memory Self-Write Protection
 18197                           ;	WRT = OFF, Write protection off
 18198                           ;	PLL Enable
 18199                           ;	PLLEN = OFF, 4x PLL disabled
 18200                           ;	Stack Overflow/Underflow Reset Enable
 18201                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 18202                           ;	Brown-out Reset Voltage Selection
 18203                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 18204                           ;	Low-Voltage Programming Enable
 18205                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 18206  8008                     	org	32776
 18207  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    144
    Data        99
    BSS         58
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     51      76
    BANK1            80      5      56
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            63      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    Button_Service$2709$0	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_Service$2709	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    memcpy@d1	PTR void  size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    memcpy@s1	PTR const void  size(2) Largest target is 144
		 -> mtouch_button_init(CODE[144]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 144
		 -> mtouch_button_init(CODE[144]), 

    __itoee@addr	PTR eeprom void  size(1) Largest target is 8
		 -> ge_time_ms(EEDATA[2]), ge_memory_mass(EEDATA[8]), 

    __eetoi@addr	PTR eeprom void  size(1) Largest target is 8
		 -> ge_time_ms(EEDATA[2]), ge_memory_mass(EEDATA[8]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 8
		 -> ge_time_ms(EEDATA[2]), ge_memory_mass(EEDATA[8]), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(COMMON[1]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(COMMON[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 8
		 -> ge_time_ms(EEDATA[2]), ge_memory_mass(EEDATA[8]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_motor_on_duration(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_motor_on_duration(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_long_press_duration(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_long_press_duration(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    Button_Baseline_Update@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_Baseline_Initialize@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_Reading_Update_Helper@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_Reading_Update@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_Deviation_Update@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_Tick_helper@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_State_Pressed@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_State_NotPressed@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_State_Initializing@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_Service@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    sp__memcpy	PTR void  size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(2) Largest target is 144
		 -> mtouch_button(BIGRAM[144]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2826,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2826,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    Sensor_Service@sensor	PTR struct . size(2) Largest target is 81
		 -> mtouch_sensor(BIGRAM[81]), 

    S75$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    S75$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), 
		 -> MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), 
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), 
		 -> MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), 
		 -> MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2599,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _init_panel->_Toggle_7seg
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Automatic_Mode->_SET_SOUND_MODE
    _Automatic_Mode->___eetoi
    _Automatic_Mode->___itoee
    _Automatic_Mode->___lwdiv
    _set_digit_counters->___lwdiv
    _Timer_Mode->_SET_SOUND_MODE
    _Timer_Mode->___itoee
    _Timer_Mode->___lwdiv
    ___itoee->___memcpyee
    _FCN_UP->_TX_Command
    _FCN_NEXT->_TX_Command
    _Motor_ON->___ltdiv
    _Manual_Mode->_SET_SOUND_MODE
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___wmul
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_Initialize->_Sensor_Sampled_Reset
    _Sensor_Sampled_Reset->___wmul
    _MTOUCH_Sensor_Enable->___wmul
    _MTOUCH_Button_InitializeAll->_MTOUCH_Button_Initialize
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Sensor_wasSampled->___wmul
    _Button_State_NotPressed->_Button_Baseline_Update
    _Button_State_Initializing->_Button_Baseline_Update
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___wmul
    _FCN_POWER->_SET_SOUND_MODE
    _Toggle_7seg->_TX_Command
    _TX_Command->_EUSART_Write
    _TX_Command->_EUSART_is_tx_ready
    _SET_SOUND_MODE->_GENERATE_PULSE
    _EEPROM_init->___eetoi
    ___eetoi->___eecpymem

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _Main_Routine->_Automatic_Mode
    _Automatic_Mode->_Timer_Mode
    _Timer_Mode->_MTOUCH_Service_Mainloop
    _Motor_ON->___ltdiv
    _Manual_Mode->_MTOUCH_Service_Mainloop
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _FCN_POWER->_EEPROM_init
    _EEPROM_init->___eetoi

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _Main_Routine->_Automatic_Mode

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  179028
                        _EEPROM_init
                       _Main_Routine
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                         _init_panel
 ---------------------------------------------------------------------------------
 (1) _init_panel                                           1     1      0      99
                                              5 COMMON     1     1      0
                  _Reset_Digit_Value
                        _Toggle_7seg
                      _Toggle_OFFLED
                  _Toggle_Touch_LEDs
 ---------------------------------------------------------------------------------
 (2) _Reset_Digit_Value                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    8244
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Main_Routine                                         0     0      0  168526
                     _Automatic_Mode
                          _FCN_POWER
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
 ---------------------------------------------------------------------------------
 (2) _Automatic_Mode                                      18    18      0  132709
                                             41 BANK0     10    10      0
                                              0 BANK1      5     5      0
                           _FCN_NEXT
                          _FCN_POWER
                             _FCN_UP
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                        _Manual_Mode
                           _Motor_ON
                     _SET_SOUND_MODE
                     _TMR1_StopTimer
                         _TX_Command
                         _Timer_Mode
                            ___eetoi
                            ___itoee
                            ___lwdiv
                            ___lwmod
                             ___tmul
                             ___wmul
                 _set_digit_counters
 ---------------------------------------------------------------------------------
 (3) _set_digit_counters                                   7     3      4    4437
                                              0 BANK0      7     3      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6     316
                                              2 COMMON     6     0      6
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Timer_Mode                                          14    14      0   43187
                                             27 BANK0     14    14      0
                           _FCN_NEXT
                             _FCN_UP
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                     _SET_SOUND_MODE
                         _TX_Command
                            ___itoee
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4    1672
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4    1791
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___itoee                                              5     3      2    2335
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                         ___memcpyee
 ---------------------------------------------------------------------------------
 (4) ___memcpyee                                           6     4      2    1402
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _FCN_UP                                               2     2      0      99
                                              4 COMMON     2     2      0
                         _TX_Command
 ---------------------------------------------------------------------------------
 (4) _FCN_NEXT                                             2     2      0      99
                                              4 COMMON     2     2      0
                         _TX_Command
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Motor_ON                                             3     0      3     542
                                              4 BANK0      3     0      3
                    _TMR1_StartTimer
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (4) ___ltdiv                                             11     5      6     421
                                              2 COMMON     7     1      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Manual_Mode                                          6     6      0   34228
                                             27 BANK0      6     6      0
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                         _RX_Command
                     _SET_SOUND_MODE
                         _TX_Command
 ---------------------------------------------------------------------------------
 (4) _RX_Command                                           2     2      0      34
                                              2 COMMON     2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (5) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Service_Mainloop                              1     1      0   30624
                                             26 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_needReburst                                   1     1      0      34
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Tick                                          0     0      0     313
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Tick                                   5     5      0     313
                                              6 COMMON     4     4      0
                                              0 BANK0      1     1      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (5) _Button_Tick_helper                                   4     2      2     214
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_SampleAll                              2     2      0    8615
                                             23 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (4) _Sensor_Service                                       8     8      0    8516
                                             15 BANK0      8     8      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Sensor_setSampled                                    2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_RawSample_Update                              2     0      2     152
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_DefaultCallback                               1     0      1      65
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _Sensor_Acquisition                                   4     2      2    4636
                                             11 BANK0      4     2      2
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_setInactive                                   2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_setActive                                     2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_isEnabled                                     2     0      2     242
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecutePacket                             7     5      2    3687
                                              4 BANK0      7     5      2
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (7) _Sensor_setScanFunction                               2     0      2     152
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _Sensor_Acq_ExecuteScan                               6     6      0    3145
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanA_2 *
                 _MTOUCH_CVD_ScanA_3 *
                 _MTOUCH_CVD_ScanA_4 *
                 _MTOUCH_CVD_ScanA_5 *
                 _MTOUCH_CVD_ScanA_6 *
                 _MTOUCH_CVD_ScanA_7 *
                 _MTOUCH_CVD_ScanA_8 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                 _MTOUCH_CVD_ScanB_2 *
                 _MTOUCH_CVD_ScanB_3 *
                 _MTOUCH_CVD_ScanB_4 *
                 _MTOUCH_CVD_ScanB_5 *
                 _MTOUCH_CVD_ScanB_6 *
                 _MTOUCH_CVD_ScanB_7 *
                 _MTOUCH_CVD_ScanB_8 *
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Random                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Delay                                         2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0    7602
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       4     4      0     310
                                              0 BANK0      4     4      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0    6526
                                              9 BANK0      2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             5     5      0    6427
                                              4 BANK0      5     5      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 2     0      2     211
                                              8 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 5     5      0    3108
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0     766
                                              9 COMMON     1     1      0
                                              5 BANK0      1     1      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              12     6      6     478
                                              2 COMMON     7     1      6
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_ServiceAll                             2     2      0   13750
                                             24 BANK0      2     2      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (4) _Button_Service                                       7     7      0   13651
                                             17 BANK0      7     7      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_wasSampled                             5     5      0    3108
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_State_Pressed                                 4     2      2     759
                                             11 BANK0      4     2      2
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (5) _Button_State_NotPressed                              4     2      2    1308
                                             11 BANK0      4     2      2
             _Button_Baseline_Update
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             7     7      0     189
                                              2 COMMON     7     7      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _Button_DefaultCallback                               1     0      1     195
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _Button_State_Initializing                            6     4      2    3998
                                             11 BANK0      6     4      2
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (6) _Button_Baseline_Update                               8     6      2     428
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _Button_Baseline_Initialize                           6     4      2    3291
                                              5 BANK0      6     4      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update                                2     0      2    3657
                                              9 BANK0      2     0      2
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (6) _Button_Reading_Update_Helper                         4     2      2    3505
                                              5 BANK0      4     2      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_RawSample_Get                          7     5      2    3108
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3046
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _Button_Deviation_Update                             16    14      2     350
                                              2 COMMON     6     4      2
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_isPressed                              5     5      0      62
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _FCN_POWER                                            0     0      0    5131
                        _EEPROM_init
                     _SET_SOUND_MODE
                        _Toggle_7seg
                      _Toggle_OFFLED
                  _Toggle_PushButton
                  _Toggle_Touch_LEDs
                     _Toggle_Touches
 ---------------------------------------------------------------------------------
 (3) _Toggle_Touches                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Toggle_Touch_LEDs                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Toggle_PushButton                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Toggle_OFFLED                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Toggle_7seg                                          1     1      0      99
                                              4 COMMON     1     1      0
                         _TX_Command
 ---------------------------------------------------------------------------------
 (3) _TX_Command                                           1     1      0      99
                                              3 COMMON     1     1      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (4) _EUSART_is_tx_ready                                   1     1      0      37
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SET_SOUND_MODE                                       3     3      0    3221
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
                     _GENERATE_PULSE
 ---------------------------------------------------------------------------------
 (4) _GENERATE_PULSE                                       6     2      4    3190
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _EEPROM_init                                          2     2      0    1811
                                              5 BANK0      2     2      0
                            ___eetoi
 ---------------------------------------------------------------------------------
 (4) ___eetoi                                              7     5      2    1681
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (5) ___eecpymem                                           6     4      2    1402
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     240
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
             _tmr1_motor_on_duration *
 ---------------------------------------------------------------------------------
 (13) _tmr1_motor_on_duration                              0     0      0       0
                   i1_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (14) i1_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
           _tmr0_long_press_duration *
 ---------------------------------------------------------------------------------
 (13) _tmr0_long_press_duration                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_init
     ___eetoi
       ___eecpymem
   _Main_Routine
     _Automatic_Mode
       _FCN_NEXT
         _TX_Command
           _EUSART_Write
           _EUSART_is_tx_ready
       _FCN_POWER
         _EEPROM_init
         _SET_SOUND_MODE
           _GENERATE_PULSE
         _Toggle_7seg
           _TX_Command
         _Toggle_OFFLED
         _Toggle_PushButton
         _Toggle_Touch_LEDs
         _Toggle_Touches
       _FCN_UP
         _TX_Command
       _MTOUCH_Button_isPressed
       _MTOUCH_Service_Mainloop
         _MTOUCH_Button_ServiceAll
           _Button_Service
             _Button_Deviation_Update
             _Button_Reading_Update
               _Button_Reading_Update_Helper
                 _MTOUCH_Sensor_RawSample_Get
                   ___wmul
             _Button_State_Initializing *
               _Button_Baseline_Initialize
                 _MTOUCH_Sensor_RawSample_Get
               _Button_Baseline_Update
             _Button_State_NotPressed *
               _Button_Baseline_Update
               _Button_DefaultCallback
               _MTOUCH_Button_Initialize
                 _MTOUCH_Sensor_Calibrate
             _Button_State_Pressed *
               _Button_DefaultCallback
               _MTOUCH_Button_Initialize
             _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_isCalibrated *
             _MTOUCH_Sensor_wasSampled *
               ___wmul
         _MTOUCH_Initialize
           _MTOUCH_Button_InitializeAll
             _MTOUCH_Button_Initialize
             _memcpy
           _MTOUCH_Sensor_InitializeAll
             _MTOUCH_Sensor_Initialize
               _MTOUCH_Sensor_Enable
                 ___wmul
               _Sensor_Sampled_Reset
                 ___wmul (ARG)
               ___wmul
           _MTOUCH_Sensor_Sampled_ResetAll
             _Sensor_Sampled_Reset
           _MTOUCH_Sensor_Scan_Initialize
         _MTOUCH_Sensor_SampleAll
           _Sensor_Service
             _Sensor_Acquisition
               _Sensor_Acq_ExecutePacket
                 _MTOUCH_Delay
                 _MTOUCH_Random
                 _MTOUCH_Sensor_Scan_Initialize
                 _Sensor_Acq_ExecuteScan
                   _MTOUCH_CVD_ScanA_0 *
                   _MTOUCH_CVD_ScanA_1 *
                   _MTOUCH_CVD_ScanA_2 *
                   _MTOUCH_CVD_ScanA_3 *
                   _MTOUCH_CVD_ScanA_4 *
                   _MTOUCH_CVD_ScanA_5 *
                   _MTOUCH_CVD_ScanA_6 *
                   _MTOUCH_CVD_ScanA_7 *
                   _MTOUCH_CVD_ScanA_8 *
                   _MTOUCH_CVD_ScanB_0 *
                   _MTOUCH_CVD_ScanB_1 *
                   _MTOUCH_CVD_ScanB_2 *
                   _MTOUCH_CVD_ScanB_3 *
                   _MTOUCH_CVD_ScanB_4 *
                   _MTOUCH_CVD_ScanB_5 *
                   _MTOUCH_CVD_ScanB_6 *
                   _MTOUCH_CVD_ScanB_7 *
                   _MTOUCH_CVD_ScanB_8 *
                   ___wmul *
                 _Sensor_setScanFunction
               _Sensor_isEnabled
               _Sensor_setActive
               _Sensor_setInactive
               _abs
             _Sensor_DefaultCallback
             _Sensor_RawSample_Update
             _Sensor_isEnabled
             _Sensor_setSampled
             ___wmul
         _MTOUCH_Sensor_Sampled_ResetAll
         _MTOUCH_Tick
           _MTOUCH_Button_Tick
             _Button_Tick_helper
         _MTOUCH_needReburst
       _Manual_Mode
         _MTOUCH_Button_isPressed
         _MTOUCH_Service_Mainloop
         _RX_Command
           _EUSART_Read
           _EUSART_is_rx_ready
         _SET_SOUND_MODE
         _TX_Command
       _Motor_ON
         _TMR1_StartTimer
         ___ltdiv
       _SET_SOUND_MODE
       _TMR1_StopTimer
       _TX_Command
       _Timer_Mode
         _FCN_NEXT
         _FCN_UP
         _MTOUCH_Button_isPressed
         _MTOUCH_Service_Mainloop
         _SET_SOUND_MODE
         _TX_Command
         ___itoee
           ___memcpyee
         ___lwdiv
         ___lwmod
         ___wmul
       ___eetoi
       ___itoee
       ___lwdiv
       ___lwmod
       ___tmul
       ___wmul
       _set_digit_counters
         ___lwdiv
         ___lwmod
     _FCN_POWER
     _MTOUCH_Button_isPressed
     _MTOUCH_Service_Mainloop
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _MTOUCH_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _init_panel
     _Reset_Digit_Value
     _Toggle_7seg
     _Toggle_OFFLED
     _Toggle_Touch_LEDs

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _tmr0_long_press_duration *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _tmr1_motor_on_duration *
       i1_TMR1_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       A       0        3.9%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      5      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      90      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               3F      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      90      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec  8 12:27:55 2021

                 ?_MTOUCH_Sensor_RawSample_Get 0078                         _Sensor_setScanFunction 1FEC  
              __size_of_Sensor_Acq_ExecuteScan 006F                     __end_of_Sensor_setInactive 1EAE  
                          ___wmul@multiplicand 0074                                _timer0ReloadVal 0062  
                                          LATA 010C                                            LATC 010E  
                                          l111 153D                                            l200 11D5  
                                          l203 1E5A                                            l116 1FB2  
                                          l125 116A                                            l230 1EA6  
                                          l302 1651                                            l119 1E74  
                                          l143 0C25                                            l240 1E5C  
                                          l320 128E                                            l217 14D2  
                                          l209 1FFF                                            l233 1EAD  
                                          l226 1F3C                                            l306 1E6B  
                                          l243 1E59                                            l323 13AE  
                                          l171 0A2B                                            l252 1563  
                                          l332 12CE                                            l172 0A2C  
                                          l341 140E                                            l181 0B73  
                                          l157 07F3                                            l149 0C55  
                                          l309 1E5E                                            l510 15FF  
                                          l326 12AE                                            l350 132E  
                                          l431 0886                                            l335 13EE  
                                          l167 0A11                                            l256 1E9F  
                                          l248 1733                                            l344 130E  
                                          l441 1FA0                                            l177 1FD7  
                                          l329 13CE                                            l353 144E  
                                          l169 0A16                                            l194 1628  
                                          l338 12EE                                            l362 136E  
                                          l602 10D7                                            l371 138E  
                                          l347 142E                                            l259 1EB4  
                                          l452 0BE4                                            l436 14AF  
                                          l356 134E                                            l461 0F27  
                                          l365 148E                                            l605 1096  
                                          l526 0DE7                                            l542 111D  
                                          l550 1704                                            l446 0B04  
                                          l359 146E                                            l296 1EE0  
                                          l368 126E                                            l472 15B0  
                                          l608 1E6F                                            l713 1EFD  
                                          l641 1184                                            l378 10AB  
                                          l547 09C3                                            l555 0E77  
                                          l571 1E58                                            l467 0A97  
                                          l732 1EBF                                            l716 0804  
                                          l708 14F5                                            l477 167B  
                                          l725 1F3D                                            l822 1E67  
                                          l750 1E8C                                            l735 1EC7  
                                          l816 119E                                            l729 1F4C  
                                          l753 1E80                                            l770 1FC4  
                                          l819 1E64                                            l747 1E86  
                                          l846 1E98                                            l881 079D  
                                          l786 1E92                                            l891 17AA  
                                          l894 17B1                                            l886 179A  
                                          l897 17C8                                            l898 17CA  
                                          l899 17CB                                            _GIE 005F  
                              _timer1ReloadVal 00C9                                            _abs 1137  
               ?_EUSART_SetFramingErrorHandler 0072               __end_of_tmr0_long_press_duration 1E7B  
                                          wreg 0009               ??_MTOUCH_Sensor_Sampled_ResetAll 0020  
              ?_MTOUCH_Sensor_Sampled_ResetAll 0070               __size_of_MTOUCH_Sensor_SampleAll 001A  
                             RX_Command@buffer 0073              __size_of_MTOUCH_Sensor_Initialize 0024  
                           __size_of_FCN_POWER 0019                                 ??_Main_Routine 007A  
                    Manual_Mode@b_mode_touched 003D                      ?_MTOUCH_Sensor_Initialize 0070  
                                 ?_EUSART_Read 0070                                           INDF0 0000  
                                         FSR0H 0005                                           FSR1H 0007  
                                         FSR0L 0004                                           FSR1L 0006  
                           _MTOUCH_CVD_ScanA_0 126F                             _MTOUCH_CVD_ScanA_1 128F  
                           _MTOUCH_CVD_ScanA_2 12AF                             _MTOUCH_CVD_ScanA_3 12CF  
                           _MTOUCH_CVD_ScanB_0 138F                             _MTOUCH_CVD_ScanA_4 12EF  
                           _MTOUCH_CVD_ScanB_1 13AF                             _MTOUCH_CVD_ScanA_5 130F  
                           _MTOUCH_CVD_ScanB_2 13CF                             _MTOUCH_CVD_ScanA_6 132F  
                           _MTOUCH_CVD_ScanB_3 13EF                             _MTOUCH_CVD_ScanA_7 134F  
                           _MTOUCH_CVD_ScanB_4 140F                             _MTOUCH_CVD_ScanA_8 124F  
                           _MTOUCH_CVD_ScanB_5 142F                             _MTOUCH_CVD_ScanB_6 144F  
                           _MTOUCH_CVD_ScanB_7 146F                             _MTOUCH_CVD_ScanB_8 136F  
                                         l1022 1519                                           l1102 1F5C  
                                         l1031 1589                                           l1017 15D7  
                                         l1122 1797                                           ?_abs 0072  
                                         l1060 1136                                           l1212 052F  
                                         l1029 1573                                           l1038 0C90  
                                         l1230 020C                                           l1055 0CD7  
                                         l1311 0542                                           l1064 10F4  
                                         l1160 0FE3                                           l1136 0FA0  
                                         l1224 017C                                           l1073 10B1  
                                         l1081 1F2C                                           l1161 0FE5  
                                         l1314 1EBD                                           l1067 10F7  
                                         l1163 0FFF                                           l1147 0FA4  
                                         l1076 10B4                                           l1156 0FD6  
                                         l1148 0FA6                                           l1069 1105  
                                         l1317 0D59                                           l1229 020A  
                                         l1342 1746                                           l1086 11B9  
                                         l1078 10C1                                           l1094 11F2  
                                         l1360 08D0                                           l1192 068D  
                                         l1337 1739                                           l1089 1F1C  
                                         l3201 1094                                           l1346 1765  
                                         l1098 1EEE                                           l1354 08A1  
                                         l3203 1E6C                                           l1357 08BA  
                                         l1349 088C                                           l1381 1F0C  
                                         l1366 1FEB                                           l1470 121B  
                                         l1472 122F                                           l1730 091D  
                                         l1750 0840                                           l1478 16D5  
                                         l3191 1174                                           l1760 17FF  
                                         l3193 1176                                           l3185 116B  
                                         l1930 1150                                           l3195 117F  
                                         l3187 116F                                           l1933 1150  
                                         l3197 1090                                           l3189 1172  
                                         l5151 1E81                                           l3199 1093  
                                         l7001 076C                                           l6201 12C2  
                                         l5153 1E87                                           l1939 16A8  
                                         l6203 12C3                                           l6211 13E2  
                                         l5155 1E7B                                           l7021 1506  
                                         l7013 14F6                                           l7005 0778  
                                         l6205 12C9                                           l6221 12E2  
                                         l6301 1362                                           l6213 13E3  
                                         l5157 1E8D                                           l5413 1EB5  
                                         l7023 150A                                           l7031 10EF  
                                         l6223 12E3                                           l6303 1363  
                                         l6215 13E9                                           l6207 13CF  
                                         l6231 1402                                           l6311 1482  
                                         l7111 1F55                                           l5159 1E93  
                                         l5415 1EBB                                           l7025 1510  
                                         l7041 11AD                                           l7033 10F9  
                                         l7105 1F1D                                           l7201 1132  
                                         l6321 1262                                           l6161 1282  
                                         l6225 12E9                                           l6217 12CF  
                                         l6241 1302                                           l6305 1369  
                                         l6209 13D4                                           l6233 1403  
                                         l6313 1483                                           l7113 1F5B  
                                         l7121 08D1                                           l5361 1185  
                                         l7019 14F8                                           l7035 119F  
                                         l7027 10AC                                           l7107 1F0D  
                                         l6411 1FD0                                           l6323 1263  
                                         l6163 1283                                           l6219 12D4  
                                         l6243 1303                                           l6331 1382  
                                         l6171 13A2                                           l6235 1409  
                                         l6227 13EF                                           l6251 1422  
                                         l6315 1489                                           l6307 146F  
                                         l7211 0F28                                           l7131 08F6  
                                         l7123 08DF                                           l7203 11D6  
                                         l7051 1576                                           l7043 1564  
                                         l5371 1193                                           l5363 1187  
                                         l7037 11A4                                           l7029 10B6  
                                         l6341 1217                                           l6421 1626  
                                         l6413 1602                                           l6501 16D6  
                                         l6405 1FC5                                           l6325 1269  
                                         l6317 124F                                           l6165 1289  
                                         l6157 126F                                           l6181 12A2  
                                         l6245 1309                                           l6237 12EF  
                                         l6261 1322                                           l6333 1383  
                                         l6173 13A3                                           l6229 13F4  
                                         l6253 1423                                           l6309 1474  
                                         l7109 1F4D                                           l7221 0F3C  
                                         l7213 0F2C                                           l7133 0904  
                                         l7125 08E2                                           l7141 0917  
                                         l7205 11EB                                           l7045 1569  
                                         l7061 0C60                                           l7117 1F00  
                                         l7301 056E                                           l5381 1FBA  
                                         l5373 1194                                           l5365 1189  
                                         l7039 11A9                                           l6343 1220  
                                         l6415 1608                                           l6503 16F4  
                                         l6511 0E12                                           l6351 1E70  
                                         l6407 1FCA                                           l6319 1254  
                                         l6159 1274                                           l6183 12A3  
                                         l6239 12F4                                           l6263 1323  
                                         l6335 1389                                           l6327 136F  
                                         l6175 13A9                                           l6167 138F  
                                         l6191 13C2                                           l6255 1429  
                                         l6247 140F                                           l6271 1442  
                                         l6431 1F2D                                           l7223 0F45  
                                         l7231 0F5A                                           l7215 0F2C  
                                         l7135 090A                                           l7127 08EC  
                                         l7207 11ED                                           l7047 156E  
                                         l7071 0C7E                                           l7063 0C6A  
                                         l7151 0810                                           l7311 05A2  
                                         l7303 057E                                           l5391 14DE  
                                         l5383 1FBB                                           l5375 119B  
                                         l5367 118B                                           l6345 1225  
                                         l6337 1211                                           l6521 097A  
                                         l6601 110B                                           l6513 0E31  
                                         l6505 0DE8                                           l6425 14B1  
                                         l6353 1E72                                           l6361 10A0  
                                         l6185 12A9                                           l6177 128F  
                                         l6265 1329                                           l6257 130F  
                                         l6281 1342                                           l6329 1374  
                                         l6169 1394                                           l6193 13C3  
                                         l6249 1414                                           l6273 1443  
                                         l6433 1F33                                           l7241 0F7D  
                                         l7233 0F63                                           l7225 0F48  
                                         l7217 0F30                                           l7137 090B  
                                         l7129 08F0                                           l7209 11F0  
                                         l7081 0CA0                                           l7073 0C84  
                                         l7065 0C6C                                           l7057 0C56  
                                         l7161 0830                                           l7153 0815  
                                         l7145 0805                                           l7321 05C1  
                                         l7313 05A7                                           l7305 058E  
                                         l7401 007B                                           l5393 14E5  
                                         l5385 1FBC                                           l5377 1FB3  
                                         l5369 118C                                           l6611 0DBC  
                                         l6347 122B                                           l6339 1213  
                                         l6523 0992                                           l6603 1113  
                                         l6507 0DEC                                           l6515 0E33  
                                         l6427 14B7                                           l6363 10A4  
                                         l6179 1294                                           l6259 1314  
                                         l6283 1343                                           l6195 13C9  
                                         l6187 13AF                                           l6275 1449  
                                         l6267 142F                                           l6291 1462  
                                         l6371 0B0A                                           l6355 1FEC  
                                         l6451 09D5                                           l6443 09C4  
                                         l6531 079E                                           l7251 0F8F  
                                         l7243 0F82                                           l7235 0F67  
                                         l7227 0F4D                                           l7219 0F34  
                                         l7139 0911                                           l7091 0CBA  
                                         l7083 0CA2                                           l7075 0C8E  
                                         l7067 0C72                                           l7059 0C5B  
                                         l7163 0831                                           l7155 0819  
                                         l7147 0807                                           l7171 17CC  
                                         l7331 060D                                           l7323 05C4  
                                         l7315 05AA                                           l7307 0596  
                                         l7411 0090                                           l7403 0081  
                                         l5395 14EC                                           l5387 1FBD  
                                         l5379 1FB8                                           TRISA 008C  
                                         l6613 0DC4                                           l6525 09B0  
                                         l6605 1115                                           l6517 0E58  
                                         l6509 0DED                                           l6621 0B87  
                                         l6429 1E99                                           l6365 10A9  
                                         l6357 1097                                           l6197 12AF  
                                         l6285 1349                                           l6277 132F  
                                         l6189 13B4                                           l6269 1434  
                                         l6293 1463                                           l6381 0B1D  
                                         l6461 09FF                                           l6453 09DA  
                                         l6445 09C6                                           l6541 07B9  
                                         l6533 07A3                                           l6701 0C1E  
                                         l7261 0FB2                                           l7253 0F94  
                                         l7245 0F86                                           l7237 0F6A  
                                         l7229 0F50                                           l7093 0CC4  
                                         l7085 0CA8                                           l7077 0C91  
                                         l7069 0C7C                                           l7165 0836  
                                         l7157 081D                                           l7149 080D  
                                         l7181 17E2                                           l7173 17D2  
                                         l7341 0626                                           l7333 0611  
                                         l7325 05CE                                           l7309 059F  
                                         l7317 05B4                                           l7501 01DF  
                                         l7421 00DA                                           l7413 00A1  
                                         l7405 0084                                           l5397 14F3  
                                         l5389 14D3                                           TRISC 008E  
                                         l6615 0DD2                                           l6607 0D5A  
                                         l6519 096F                                           l6631 0BDC  
                                         l6623 0B8F                                           l6527 151C  
                                         l6359 109B                                           l6199 12B4  
                                         l6279 1334                                           l6295 1469  
                                         l6287 144F                                           l6391 0B59  
                                         l6375 0B10                                           l6471 0A0E  
                                         l6463 0A02                                           l6455 09F3  
                                         l6447 09CC                                           l6439 1F3B  
                                         l6551 07EA                                           l6535 07AF  
                                         l6703 0C2D                                           l7271 0FC5  
                                         l7263 0FB6                                           l7255 0F97  
                                         l7247 0F89                                           l7239 0F74  
                                         l8071 157E                                           l7087 0CB2  
                                         l7079 0C96                                           l7159 082C  
                                         l7167 083C                                           l7183 17EC  
                                         l7175 17D5                                           l7351 0648  
                                         l7335 061A                                           l7327 05D7  
                                         l7343 062F                                           l7319 05BD  
                                         l7511 0205                                           l7503 01E7  
                                         l7431 00F4                                           l7423 00E3  
                                         l7415 00B1                                           l7407 0088  
                                         l6801 175E                                           l6617 0DDA  
                                         l6609 0DAB                                           l6625 0B96  
                                         l6641 0EB2                                           l6633 0E78  
                                         l6721 1705                                           l6297 134F  
                                         l6289 1454                                           l6393 0B63  
                                         l6385 0B24                                           l6369 0B05  
                                         l6473 0A1B                                           l6465 0A04  
                                         l6457 09F6                                           l6449 09D2  
                                         l6481 1137                                           l6545 07BB  
                                         l6561 11BF                                           l8073 0C43  
                                         l7273 0FC7                                           l7257 0FA8  
                                         l7265 0FB8                                           l7249 0F8D  
                                         l7281 0FDD                                           l7193 1E65  
                                         l7089 0CB4                                           l7097 0CC6  
                                         l7185 17F0                                           l7177 17DA  
                                         l7361 0666                                           l7345 0638  
                                         l7353 0651                                           l7337 061E  
                                         l7329 05DC                                           l7601 0325  
                                         l7521 021C                                           l7513 020E  
                                         l7505 01EC                                           l7441 0117  
                                         l7433 00F7                                           l7425 00EB  
                                         l7417 00C1                                           l7409 008C  
                                         l7195 111E                                           l6491 0858  
                                         l6627 0BA1                                           l6619 0B74  
                                         l6651 0EF6                                           l6635 0E8E  
                                         l6643 0EBB                                           l6731 148F  
                                         l6299 1354                                           l6395 0B68  
                                         l6387 0B35                                           l6379 0B16  
                                         l6475 0A22                                           l6467 0A05  
                                         l6459 09F8                                           l6483 1144  
                                         l6547 07C8                                           l6539 07B1  
                                         l6563 11C9                                           l8075 0C48  
                                         l6707 0C36                                           l6811 115C  
                                         l6803 1151                                           l7283 0FE8  
                                         l7267 0FBC                                           l7259 0FAE  
                                         l7275 0FC9                                           l7187 17F5  
                                         l7179 17DE                                           l7371 0688  
                                         l7355 065A                                           l7347 0641  
                                         l7339 0623                                           l7363 0670  
                                         l7291 0543                                           l7611 033E  
                                         l7603 0328                                           l8067 022A  
                                         l7515 0211                                           l7507 01FB  
                                         l7531 0241                                           l7451 012F  
                                         l7443 011B                                           l7435 0100  
                                         l7427 00EE                                           l7419 00D2  
                                         l7197 112D                                           l6493 085E  
                                         l6661 0A2D                                           l6629 0BB3  
                                         l6645 0ED5                                           l6653 0EFF  
                                         l6637 0E98                                           l6581 1562  
                                         l6573 153F                                           l6741 14A4  
                                         l6733 149E                                           l6725 1719  
                                         l6389 0B55                                           l8077 0B2D  
                                         l6397 0B6C                                           l6477 0A27  
                                         l6469 0A08                                           l6485 1EA0  
                                         l6549 07E1                                           l6565 11CB  
                                         l6557 11BA                                           l6709 0C53  
                                         l7285 0FF0                                           l7277 0FD0  
                                         l7269 0FC1                                           l8069 0CCF  
                                         l6901 08BD                                           l7189 17FB  
                                         l7373 0689                                           l7365 0676  
                                         l7357 065F                                           l7349 0645  
                                         l7293 0546                                           l7381 16B4  
                                         l7701 0477                                           l7621 0361  
                                         l7613 0342                                           l7605 0331  
                                         l7541 0258                                           l7533 024A  
                                         l7517 0214                                           l7509 0200  
                                         l7525 0221                                           l7461 0148  
                                         l7453 0134                                           l7445 0120  
                                         l7437 010A                                           l7429 00F0  
                                         l8079 0780                                           l7199 1130  
                                         l6495 086D                                           l6671 0A83  
                                         l6663 0A40                                           l6655 0F0A  
                                         l6647 0EE2                                           l6639 0EAA  
                                         l6575 1545                                           l6831 1F8F  
                                         l6591 1692                                           l6743 14A9  
                                         l6727 1720                                           l6823 1ED4  
                                         l6399 0B71                                           l6487 1EA7  
                                         l6559 11BE                                           l6567 1EAE  
                                         l6815 115E                                           l6751 158C  
                                         l7287 0FF6                                           l7279 0FD8  
                                         l6903 08C1                                           l6911 08C9  
                                         l7367 067A                                           l7359 0663  
                                         l7295 054A                                           l7383 16BB  
                                         l7375 0CD8                                           l7711 0490  
                                         l7703 047A                                           l7631 0383  
                                         l7623 0366                                           l7615 0345  
                                         l7607 0339                                           l7551 0276  
                                         l7535 024D                                           l7543 0261  
                                         l7527 0235                                           l7519 0218  
                                         l7463 014C                                           l7471 0157  
                                         l7455 0137                                           l7447 0123  
                                         l7439 0113                                           l7391 0073  
                                         l6913 1FDA                                           l6497 0875  
                                         l6489 0842                                           l6673 0A8C  
                                         l6665 0A55                                           l6657 0F18  
                                         l6649 0EEA                                           l6569 1E5B  
                                         l6761 0ABE                                           l6841 1F9A  
                                         l6593 1698                                           l6585 167C  
                                         l6681 1FA1                                           l6729 1725  
                                         l6825 1ED7                                           l6817 1163  
                                         l6809 1153                                           l6753 15A5  
                                         l6745 158A                                           l6921 162F  
                                         l7289 0FF7                                           l6905 08C2  
                                         l7369 0682                                           l7297 054E  
                                         l7385 16C1                                           l7377 16A9  
                                         l7721 04B3                                           l7713 0494  
                                         l7705 0483                                           l7641 03A6  
                                         l7633 038B                                           l7625 0369  
                                         l7617 034E                                           l7609 033C  
                                         l7561 0295                                           l7545 026A  
                                         l7553 027F                                           l7537 0251  
                                         l7529 0238                                           l7481 0172  
                                         l7465 014F                                           l7457 013C  
                                         l7449 012C                                           l7473 0159  
                                         l7393 0076                                           l7801 15BA  
                                         l6915 1FE6                                           l6771 1EEF  
                                         l6499 087D                                           l6667 0A6F  
                                         l6659 0F20                                           l6763 0ACD  
                                         l6587 1686                                           l6595 169C  
                                         l6739 14A0                                           l6691 1FAC  
                                         l6827 1EDA                                           l6819 1169  
                                         l6675 1652                                           l6755 15AA  
                                         l6843 1E5D                                           l6931 163E  
                                         l6923 1632                                           l6851 0800  
                                         l6907 08C3                                           l7299 055E  
                                         l7387 16CE                                           l7379 16B0  
                                         l7731 04D5                                           l7723 04B8  
                                         l7715 0497                                           l7707 048B  
                                         l7651 03CE                                           l7643 03AA  
                                         l7627 0372                                           l7635 0395  
                                         l7619 0358                                           l7571 02B8  
                                         l7563 0299                                           l7555 0288  
                                         l7547 026F                                           l7539 0255  
                                         l7491 01B7                                           l7475 0162  
                                         l7467 0154                                           l7459 013F  
                                         l7395 0076                                           l7811 15C5  
                                         l7803 15BD                                           l6773 1EF0  
                                         l6597 1106                                           l6669 0A7B  
                                         l6765 0ADD                                           l6757 0A9A  
                                         l6837 1F91                                           l6589 168E  
                                         l6829 1EDD                                           l6693 0BE7  
                                         l6677 165D                                           l6845 1E5D  
                                         l6941 164D                                           l6925 1634  
                                         l6861 1F49                                           l6909 08C8  
                                         l7741 04F8                                           l7733 04DD  
                                         l7725 04BB                                           l7717 04A0  
                                         l7709 048E                                           l7661 03E7  
                                         l7645 03B2                                           l7637 039A  
                                         l7629 037A                                           l7653 03D1  
                                         l7581 02DA                                           l7573 02BD  
                                         l7565 029C                                           l7557 0290  
                                         l7549 0273                                           l7493 01BB  
                                         l7485 017E                                           l7477 0165  
                                         l7397 0076                                           l7821 15CE  
                                         l7813 15C7                                           l7805 15BF  
                                         l7901 123B                                           l6791 174A  
                                         l6871 17A0                                           l6783 1EBF  
                                         l6775 1EF5                                           l6599 110A  
                                         l6767 0AE9                                           l6759 0AB0  
                                         l6839 1F95                                           l6687 1FA3  
                                         l6695 0C00                                           l6679 1672  
                                         l6943 1650                                           l6935 1640  
                                         l6927 1636                                           l6919 1629  
                                         l6863 1F4B                                           l6855 1F3D  
                                         l7751 0520                                           l7743 04FC  
                                         l7727 04C4                                           l7735 04E7  
                                         l7719 04AA                                           l7671 040A  
                                         l7663 03EB                                           l7655 03DA  
                                         l7639 039D                                           l7647 03BB  
                                         l7591 02FD                                           l7583 02E2  
                                         l7575 02C0                                           l7567 02A5  
                                         l7559 0293                                           l7495 01C0  
                                         l7487 0182                                           l7479 0168  
                                         l7399 0076                                           l7823 15D3  
                                         l7815 15C9                                           l7807 15C0  
                                         l7903 1242                                           l6793 174E  
                                         l6873 17AC                                           l6785 1EC4  
                                         l6777 1EFA                                           l6881 1EEA  
                                         l6961 15FE                                           l6953 15D9  
                                         l6769 0AF1                                           l6689 1FA7  
                                         l6697 0C0C                                           l6849 1E68  
                                         l6937 1643                                           l6929 1636  
                                         l6857 1F42                                           l7761 0535  
                                         l7745 0504                                           l7737 04EC  
                                         l7729 04CC                                           l7753 0523  
                                         l7681 042C                                           l7673 040F  
                                         l7665 03EE                                           l7657 03E2  
                                         l7649 03BF                                           l7593 0301  
                                         l7577 02C9                                           l7585 02EC  
                                         l7569 02AF                                           l7497 01C4  
                                         l7489 01B3                                           l7841 178E  
                                         l7833 1778                                           l7825 15D5  
                                         l7817 15CA                                           l7809 15C3  
                                         l7905 1249                                           l6795 174F  
                                         l6787 1735                                           l6875 17B4  
                                         l6867 1798                                           l6971 069D  
                                         l6779 1EFC                                           l6955 15DF  
                                         l6699 0C18                                           l6939 164A  
                                         l6859 1F44                                           l6891 08AB  
                                         l6883 0888                                           l7763 0538  
                                         l7755 0529                                           l7739 04EF  
                                         l7747 050D                                           l7691 044F  
                                         l7683 0434                                           l7675 0412  
                                         l7667 03F7                                           l7659 03E5  
                                         l7595 0309                                           l7587 02F1  
                                         l7579 02D1                                           l7499 01D8  
                                         l7835 177B                                           l7827 1766  
                                         l7819 15CB                                           l6797 1756  
                                         l6789 173E                                           l6869 179C  
                                         l6877 17BE                                           l6981 06CC  
                                         l6973 06A8                                           l6965 1E62  
                                         l6893 08AF                                           l6885 0891  
                                         l7765 053B                                           l7757 052A  
                                         l7749 0511                                           l7693 0453  
                                         l7677 041B                                           l7685 043E  
                                         l7669 0401                                           l7589 02F4  
                                         l7597 0312                                           l7837 1784  
                                         l7829 176E                                           l6799 175A  
                                         l6991 0705                                           l6983 06D8  
                                         l6967 0690                                           l6879 1EE2  
                                         l6895 08B3                                           l6887 089C  
                                         l7767 053F                                           l7759 0534  
                                         l7695 045B                                           l7687 0443  
                                         l7679 0423                                           l7599 0316  
                                         l7839 178B                                           l7791 10D4  
                                         l6993 0710                                           l6985 06E3  
                                         l6977 06B5                                           l6969 0691  
                                         l6897 08B5                                           l6889 08A6  
                                         l7689 0446                                           l7697 0464  
                                         l7793 15B1                                           l6995 071C  
                                         l6987 06EE                                           l6979 06C0  
                                         l6899 08B9                                           l7699 0468  
                                         l7795 15B4                                           l7891 1230  
                                         l6997 0728                                           l7789 10C2  
                                         l7797 15B5                                           l7893 1233  
                                         l6999 074A                                           l7799 15B8  
                                         l7895 1236                                           l7897 1239  
                                         l7899 123A                  ?_Button_Reading_Update_Helper 0025  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u5000 0ACD  
                                         u5001 0ACC                                           u5010 0AE9  
                                         u5011 0AE8                                           u5020 1EF5  
                                         u5100 1FA0                                           u5021 1EF4  
                                         u5101 1F9F                                           u5030 1EFA  
                                         u5110 1F42                                           u5031 1EF9  
                                         u5111 1F41                                           u5040 1EC4  
                                         u5120 1F49                                           u5200 08C8  
                                         u6000 0113                                           u5041 1EC3  
                                         u5121 1F48                                           u5201 08C7  
                                         u6001 0112                                           u5050 173E  
                                         u5130 17AA                                           u5210 08D0  
                                         u6010 012C                                           u5051 173D  
                                         u5131 17A9                                           u5211 08CF  
                                         u6011 012B                                           u5060 174A  
                                         u5140 17BE                                           u5300 11A4  
                                         u4500 109B                                           u5220 162F  
                                         u6100 024A                                           u6020 0134  
                                         u5061 1749                                           u5141 17BD  
                                         u5301 11A3                                           u4501 109A  
                                         u5221 162E                                           u6101 0249  
                                         u6021 0133                                           u5070 1765  
                                         u5150 17C8                                           u4510 0B0F  
                                         u5230 163E                                           u5310 0C60  
                                         u6110 0261                                           u6030 0148  
                                         u5071 1764                                           u5151 17C7  
                                         u4511 0B0E                                           u5231 163D  
                                         u5311 0C5F                                           u6111 0260  
                                         u6031 0147                                           u5160 1EEA  
                                         u5240 15DF                                           u4520 0B15  
                                         u4600 0A16                                           u5080 115C  
                                         u5400 0CB2                                           u5320 0C6A  
                                         u6200 0331                                           u6120 026A  
                                         u6040 0154                                           u5161 1EE9  
                                         u5241 15DE                                           u4521 0B14  
                                         u4601 0A15                                           u5081 115B  
                                         u5401 0CB1                                           u5321 0C69  
                                         u6201 0330                                           u6121 0269  
                                         u6041 0153                                           u5250 15FC  
                                         u4530 0B55                                           u4610 0A1B  
                                         u5090 1169                                           u5410 0CBA  
                                         u5330 0C72                                           u5170 0891  
                                         u6210 034E                                           u6130 027F  
                                         u6050 0162                                           u5251 15FA  
                                         u4531 0B54                                           u4611 0A1A  
                                         u5091 1168                                           u5411 0CB9  
                                         u5331 0C71                                           u5171 0890  
                                         u6211 034D                                           u6131 027E  
                                         u6051 0161                                           u5260 15FD  
                                         u4460 1217                                           u4540 0B59  
                                         u4620 0A27                                           u4700 07B9  
                                         u5500 0917                                           u5420 0CC4  
                                         u5340 0C7C                                           u5180 08A6  
                                         u6300 041B                                           u6220 0358  
                                         u6140 0288                                           u6060 0171  
                                         u4461 1216                                           u4541 0B58  
                                         u4621 0A26                                           u4701 07B8  
                                         u5501 0916                                           u5421 0CC3  
                                         u5341 0C7B                                           u5181 08A5  
                                         u6301 041A                                           u6221 0357  
                                         u6141 0287                                           u6061 0170  
                                         u5270 1510                                           u4550 1FCF  
                                         u4630 1144                                           u4710 07C8  
                                         u5430 1F55                                           u5350 0C84  
                                         u5190 08B9                                           u5510 080D  
                                         u6310 044F                                           u6230 0361  
                                         u6150 02A5                                           u6070 017B  
                                         u5271 150F                                           u4551 1FCE  
                                         u4631 1143                                           u4711 07C7  
                                         u5431 1F54                                           u5351 0C83  
                                         u5191 08B8                                           u5511 080C  
                                         u6311 044E                                           u6231 0360  
                                         u6151 02A4                                           u6071 017A  
                                         u5280 10B1                                           u4800 0DD2  
                                         u4560 1FD7                                           u4720 07E1  
                                         u5440 08DF                                           u5360 0C8E  
                                         u5600 17E2                                           u6320 0483  
                                         u6240 0372                                           u6160 02AF  
                                         u6080 01DF                                           u5281 10B0  
                                         u4801 0DD1                                           u4561 1FD6  
                                         u4721 07E0                                           u5441 08DE  
                                         u5361 0C8D                                           u5601 17E1  
                                         u6321 0482                                           u6241 0371  
                                         u6161 02AE                                           u6081 01DE  
                                         u5290 10F4                                           u4490 122B  
                                         u4570 1608                                           u4650 0DEC  
                                         u4810 0B87                                           u4730 11BE  
                                         u5370 0C96                                           u5530 081D  
                                         u5610 17EC                                           u6330 04A0  
                                         u6250 03A6                                           u6170 02B8  
                                         u6090 0241                                           u5291 10F3  
                                         u4491 122A                                           u4475 121C  
                                         u4571 1607                                           u4651 0DEB  
                                         u4811 0B86                                           u4635 1140  
                                         u4731 11BD                                           u5371 0C95  
                                         u5531 081C                                           u5611 17EB  
                                         u6331 049F                                           u6251 03A5  
                                         u6171 02B7                                           u6091 0240  
                                         u4660 0DFF                                           u4820 0BB3  
                                         u4740 1545                                           u4580 14B7  
                                         u4900 165D                                           u5700 0F82  
                                         u5460 08F0                                           u5380 0CA0  
                                         u6340 04AA                                           u6260 03DA  
                                         u6180 02C9                                           u6420 176E  
                                         u4485 1221                                           u4645 16FA  
                                         u4821 0BB2                                           u4741 1544  
                                         u4581 14B6                                           u4901 165C  
                                         u5701 0F81                                           u5461 08EF  
                                         u5381 0C9F                                           u5525 0811  
                                         u6341 04A9                                           u6261 03D9  
                                         u6181 02C8                                           u6421 176D  
                                         u4670 0E45                                           u4830 0BC5  
                                         u4750 16A8                                           u4590 1F33  
                                         u4910 1672                                           u5710 0FA0  
                                         u5390 0CA8                                           u5550 082C  
                                         u5630 17FB                                           u6350 04B3  
                                         u6270 03F7                                           u6190 02FD  
                                         u6430 1777                                           u4751 16A7  
                                         u4591 1F32                                           u4911 1671  
                                         u5711 0F9F                                           u5455 08E3  
                                         u5391 0CA7                                           u5551 082B  
                                         u5631 17FA                                           u5615 17E8  
                                         u6351 04B2                                           u6271 03F6  
                                         u6191 02FC                                           u6431 1776  
                                         u4680 097A                                           u4760 110A  
                                         u4840 0E8E                                           u4920 1FB2  
                                         u5720 0FAE                                           u5640 0F3C  
                                         u5480 0904                                           u5800 05B3  
                                         u6360 04C4                                           u6280 0401  
                                         u6440 1784                                           u4681 0979  
                                         u4761 1109                                           u4665 0DFB  
                                         u4841 0E8D                                           u4921 1FB1  
                                         u5721 0FAD                                           u5641 0F3B  
                                         u5481 0903                                           u5545 081E  
                                         u5625 17F1                                           u5801 05B2  
                                         u6361 04C3                                           u6281 0400  
                                         u6441 1783                                           u4770 0D6D  
                                         u4850 0EAA                                           u4690 07AF  
                                         u4930 0C18                                           u5730 0FBC  
                                         u5650 0F45                                           u5570 083C  
                                         u5810 05BD                                           u6370 04F8  
                                         u6290 040A                                           u6450 1797  
                                         u4675 0E41                                           u4835 0BC1  
                                         u4851 0EA9                                           u4691 07AE  
                                         u4931 0C17                                           u5731 0FBB  
                                         u5651 0F44                                           u5475 08F1  
                                         u5571 083B                                           u5555 0828  
                                         u5811 05BC                                           u6371 04F7  
                                         u6291 0409                                           u6451 1796  
                                         u4780 0DA1                                           u4860 0ED5  
                                         u4940 0C1E                                           u5740 0FC1  
                                         u5660 0F59                                           u5580 17D2  
                                         u5900 0688                                           u5820 05CD  
                                         u6380 0529                                           u4861 0ED4  
                                         u4941 0C1D                                           u5741 0FC0  
                                         u5661 0F58                                           u5485 0900  
                                         u5565 0832                                           u5581 17D1  
                                         u5901 0687                                           u5821 05CC  
                                         u6381 0528                                           u4790 0DBC  
                                         u4870 0F18                                           u4950 1718  
                                         u5750 0FD6                                           u5670 0F63  
                                         u5830 05D7                                           u5910 16B4  
                                         u6390 0534                                           u4791 0DBB  
                                         u4775 0D69                                           u4871 0F17  
                                         u4951 1717                                           u6607 13D5  
                                         u5751 0FD5                                           u5671 0F62  
                                         u5495 090C                                           u5831 05D6  
                                         u5911 16B3                                           u6391 0533  
                                         u4880 0A40                                           u4960 1733  
                                         u5760 0FE3                                           u5680 0F73  
                                         u5840 062F                                           u4785 0D9D  
                                         u4881 0A3F                                           u4865 0ED1  
                                         u4961 1732                                           u6617 13B5  
                                         u5761 0FE2                                           u5681 0F72  
                                         u5841 062E                                           u4890 0A6F  
                                         u4970 14AF                                           u5770 0FF6  
                                         u5690 0F7D                                           u5850 0638  
                                         u4891 0A6E                                           u4971 14AE  
                                         u4955 1714                                           u6707 1295  
                                         u6627 1395                                           u5771 0FF5  
                                         u5691 0F7C                                           u5595 17D6  
                                         u5851 0637                                           u4980 15B0  
                                         u5860 0651                                           u5780 0596  
                                         u5940 16CE                                           u4965 172F  
                                         u6717 1275                                           u6637 1375  
                                         u6557 1475                                           u4981 15AF  
                                         u5861 0650                                           u5781 0595  
                                         u5941 16CD                                           u5925 16BC  
                                         u4990 0ABE                                           u5870 065A  
                                         u5790 059F                                           u5950 0081  
                                         u4991 0ABD                                           u6727 1255  
                                         u6647 1355                                           u6567 1455  
                                         u5871 0659                                           u5791 059E  
                                         u5935 16C2                                           u5951 0080  
                                         u5880 066F                                           u5960 00DA  
                                         u6737 06AD                                           u6657 1335  
                                         u6577 1435                                           u5881 066E  
                                         u5961 00D9                                           u5890 0676  
                                         u5970 00E3                                           u6747 06C5  
                                         u6667 1315                                           u6587 1415  
                                         u5891 0675                                           u5971 00E2  
                                         u5980 0100                                           u6757 06E8  
                                         u6677 12F5                                           u6597 13F5  
                                         u5981 00FF                                           u5990 010A  
                                         u6767 06FE                                           u6687 12D5  
                                         u5991 0109                                           u6777 0715  
                                         u6697 12B5                     Button_State_Pressed@button 002B  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
            __size_of_Sensor_Acq_ExecutePacket 0069                      ?_Sensor_Acq_ExecutePacket 0024  
                           _MTOUCH_needReburst 1E5D                                           abs@a 0072  
                               _Automatic_Mode 0073                                           _main 1230  
         __size_of_MTOUCH_Button_InitializeAll 0021                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006           __size_of_MTOUCH_Sensor_InitializeAll 0012  
                                         btemp 007E                                 _g_digit_status 007A  
                          ?_MTOUCH_CVD_ScanA_0 0070                            ?_MTOUCH_CVD_ScanA_1 0070  
                          ?_MTOUCH_CVD_ScanA_2 0070                            ?_MTOUCH_CVD_ScanA_3 0070  
                          ?_MTOUCH_CVD_ScanA_4 0070                            ?_MTOUCH_CVD_ScanB_0 0070  
                          ?_MTOUCH_CVD_ScanA_5 0070                            ?_MTOUCH_CVD_ScanB_1 0070  
                          ?_MTOUCH_CVD_ScanA_6 0070                            ?_MTOUCH_CVD_ScanB_2 0070  
                          ?_MTOUCH_CVD_ScanA_7 0070                            ?_MTOUCH_CVD_ScanB_3 0070  
                          ?_MTOUCH_CVD_ScanA_8 0070                            ?_MTOUCH_CVD_ScanB_4 0070  
                          ?_MTOUCH_CVD_ScanB_5 0070                            ?_MTOUCH_CVD_ScanB_6 0070  
                          ?_MTOUCH_CVD_ScanB_7 0070                            ?_MTOUCH_CVD_ScanB_8 0070  
                                         start 0026                                  ??_Manual_Mode 003B  
                                   _RX_Command 1F4D                       Timer_Mode@b_mode_touched 0045  
                   ??_TMR1_SetInterruptHandler 0074                            ?_MTOUCH_needReburst 0070  
                             __end_of_FCN_NEXT 158A                __size_of_tmr1_motor_on_duration 001E  
                             Timer_Mode@buffer 0047                                          ADCON0 009D  
                     ?_MTOUCH_Service_Mainloop 0070                                   ___itoee@addr 0022  
             __size_of_MTOUCH_Button_isPressed 0028                  __size_of_Button_State_Pressed 006B  
                                 ___itoee@data 0078                                          ??_abs 0074  
                  ?_Button_Baseline_Initialize 0025                        __end_of_TMR0_Initialize 1FC5  
                                   _TX_Command 1EE1                    GENERATE_PULSE@PULSE_PERIODE 0074  
                ??_MTOUCH_Sensor_RawSample_Get 0020                  Sensor_RawSample_Update@sensor 0072  
               ??_TMR0_DefaultInterruptHandler 0070                      __size_of_Sensor_isEnabled 0010  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                     __end_ofi1_TMR1_StopTimer 1E62                  __end_of_OSCILLATOR_Initialize 1097  
            _g_tmr0_longpress_duration_counter 005B                                          ?_main 0070  
                              __end_of___eetoi 1FEC                                          _ADRES 009B  
                                        _EEADR 0191                           ??_MTOUCH_CVD_ScanA_0 0072  
                         ??_MTOUCH_CVD_ScanA_1 0072                           ??_MTOUCH_CVD_ScanA_2 0072  
                         ??_MTOUCH_CVD_ScanA_3 0072                           ??_MTOUCH_CVD_ScanA_4 0072  
                         ??_MTOUCH_CVD_ScanB_0 0072                           ??_MTOUCH_CVD_ScanA_5 0072  
                         ??_MTOUCH_CVD_ScanB_1 0072                           ??_MTOUCH_CVD_ScanA_6 0072  
                         ??_MTOUCH_CVD_ScanB_2 0072                           ??_MTOUCH_CVD_ScanA_7 0072  
                         ??_MTOUCH_CVD_ScanB_3 0072                           ??_MTOUCH_CVD_ScanA_8 0072  
                         ??_MTOUCH_CVD_ScanB_4 0072                           ??_MTOUCH_CVD_ScanB_5 0072  
                         ??_MTOUCH_CVD_ScanB_6 0072                           ??_MTOUCH_CVD_ScanB_7 0072  
                         ??_MTOUCH_CVD_ScanB_8 0072                                _TMR1_StartTimer 1E62  
                                        _T1CON 0018                                __end_of___itoee 1F0D  
                              __end_of___ltdiv 091E                        __size_of_Button_Service 006D  
                              __end_of___lwdiv 0841                                __end_of___lwmod 1800  
                                        i1l830 1F8E                                          i1l822 1E61  
                                        i1l664 0024                                          i1l665 0024  
                                        i1l843 10EE                                          i1l659 0012  
                                        i1l783 1F7D                                          i1l849 1E57  
                                        i1l789 1E56                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TXREG 019A                                          _TXSTA 019E  
            __size_of_TMR0_SetInterruptHandler 0006                __size_of_Button_DefaultCallback 0001  
                    ?_TMR0_SetInterruptHandler 0072                           ??_MTOUCH_needReburst 0072  
                             __end_of_TMR0_ISR 1F7E                               __end_of_TMR1_ISR 10EF  
              __size_of_Sensor_DefaultCallback 0001                        __size_of_Sensor_Service 0071  
        __end_of_MTOUCH_Sensor_Scan_Initialize 1E75         __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
                _MTOUCH_Sensor_Scan_Initialize 1E70                                 _WDT_Initialize 1E6C  
                      Sensor_setSampled@sensor 0072                         _Sensor_Acq_ExecuteScan 0B05  
             __size_of_Button_State_NotPressed 00B0                         __end_of_Automatic_Mode 0543  
                      __end_of_TMR1_Initialize 119F                                          pclath 000A  
                         _Sensor_Sampled_Reset 1E99                                  ___memcpyee@to 0077  
                                        status 0003                                          wtemp0 007E  
                    __size_of_Sensor_setActive 0007                                _TMR1_WriteTimer 1F7E  
                       Sensor_isEnabled@sensor 0072                           __size_of_EEPROM_init 0024  
                              __initialization 0028                                   __end_of_main 124F  
                            __end_of_FCN_POWER 1137                                 _GENERATE_PULSE 1798  
                        __end_of_MTOUCH_Random 10AC                        _EUSART_is_tx_ready$1214 0072  
                               ??_EUSART_Write 0072                            __end_of_Manual_Mode 1000  
                  ?_INTERRUPT_InterruptManager 0070               __end_of_MTOUCH_Button_Initialize 0887  
                                       ??_main 007A                        _MTOUCH_Sensor_Calibrate 1E59  
                             __end_of_Motor_ON 11F3                        ??_Button_Reading_Update 007A  
                         Automatic_Mode@buffer 00D6           MTOUCH_Sensor_Sampled_ResetAll@sensor 0022  
                     ?_Button_Deviation_Update 0072                         __end_of_WDT_Initialize 1E70  
                       _tmr1_motor_on_duration 11F3                                   ?_MTOUCH_Tick 0070  
                 Button_Baseline_Update@button 0072              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00CF           __size_of_MTOUCH_Sensor_RawSample_Get 0029  
                                       _EEDATA 0193                                         _EECON1 0195  
                                       _EECON2 0196                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                   __end_of_EUSART_is_rx_ready 0805                                         _BORCON 0116  
                                       _T1GCON 0019                                         _FCN_UP 0C56  
                              ?_Automatic_Mode 0070                                         i1l1110 1204  
                                       i1l1111 1210                                         i1l1105 1E7A  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1109 1202  
                                       i1l5401 1F83                                         i1l5411 1F8C  
                                       i1l5403 1F84                                         i1l5405 1F86  
                                       i1l5421 1207                                         i1l5407 1F88  
                                       i1l5423 120A                                         i1l5417 1E75  
                                       i1l5409 1F8A                                         i1l5425 120D  
                                       i1l5419 11F3                                         i1l5359 1E5F  
                                       i1l5831 1F6E                                         i1l5399 1F7E  
                                       i1l5833 1F71                                         i1l5841 10E2  
                                       i1l5835 1F78                                         i1l5843 10E9  
                                       i1l5829 1F6D                                         i1l5837 10D8  
                                       i1l5839 10DA                                         i1l5961 000A  
                                       i1l5963 000E                                         i1l5965 0016  
                                       i1l5967 001B                                         i1l5959 0006  
                                       i1l5969 0020                          ?_Sensor_Sampled_Reset 0078  
                   __end_of_EUSART_is_tx_ready 1EFE                                         u425_20 1F78  
                                       u441_20 000A                                         u425_21 1F77  
                                       u441_21 0009                                         u426_20 10E9  
                                       u442_20 000E                                         u426_21 10E8  
                                       u442_21 000D                                         u443_20 0016  
                                       u443_21 0015                                         u444_20 001B  
                                       u444_21 001A                                         u445_20 0020  
                                       u445_21 001F                                         u376_20 1F83  
                                       u376_21 1F82                                         u377_20 1202  
                                       u377_21 1201                                         u377_25 11FE  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
            MTOUCH_Button_InitializeAll@button 0025                 ??_Button_Reading_Update_Helper 0027  
                       _Button_DefaultCallback 1E58                __end_of_MTOUCH_Service_Mainloop 1652  
                                  ?_RX_Command 0070              __size_of_tmr0_long_press_duration 0006  
                       __end_of_GENERATE_PULSE 17CC                      ?_tmr0_long_press_duration 0070  
         __end_of_TMR1_DefaultInterruptHandler 1E58          __size_of_TMR1_DefaultInterruptHandler 0001  
                 _TMR1_DefaultInterruptHandler 1E57                              _Reset_Digit_Value 1EB5  
                       _Sensor_DefaultCallback 1E5A                                  _packet_sample 00B2  
                      __end_of_TMR1_StartTimer 1E65                                         ___tmul 16A9  
                                       ___wmul 1211                   Sensor_DefaultCallback@sensor 0072  
                             TX_Command@txData 0073                                      ??___eetoi 0020  
                         __end_of_Main_Routine 1798                                         _g_mass 0059  
                                    ??___itoee 0020                             ?_Reset_Digit_Value 0070  
                                    ??___ltdiv 0078                                      ??___lwdiv 0076  
                                    ??___lwmod 0076                                     _Timer_Mode 0543  
                                  ?_TX_Command 0070                                         _memcpy 167C  
                             ?_TMR0_Initialize 0070               __end_of_MTOUCH_Button_ServiceAll 1FA1  
                                 __pdataBIGRAM 230F                            ??_Reset_Digit_Value 0072  
                      _MTOUCH_Sensor_SampleAll 1151                   Button_DefaultCallback@button 0072  
                              ?_WDT_Initialize 0070                       ?_Sensor_RawSample_Update 0072  
                   __end_of_Sensor_Acquisition 07F4                                 ___memcpyee@ptr 0076  
                      ?_Button_Baseline_Update 0072       TMR1_SetInterruptHandler@InterruptHandler 0072  
     TMR0_SetInterruptHandler@InterruptHandler 0072                                      ?_FCN_NEXT 0070  
                      __end_of_TMR1_WriteTimer 1F8F                                  ??_Toggle_7seg 0074  
              MTOUCH_Sensor_RawSample_Get@name 0024                                     ___eecpymem 1734  
                             ?_TMR1_Initialize 0070                           __size_of_EUSART_Read 0010  
                            _SYSTEM_Initialize 10C2                        __end_of__initialization 006F  
          __size_of_Button_Baseline_Initialize 002F                 ?_MTOUCH_Sensor_Scan_Initialize 0070  
                           ?_SYSTEM_Initialize 0070                            _Button_StateMachine 00B7  
                    __end_of_Reset_Digit_Value 1EBE                     __end_of_Button_Tick_helper 167C  
                MTOUCH_Sensor_Calibrate@sensor 0070                                    _Manual_Mode 0F28  
                              ?_GENERATE_PULSE 0072                                     ___memcpyee 0887  
                      ?_Sensor_setScanFunction 0072                                 __pcstackCOMMON 0070  
                      _MTOUCH_Button_isPressed 15D8                                   __pidataBANK0 0002  
                                 __pidataBANK1 1F5D                            ??_SYSTEM_Initialize 007A  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                     __end_of_MTOUCH_Button_Tick 15B1  
                      __size_of_SET_SOUND_MODE 0110               __end_of_MTOUCH_Sensor_Initialize 153E  
                    ??_MTOUCH_Sensor_Calibrate 0072                               _Sensor_isEnabled 1F2D  
                    Timer_Mode@b_power_touched 0046                __end_of_Button_Deviation_Update 0DE8  
                     Sensor_setInactive@sensor 0072                                 _Button_Service 0A98  
             __end_of_Sensor_Acq_ExecutePacket 0A2D                     ?_Button_State_Initializing 002B  
                         Button_Service@button 0036                     __end_of_set_digit_counters 0D5A  
                               _OPTION_REGbits 0095                 __end_of_Button_Baseline_Update 0E78  
                         Sensor_Service@sensor 0035                            __size_of_RX_Command 0010  
                     _MTOUCH_Button_Initialize 0841                ??_EUSART_SetOverrunErrorHandler 0074  
                               _Sensor_Service 0BE5                        _Button_State_NotPressed 0E78  
                __size_of_MTOUCH_Sensor_Enable 0023                          __end_of_Toggle_OFFLED 10C2  
                           _Sensor_setInactive 1EA7                      __end_of_SYSTEM_Initialize 10D8  
                            _lowpowerActivated 0065               MTOUCH_Sensor_isCalibrated@sensor 0070  
                                   ??_FCN_NEXT 0074                         ??_Sensor_Sampled_Reset 007A  
                                      ?_FCN_UP 0070                                     __pbssBANK0 0053  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 1EC8  
                          __size_of_TX_Command 000E                             _gb_motor_timer_off 005D  
                          ?_Sensor_setInactive 0072                               _Sensor_setActive 1EA0  
                           Sensor_Service@name 0033                     __end_of_mtouch_button_init 1090  
               __end_of_Sensor_setScanFunction 2000                            __end_of_Toggle_7seg 11BA  
                                    ?_Motor_ON 0024                                     __pmaintext 1230  
                                ?_MTOUCH_Delay 0070               __end_of_TMR0_SetInterruptHandler 1E93  
               Automatic_Mode@motor_on_time_ms 00D3                                        ?___tmul 0072  
                                      ?___wmul 0072                               ?_TMR1_StartTimer 0070  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
               MTOUCH_Sensor_wasSampled@sensor 0078                                     _ge_time_ms 0008  
                                   __pintentry 0004                                    ?_Timer_Mode 0070  
                       __end_of_Button_Service 0B05                                        ?_memcpy 0072  
                                      _BAUDCON 019F            __end_of_MTOUCH_Button_InitializeAll 14B0  
                  _MTOUCH_Button_InitializeAll 148F                                        _APFCON0 011D  
                                      _APFCON1 011E                           _g_tmr1_motor_counter 00A8  
          __end_of_MTOUCH_Sensor_InitializeAll 1FB3                    _MTOUCH_Sensor_InitializeAll 1FA1  
                    ??_MTOUCH_Sensor_SampleAll 0037                              ?i1_TMR1_StopTimer 0070  
              __end_of_Sensor_RawSample_Update 11D6                           ??_Sensor_setInactive 0074  
                      __size_of_TMR1_StopTimer 0003              __size_of_MTOUCH_Sensor_wasSampled 0026  
                    ?_MTOUCH_Sensor_wasSampled 0070                             ??i1_TMR1_StopTimer 0070  
            __end_of_Button_State_Initializing 0BE5                         __end_of_Sensor_Service 0C56  
                     _MTOUCH_Button_ServiceAll 1F8F                        ?_Sensor_Acq_ExecuteScan 0070  
                MTOUCH_Sensor_SampleAll@sensor 0038                                 _ge_memory_mass 0000  
                                      _OSCTUNE 0098               __size_of_MTOUCH_Service_Mainloop 0029  
                 __end_of_Button_State_Pressed 0A98                       ??_EUSART_SetErrorHandler 0074  
             Button_Baseline_Initialize@button 0025                               _g_time_ms_backup 00AA  
                             ?_TMR1_WriteTimer 0070                           __size_of_MTOUCH_Tick 0004  
                                  ?___eecpymem 0072                                __size_of_FCN_UP 0082  
                   __size_of_Reset_Digit_Value 0009                          __size_of_Main_Routine 0032  
                    ??_MTOUCH_Button_isPressed 0072                    Manual_Mode@received_command 003C  
                               ??_MTOUCH_Delay 0072                                    ?___memcpyee 0072  
                               _packet_counter 0067                                     ??_Motor_ON 0079  
                      __size_of_Toggle_Touches 0010                        Sensor_Acquisition@retry 002E  
                                      ___eetoi 1FD8                                __size_of___tmul 002D  
               MTOUCH_Button_Initialize@button 0077                                __size_of___wmul 001F  
                                      ___itoee 1EFE                                        ___ltdiv 08D1  
                                      ___lwdiv 0805                                        ___lwmod 17CC  
                              ?_Button_Service 0070                                     _init_panel 15B1  
                              __size_of_memcpy 002D                                      _FCN_POWER 111E  
                                      __ptext1 15B1                                        __ptext2 1EB5  
                                      __ptext3 10C2                                        __ptext4 1E6C  
                                      __ptext5 1185                                        __ptext6 1E93  
                                      __ptext7 1FB3                                        __ptext8 1E8D  
                                      __ptext9 116B                    Button_Reading_Update@button 0029  
               ??_TMR1_DefaultInterruptHandler 0070                    __size_of_MTOUCH_CVD_ScanA_0 0020  
                  __size_of_MTOUCH_CVD_ScanA_1 0020                    __size_of_MTOUCH_CVD_ScanA_2 0020  
                      ?_tmr1_motor_on_duration 0070                    __size_of_MTOUCH_CVD_ScanA_3 0020  
                  __size_of_MTOUCH_CVD_ScanA_4 0020                    __size_of_MTOUCH_CVD_ScanB_0 0020  
                  __size_of_MTOUCH_CVD_ScanA_5 0020                    __size_of_MTOUCH_CVD_ScanB_1 0020  
                  __size_of_MTOUCH_CVD_ScanA_6 0020                    __size_of_MTOUCH_CVD_ScanB_2 0020  
                  __size_of_MTOUCH_CVD_ScanA_7 0020                    __size_of_MTOUCH_CVD_ScanB_3 0020  
                  __size_of_MTOUCH_CVD_ScanA_8 0020                    __size_of_MTOUCH_CVD_ScanB_4 0020  
                  __size_of_MTOUCH_CVD_ScanB_5 0020                    __size_of_MTOUCH_CVD_ScanB_6 0020  
                  __size_of_MTOUCH_CVD_ScanB_7 0020                    __size_of_MTOUCH_CVD_ScanB_8 0020  
                                    _T1CONbits 0018                       _MTOUCH_Sensor_Initialize 151A  
               __end_of_Sensor_Acq_ExecuteScan 0B74                          _OSCILLATOR_Initialize 1090  
                                 __size_of_abs 001A                      ??_Button_State_NotPressed 002D  
                              ?_Sensor_Service 0070              __size_of_TMR1_SetInterruptHandler 0006  
                             ??_Automatic_Mode 0049                       ??_PIN_MANAGER_Initialize 0072  
                    ?_TMR1_SetInterruptHandler 0072                         _g_motor_on_duration_ms 00B0  
               __size_of_Button_Reading_Update 0018                    __size_of_MTOUCH_needReburst 0002  
                __end_of_Button_Reading_Update 111E              MTOUCH_Sensor_InitializeAll@sensor 002A  
                     _Sensor_Acq_ExecutePacket 09C4                               _callback_sampled 00C5  
                        Manual_Mode@Flag_sound 0040                     __size_of_SYSTEM_Initialize 0016  
                                      clrloop0 1EC9                                   _Main_Routine 1766  
                             _callback_pressed 00BF                 MTOUCH_Sensor_Initialize@sensor 0028  
                         end_of_initialization 006F                                    _Toggle_7seg 119F  
                          __size_of_Timer_Mode 014B                        ?_Button_DefaultCallback 0072  
        __end_of_EUSART_SetOverrunErrorHandler 1E8D         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 1E87                                        memcpy@d 0021  
                                      memcpy@n 0076                                        memcpy@s 0023  
                                 _g_sss_status 0061                                        init_ram 07F4  
                                      initloop 07F5                                  ??_EEPROM_init 0025  
                      ?_Sensor_DefaultCallback 0072               __size_of_Button_Deviation_Update 008E  
                            _EUSART_Initialize 14D3                                   ??_RX_Command 0072  
                             ___ltdiv@dividend 0075                   ??_MTOUCH_Sensor_isCalibrated 0072  
                           ?_EUSART_Initialize 0070            __end_of_MTOUCH_Sensor_RawSample_Get 1629  
                  _MTOUCH_Sensor_RawSample_Get 1600                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0800                                ___memcpyee@from 0072  
                           _EUSART_is_tx_ready 1EEF                                ___memcpyee@size 0073  
                               _SET_SOUND_MODE 068E                                Manual_Mode@Flag 003F  
                          _mtouch_request_init 0063                                   ??_TX_Command 0073  
                                MTOUCH_Delay@i 0073                            ??_EUSART_Initialize 0074  
               __end_of_tmr1_motor_on_duration 1211                               ??_WDT_Initialize 0072  
                                   ?_FCN_POWER 0070                            __size_of___eecpymem 0032  
                     _TMR0_SetInterruptHandler 1E8D                                      _PORTAbits 000C  
                                    _PORTBbits 000D                            ?_EUSART_is_rx_ready 0070  
                       Sensor_setActive@sensor 0072                            ?_EUSART_is_tx_ready 0070  
                     Motor_ON@motor_on_time_ms 0024                  Button_Deviation_Update@button 0072  
                        __size_of_EUSART_Write 000A                               ___ltdiv@quotient 0020  
                   MTOUCH_Sensor_Enable@sensor 0078                            __size_of___memcpyee 004A  
                           __end_of_RX_Command 1F5D                            _callback_notPressed 00BD  
          __size_of_MTOUCH_Sensor_isCalibrated 0002                 __end_of_Button_DefaultCallback 1E59  
              __size_of_EUSART_SetErrorHandler 0006                             _sensor_globalFlags 0069  
                       __size_of_MTOUCH_Random 0015                       __end_of_Sensor_isEnabled 1F3D  
                             ??_GENERATE_PULSE 0076                 __end_of_Sensor_DefaultCallback 1E5B  
                    __end_of_EUSART_Initialize 14F6                              __size_of_FCN_NEXT 0026  
                               __end_of_FCN_UP 0CD8                           ??_EUSART_is_rx_ready 0072  
                 Sensor_Acq_ExecuteScan@result 0078                             __end_of_TX_Command 1EEF  
                         ??_EUSART_is_tx_ready 0072                                      _TXSTAbits 019E  
             __size_of_Sensor_RawSample_Update 001C                                   ?_Manual_Mode 0070  
                           _Sensor_Acquisition 079E                         __end_of_SET_SOUND_MODE 079E  
                          __end_of_EEPROM_init 151A                           _Button_State_Pressed 0A2D  
                   _EUSART_DefaultErrorHandler 0000                            ?_Sensor_Acquisition 002B  
                                __pidataBIGRAM 091E                                 __end_of___tmul 16D6  
                               __end_of___wmul 1230                     ??_MTOUCH_Button_Initialize 0072  
                                  ?_init_panel 0070                          GENERATE_PULSE@counter 0076  
              ??_MTOUCH_Sensor_Scan_Initialize 0072                                   _EUSART_Write 1EBE  
                            __size_of_TMR0_ISR 0011                              __size_of_TMR1_ISR 0017  
                               _TMR1_StopTimer 1E65                  Sensor_Acq_ExecutePacket@error 002A  
                           _Button_Tick_helper 1652                                 __end_of_memcpy 16A9  
                       ?_OSCILLATOR_Initialize 0070                            MTOUCH_Button_Tick@i 0020  
                     __end_of_Sensor_setActive 1EA7                    ??_Button_State_Initializing 002D  
                          start_initialization 0028                        _MTOUCH_Service_Mainloop 1629  
                     __size_of_TMR0_Initialize 0012                __size_of_PIN_MANAGER_Initialize 001A  
                         __end_of_MTOUCH_Delay 1FD8                             _MTOUCH_Button_Tick 158A  
                          ?_Button_Tick_helper 0072                                    __end_of_abs 1151  
                                ??_EUSART_Read 0072                           ??_Sensor_Acquisition 002D  
                                     ??_FCN_UP 0074                            ?_MTOUCH_Button_Tick 0070  
                           _set_digit_counters 0CD8                Button_State_Initializing@button 002B  
                     _tmr0_long_press_duration 1E75                 ?_EUSART_SetOverrunErrorHandler 0072  
             __end_of_MTOUCH_Sensor_wasSampled 1564                                 _Toggle_Touches 1F1D  
                         ??_Button_Tick_helper 0074                       __size_of_TMR1_Initialize 001A  
                              ?_SET_SOUND_MODE 0070                            ?_set_digit_counters 0020  
                 __end_of_MTOUCH_Sensor_Enable 14D3                     _EUSART_FramingErrorHandler 00D1  
                                     ??___tmul 0078                          ?_Button_State_Pressed 002B  
                                     ??___wmul 0076                         _EUSART_SetErrorHandler 1E7B  
                                 ??_Timer_Mode 003B                              __size_of_Motor_ON 001D  
                   ??_MTOUCH_Button_ServiceAll 0038                         __end_of_TMR1_StopTimer 1E68  
                                  __pdataBANK0 006A                                    __pdataBANK1 00B7  
                                _MTOUCH_Random 1097                                       ??_memcpy 0078  
                 ??_Button_Baseline_Initialize 0027                           ??_MTOUCH_Button_Tick 0076  
                                  ??_FCN_POWER 007A                             _mtouch_button_init 1000  
                   Sensor_Sampled_Reset@sensor 0078                                 ___tmul@product 0020  
                                  __pbssEEDATA 0000                                    __pbssBIGRAM 2360  
                                  __pbssCOMMON 007A                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00D3  
                         ??_set_digit_counters 0024                     Manual_Mode@b_power_touched 003E  
               MTOUCH_Button_ServiceAll@button 0039                                   ??___eecpymem 0074  
                          Sensor_Service@error 0034                      __size_ofi1_TMR1_StopTimer 0003  
                __size_of_Sensor_Sampled_Reset 0007                     __size_of_EUSART_Initialize 0023  
                          __size_of_init_panel 0027                             __end_of_Timer_Mode 068E  
                      _Button_Deviation_Update 0D5A                            __end_of_EUSART_Read 1F4D  
                    _Button_State_Initializing 0B74             __end_of_MTOUCH_Sensor_isCalibrated 1E5D  
                   _MTOUCH_Sensor_isCalibrated 1E5B                                  _g_mass_backup 00AC  
                        _TMR0_InterruptHandler 00CB                                    _EEPROM_init 14F6  
                                    __pnvBANK1 00C7                         __end_of_Toggle_Touches 1F2D  
                            _Sensor_setSampled 1EAE                                   ??___memcpyee 0074  
                                  _g_mass_calc 0053                               ___lwdiv@dividend 0074  
                       _PIN_MANAGER_Initialize 116B                               ??_Button_Service 0031  
                     ?_MTOUCH_Sensor_Calibrate 0070                             ?_Sensor_setSampled 0072  
           Button_Reading_Update_Helper@button 0025               __end_of_TMR1_SetInterruptHandler 1E99  
                   ??_MTOUCH_Sensor_Initialize 0024                                       ?___eetoi 0078  
                                    __ptext100 1F1D                                      __ptext101 10EF  
                                    __ptext110 14F6                                      __ptext102 1F0D  
                                    __ptext111 1FD8                                      __ptext103 10AC  
                                    __ptext120 1E56                                      __ptext112 1734  
                                    __ptext104 119F                                      __ptext121 1E75  
                                    __ptext105 1EE1                                      __ptext114 10D8  
                                    __ptext106 1EEF                                      __ptext115 1E57  
                                    __ptext107 1EBE                                      __ptext116 11F3  
                                    __ptext108 068E                                      __ptext117 1E5F  
                                    __ptext109 1798                                      __ptext118 1F7E  
                                    __ptext119 1F6D                                      _g_time_ms 006A  
                                     ?___itoee 0078                                 ?_MTOUCH_Random 0070  
                                     ?___ltdiv 0072                                       ?___lwdiv 0072  
                                     ?___lwmod 0072                         __size_of_Toggle_OFFLED 0016  
                              ?_TMR1_StopTimer 0070                               ??_Sensor_Service 002F  
                   ??_Sensor_Acq_ExecutePacket 0026                   ??_INTERRUPT_InterruptManager 0072  
                          ??_Sensor_setSampled 0074                      ??_MTOUCH_Service_Mainloop 003A  
                           __end_of___eecpymem 1766                                  _g_memory_mass 00A0  
                  __size_of_Sensor_setInactive 0007                       __size_of_TMR1_StartTimer 0003  
                                _g_mode_status 0060                                    _g_time_calc 0056  
               Sensor_Acq_ExecutePacket@sensor 0024                                  ??_MTOUCH_Tick 007A  
                             ___lwdiv@quotient 0078                             __end_of___memcpyee 08D1  
                                     _FCN_NEXT 1564                                   ?_Toggle_7seg 0070  
                            ??_TMR0_Initialize 0074                      __end_of_Sensor_setSampled 1EB5  
                               ___wmul@product 0076                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0072                                       _LATBbits 010D  
                                     _LATCbits 010E                             _currentScannSensor 0068  
                      _Sensor_RawSample_Update 11BA                                      clear_ram0 1EC8  
                                     _PIE1bits 0091                                ?_Toggle_Touches 0070  
                            _eusartRxLastError 00B6                       __size_of_TMR1_WriteTimer 0011  
          __size_of_INTERRUPT_InterruptManager 0022                     ??_TMR0_SetInterruptHandler 0074  
                              ___ltdiv@divisor 0072                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0074                         ??_Button_State_Pressed 002D  
                              ___ltdiv@counter 0023         __end_of_MTOUCH_Sensor_Sampled_ResetAll 1734  
      __size_of_MTOUCH_Sensor_Sampled_ResetAll 002F                 _MTOUCH_Sensor_Sampled_ResetAll 1705  
                         __size_of_Manual_Mode 00D8                       ?_MTOUCH_Sensor_SampleAll 0070  
                                     _TMR0_ISR 1F6D              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 10D8                       _MTOUCH_Sensor_wasSampled 153E  
                           _mtouch_time_toScan 0064                     __end_of_MTOUCH_CVD_ScanA_0 128F  
                   __end_of_MTOUCH_CVD_ScanA_1 12AF                     __end_of_MTOUCH_CVD_ScanA_2 12CF  
                   __end_of_MTOUCH_CVD_ScanA_3 12EF                     __end_of_MTOUCH_CVD_ScanA_4 130F  
                   __end_of_MTOUCH_CVD_ScanB_0 13AF                     __end_of_MTOUCH_CVD_ScanA_5 132F  
                   __end_of_MTOUCH_CVD_ScanB_1 13CF                     __end_of_MTOUCH_CVD_ScanA_6 134F  
                   __end_of_MTOUCH_CVD_ScanB_2 13EF                     __end_of_MTOUCH_CVD_ScanA_7 136F  
                   __end_of_MTOUCH_CVD_ScanB_3 140F                     __end_of_MTOUCH_CVD_ScanA_8 126F  
                   __end_of_MTOUCH_CVD_ScanB_4 142F                     __end_of_MTOUCH_CVD_ScanB_5 144F  
                   __end_of_MTOUCH_CVD_ScanB_6 146F                     __end_of_MTOUCH_CVD_ScanB_7 148F  
                   __end_of_MTOUCH_CVD_ScanB_8 138F                       ??_Button_Baseline_Update 0074  
                            ??_TMR1_Initialize 0074                                     _ADCON0bits 009D  
                        __size_of_MTOUCH_Delay 0013                              ___wmul@multiplier 0072  
                   __end_of_MTOUCH_needReburst 1E5F                            ___tmul@multiplicand 0075  
                                 EEPROM_init@i 0026                                 _g_touch_status 00B4  
                         _MTOUCH_Sensor_Enable 14B0                                    _EUSART_Read 1F3D  
                            _Toggle_PushButton 1F0D                       Button_Tick_helper@button 0072  
                    ??_Button_Deviation_Update 0020                                  _Toggle_OFFLED 10AC  
                        _Button_Reading_Update 1106                       ??_Sensor_setScanFunction 0074  
                     ?_MTOUCH_Button_isPressed 0070                             ?_Toggle_PushButton 0070  
                            ?_Sensor_isEnabled 0072                            __end_of_MTOUCH_Tick 1E6C  
                            _MTOUCH_Initialize 1ED4                              _Toggle_Touch_LEDs 10EF  
              __end_of_MTOUCH_Sensor_Calibrate 1E5A                                     _EECON1bits 0195  
                           ??_Sensor_isEnabled 0074                             ?_MTOUCH_Initialize 0070  
                           ?_Toggle_Touch_LEDs 0070                            ??_Toggle_PushButton 0072  
                                    memcpy@tmp 0020                                       _Motor_ON 11D6  
                              ??_MTOUCH_Random 0072                                   _MTOUCH_Delay 1FC5  
                                 _sample_delay 0066                        ??_OSCILLATOR_Initialize 0072  
           __end_of_Button_Baseline_Initialize 1705                     _Button_Baseline_Initialize 16D6  
                     Sensor_Acquisition@sensor 002B                            _EUSART_ErrorHandler 00CD  
                             __size_of___eetoi 0014                            ??_MTOUCH_Initialize 007A  
                          ??_Toggle_Touch_LEDs 0072                             SET_SOUND_MODE@MODE 0020  
                                 ??_init_panel 0075                               __size_of___itoee 000F  
                             __size_of___ltdiv 004D                               __size_of___lwdiv 003C  
                             __size_of___lwmod 0034                       ?_Button_State_NotPressed 002B  
                     _TMR1_SetInterruptHandler 1E93                             Button_Service@name 0035  
                        _TMR1_InterruptHandler 00C7                              ?_Sensor_setActive 0072  
                GENERATE_PULSE@NUMBER_OF_PULSE 0072                     ??_tmr0_long_press_duration 0070  
                                 _Sensor_scanA 00C3                                   _Sensor_scanB 00C1  
                              ___lwdiv@divisor 0072                      __end_of_Toggle_PushButton 1F1D  
                           ??_Sensor_setActive 0074                                  _g_power_event 005E  
                              ___lwdiv@counter 0077                          ?_MTOUCH_Sensor_Enable 0070  
                                     __ptext10 1090                                       __ptext11 14D3  
                                     __ptext20 17CC                                       __ptext12 1E87  
                                     __ptext21 0805                                       __ptext13 1E81  
                                   _T1GCONbits 0019                                       __ptext30 0F28  
                                     __ptext22 1EFE                                       __ptext14 1E7B  
                                     __ptext31 1F4D                                       __ptext23 0887  
                                     __ptext15 1766                                       __ptext40 0BE5  
                                     __ptext32 0800                                       __ptext24 0C56  
                                     __ptext16 0073                                       __ptext41 1EAE  
                                     __ptext33 1F3D                                       __ptext25 1564  
                                     __ptext17 0CD8                                       __ptext50 1FEC  
                                     __ptext42 11BA                                       __ptext34 1629  
                                     __ptext26 1E65                                       __ptext18 16A9  
                                     __ptext51 0B05                                       __ptext43 1E5A  
                                     __ptext35 1E5D                                       __ptext27 11D6  
                                     __ptext19 0543                                       __ptext60 136F  
                                     __ptext52 146F                                       __ptext44 079E  
                                     __ptext36 1E68                                       __ptext28 08D1  
                                     __ptext61 134F                                       __ptext53 144F  
                                     __ptext45 1137                                       __ptext37 158A  
                                     __ptext29 1E62                                       __ptext70 1097  
                                     __ptext62 132F                                       __ptext54 142F  
                                     __ptext46 1EA7                                       __ptext38 1652  
                                     __ptext71 1FC5                                       __ptext63 130F  
                                     __ptext55 140F                                       __ptext47 1EA0  
                                     __ptext39 1151                                       __ptext80 167C  
                                     __ptext72 1ED4                                       __ptext64 12EF  
                                     __ptext56 13EF                                       __ptext48 1F2D  
                                     __ptext81 1F8F                                       __ptext73 1E70  
                                     __ptext65 12CF                                       __ptext57 13CF  
                                     __ptext49 09C4                                       __ptext90 1E58  
                                     __ptext82 0A98                                       __ptext74 1705  
                                     __ptext66 12AF                                       __ptext58 13AF  
                                     __ptext91 0DE8                                       __ptext83 153E  
                                     __ptext75 1FA1                                       __ptext67 128F  
                                     __ptext59 138F                                       __ptext92 16D6  
                                     __ptext84 1E5B                                       __ptext76 151A  
                                     __ptext68 126F                                       __ptext93 1106  
                                     __ptext85 0E78                                       __ptext77 1E99  
                                     __ptext69 124F                                       __ptext94 096F  
                                     __ptext86 0B74                                       __ptext78 14B0  
                                     __ptext95 1600                                       __ptext87 0A2D  
                                     __ptext79 148F                                       __ptext96 1211  
                                     __ptext88 0841                                       __ptext97 0D5A  
                                     __ptext89 1E59                                       __ptext98 15D8  
                                     __ptext99 111E                                 ?_Toggle_OFFLED 0070  
                                     _g_status 005F                              ??_TMR1_StartTimer 0072  
                    __end_of_MTOUCH_Initialize 1EE1                      ??_Sensor_RawSample_Update 0074  
                    __end_of_Toggle_Touch_LEDs 1106                               i1_TMR1_StopTimer 1E5F  
          Sensor_Acq_ExecutePacket@ADCON0_temp 0027            Sensor_Acq_ExecutePacket@ADCON1_temp 0028  
                   __size_of_Sensor_setSampled 0007                               ??_SET_SOUND_MODE 0078  
                  __size_of_EUSART_is_rx_ready 0005                                  __size_of_main 001F  
                      __size_of_Automatic_Mode 04D0                             __end_of_init_panel 15D8  
                  __size_of_EUSART_is_tx_ready 000F                __end_of_MTOUCH_Sensor_SampleAll 116B  
         __end_of_TMR0_DefaultInterruptHandler 1E57          __size_of_TMR0_DefaultInterruptHandler 0001  
                 _TMR0_DefaultInterruptHandler 1E56                        ?_EUSART_SetErrorHandler 0072  
EUSART_SetOverrunErrorHandler@interruptHandler 0072                   Sensor_setScanFunction@sensor 0072  
                                     int$flags 007E                       ??_Sensor_Acq_ExecuteScan 0020  
           __size_of_Button_State_Initializing 0071             __end_of_INTERRUPT_InterruptManager 0026  
                   _INTERRUPT_InterruptManager 0004              Sensor_Acq_ExecutePacket@GIE_state 0029  
        __end_of_EUSART_SetFramingErrorHandler 1E87         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 1E81                              ??_TMR1_WriteTimer 0072  
              __size_of_Button_Baseline_Update 0090                   ?_MTOUCH_Button_InitializeAll 0070  
                 ?_MTOUCH_Sensor_InitializeAll 0070                                ___eecpymem@from 0072  
                              ___eecpymem@size 0073                                  _mtouch_button 2360  
                                   _INTCONbits 000B                                  _mtouch_sensor 230F  
                                     memcpy@d1 0072                                       memcpy@s1 0074  
              __end_of_MTOUCH_Button_isPressed 1600                                    _MTOUCH_Tick 1E68  
                       ?_Button_Reading_Update 0029               Button_Deviation_Update@deviation 0074  
                      __size_of_WDT_Initialize 0004                   MTOUCH_Button_Initialize@name 0076  
            __size_of_MTOUCH_Button_Initialize 0046                                       intlevel1 0000  
                    ?_MTOUCH_Button_Initialize 0070                    __size_of_Sensor_Acquisition 0056  
              __size_of_Sensor_setScanFunction 0014                               ___lwmod@dividend 0074  
                      ?_PIN_MANAGER_Initialize 0070                           __size_of_Toggle_7seg 001B  
               __end_of_EUSART_SetErrorHandler 1E81                                   ?_EEPROM_init 0070  
                  ?_MTOUCH_Sensor_isCalibrated 0070                              MTOUCH_Random@seed 007B  
                             ??_TMR1_StopTimer 0072                  ?_TMR0_DefaultInterruptHandler 0070  
                     ??_tmr1_motor_on_duration 0070                    __size_of_Button_Tick_helper 002A  
              __end_of_Button_State_NotPressed 0F28                        __size_of_GENERATE_PULSE 0034  
                            ___tmul@multiplier 0072  EUSART_SetFramingErrorHandler@interruptHandler 0072  
                 __end_of_Sensor_Sampled_Reset 1EA0                       set_digit_counters@buffer 0025  
                  __size_of_MTOUCH_Button_Tick 0027                                  __pstringtext1 1000  
                                 _SOUND_MODE_e 00B5                                     _OPTION_REG 0095  
                ??_MTOUCH_Button_InitializeAll 0079                       ??_Button_DefaultCallback 0073  
                              ___lwmod@divisor 0072                  ??_MTOUCH_Sensor_InitializeAll 0029  
                              _TMR0_Initialize 1FB3               __size_of_MTOUCH_Sensor_Calibrate 0001  
                              ___lwmod@counter 0077                         ??_MTOUCH_Sensor_Enable 0020  
                              ??_Toggle_OFFLED 0072                     __size_of_Toggle_PushButton 0010  
                     ??_Sensor_DefaultCallback 0073                    __size_of_set_digit_counters 0082  
         __end_of_Button_Reading_Update_Helper 09C4          __size_of_Button_Reading_Update_Helper 0055  
                 _Button_Reading_Update_Helper 096F                                  ___eecpymem@cp 0076  
                                ___eecpymem@to 0077                                  ?_Main_Routine 0070  
            __size_of_MTOUCH_Button_ServiceAll 0012                      ?_MTOUCH_Button_ServiceAll 0070  
                Button_State_NotPressed@button 002B                               ??_Toggle_Touches 0072  
                           EUSART_Write@txData 0072                     __size_of_MTOUCH_Initialize 000D  
                   __size_of_Toggle_Touch_LEDs 0017                 __end_of_PIN_MANAGER_Initialize 1185  
                       _Button_Baseline_Update 0DE8                                     _STATUSbits 0003  
                       set_digit_counters@mass 0020                    MTOUCH_Button_isPressed@name 0076  
                       set_digit_counters@time 0022                     ??_MTOUCH_Sensor_wasSampled 0020  
                              _TMR1_Initialize 1185                   _g_7seg_change_digit_duration 00AE  
                                 ___eetoi@addr 0024                                   ___eetoi@data 0022  
